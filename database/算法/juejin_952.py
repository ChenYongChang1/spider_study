{"err_no": 0, "err_msg": "success", "data": [{"article_id": "6844903839607291912", "article_info": {"article_id": "6844903839607291912", "user_id": "1310273588697326", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844903839607291912", "cover_image": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/5/7/16a92b91afccc37a~tplv-t2oaga2asx-image.image", "is_gfw": 0, "title": "神奇补0解决链表相加：LeeCode002两数相加", "brief_content": "该解法使用数字相加的方法进行计算，但该解法有一个致命的问题是整数溢出。所以，严格意义上说，这种方式是错误的。代码如下： 该解法使用一个变量表示进位值。如下图，temp表示进位。将两个list长度改为一致，通过补0操作。 关于没到题目的解法我都发布在我的博客：https://ri…", "is_english": 0, "is_original": 1, "user_index": 29.909090909091, "original_type": 0, "original_author": "", "content": "", "ctime": "1557239782", "mtime": "1598502848", "rtime": "1557241217", "draft_id": "6845076301087277070", "view_count": 475, "collect_count": 2, "digg_count": 4, "comment_count": 0, "hot_index": 27, "is_hot": 0, "rank_index": 0.00013961, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "1310273588697326", "user_name": "RiverLi", "company": "", "job_title": "公众号: RiverLi", "avatar_large": "https://sf3-ttcdn-tos.pstatp.com/img/user-avatar/5a1af1283313f59b429cbbe2f51cdbf9~300x300.image", "level": 2, "description": "交流才能产生火花", "followee_count": 10, "follower_count": 3133, "post_article_count": 35, "digg_article_count": 32, "got_digg_count": 517, "got_view_count": 52540, "post_shortmsg_count": 2, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 805, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903839607291912, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6844903607402250253", "article_info": {"article_id": "6844903607402250253", "user_id": "8451821960286", "category_id": "6809637767543259144", "tag_ids": [6809640398105870343, 6809640407484334093, 6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844903607402250253", "cover_image": "", "is_gfw": 0, "title": "JavaScript 模块相关", "brief_content": "在编写稍大些的项目的时候，模块化和组件化是当前 JS 的最佳解决方案。在NodeJS中，一般将代码合理拆分到不同的JS文件中，每一个文件就是一个模块，而文件路径就是模块名。 Node.js是通过模块的形式进行组织与调用的，在编写每个模块时，都有require、exports、m…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1526612636", "mtime": "1599472435", "rtime": "1526636406", "draft_id": "6845075428307107854", "view_count": 1107, "collect_count": 25, "digg_count": 34, "comment_count": 0, "hot_index": 89, "is_hot": 0, "rank_index": 0.00013955, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "8451821960286", "user_name": "慢城小ZA", "company": "", "job_title": "undefined", "avatar_large": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/5/18/163713a6ba7d735d~tplv-t2oaga2asx-image.image", "level": 2, "description": "", "followee_count": 80, "follower_count": 21, "post_article_count": 8, "digg_article_count": 58, "got_digg_count": 71, "got_view_count": 8337, "post_shortmsg_count": 3, "digg_shortmsg_count": 8, "isfollowed": false, "favorable_author": 0, "power": 154, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546519, "tag_id": "6809640398105870343", "tag_name": "JavaScript", "color": "#616161", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/5d70fd6af940df373834.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1435884803, "mtime": 1631692583, "id_type": 9, "tag_alias": "", "post_article_count": 67405, "concern_user_count": 398956}, {"id": 2546526, "tag_id": "6809640407484334093", "tag_name": "前端", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/bac28828a49181c34110.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 1, "ctime": 1435971546, "mtime": 1631692835, "id_type": 9, "tag_alias": "", "post_article_count": 88828, "concern_user_count": 527704}, {"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903607402250253, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6974343102983045128", "article_info": {"article_id": "6974343102983045128", "user_id": "2568097069536599", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624, 6809640407484334093], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "LeetCode第62题：不同路径", "brief_content": "题干 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。 机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1623840951", "mtime": "1623899959", "rtime": "1623899959", "draft_id": "6974343050797531166", "view_count": 51, "collect_count": 0, "digg_count": 1, "comment_count": 0, "hot_index": 3, "is_hot": 0, "rank_index": 0.00013905, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2568097069536599", "user_name": "奥奥奥", "company": ".", "job_title": "💰端开发", "avatar_large": "https://sf1-ttcdn-tos.pstatp.com/img/user-avatar/1a54c595972706e5b0bc897159879404~300x300.image", "level": 2, "description": "", "followee_count": 7, "follower_count": 20, "post_article_count": 134, "digg_article_count": 189, "got_digg_count": 239, "got_view_count": 13812, "post_shortmsg_count": 0, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 377, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}, {"id": 2546526, "tag_id": "6809640407484334093", "tag_name": "前端", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/bac28828a49181c34110.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 1, "ctime": 1435971546, "mtime": 1631692835, "id_type": 9, "tag_alias": "", "post_article_count": 88828, "concern_user_count": 527704}], "user_interact": {"id": 6974343102983045128, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6844903834272137224", "article_info": {"article_id": "6844903834272137224", "user_id": "2260251638247063", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844903834272137224", "cover_image": "", "is_gfw": 0, "title": "你能找到心仪的妹子吗？- 时间复杂度进阶", "brief_content": "这个五一是个不平凡的五一，苍老师成功诞下了双胞胎。 假如有一天，有这样一个机会降临到你的头上。 你的面前是一条很长很长的路，这条路上齐刷刷的站满了妹纸，没错，就是妹子，一双双大白腿闪闪发光。 但是呢，有一个条件，你只能从路的这头走到那头，只要你选择了一个妹子，就要离开这里，这个…", "is_english": 0, "is_original": 1, "user_index": 3, "original_type": 0, "original_author": "", "content": "", "ctime": "1556771366", "mtime": "1599896184", "rtime": "1556775100", "draft_id": "6845076294997114888", "view_count": 786, "collect_count": 7, "digg_count": 12, "comment_count": 3, "hot_index": 54, "is_hot": 0, "rank_index": 0.00013878, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2260251638247063", "user_name": "于是乎_", "company": "", "job_title": "前端", "avatar_large": "https://sf1-ttcdn-tos.pstatp.com/img/user-avatar/2a5ff9aa7543b7d30983f3c54380cfbd~300x300.image", "level": 3, "description": "公众号：前端小苑", "followee_count": 33, "follower_count": 449, "post_article_count": 22, "digg_article_count": 78, "got_digg_count": 1164, "got_view_count": 80458, "post_shortmsg_count": 1, "digg_shortmsg_count": 4, "isfollowed": false, "favorable_author": 0, "power": 2317, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903834272137224, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6923216558269399054", "article_info": {"article_id": "6923216558269399054", "user_id": "1724450865431149", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "算法刷题——双指针", "brief_content": "给你 n 个非负整数 a1，a2，...，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内 画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0)。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。 这道题实际上就是求Max…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1611937030", "mtime": "1612017587", "rtime": "1612017587", "draft_id": "6923095541089828872", "view_count": 196, "collect_count": 1, "digg_count": 1, "comment_count": 0, "hot_index": 10, "is_hot": 0, "rank_index": 0.00013865, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "1724450865431149", "user_name": "从零开始的程序媛", "company": "", "job_title": "研一在读！准备找实习", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/606cb5f25ab52015a54add72b6dd052e~300x300.image", "level": 2, "description": "研一在读，准备找前端实习！", "followee_count": 11, "follower_count": 32, "post_article_count": 26, "digg_article_count": 69, "got_digg_count": 84, "got_view_count": 7087, "post_shortmsg_count": 0, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 154, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6923216558269399054, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6844903882305306637", "article_info": {"article_id": "6844903882305306637", "user_id": "2330620350186350", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844903882305306637", "cover_image": "", "is_gfw": 0, "title": "【问答】算法数据结构里面有没有什么有趣的内容？", "brief_content": "有很多。 我记得《算法导论》里就有一些很有意思的例子，惊喜在本文末尾。 前提条件基本是这样，然后就是分析了。 由于有多少人你就要面试多少次，所以小费用这一部分没法节省。 问题的关键就在于如何尽量减少大费用的支出了。 最坏的情况就是 n 个应聘者的质量逐天递增，你每次都发现你每天…", "is_english": 0, "is_original": 1, "user_index": 12.20433621931, "original_type": 0, "original_author": "", "content": "", "ctime": "1562554936", "mtime": "1598777367", "rtime": "1562554936", "draft_id": "6845076366489042951", "view_count": 713, "collect_count": 2, "digg_count": 3, "comment_count": 1, "hot_index": 39, "is_hot": 0, "rank_index": 0.00013839, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2330620350186350", "user_name": "方应杭", "company": "", "job_title": "前阿里巴巴工程师，前腾讯工程师", "avatar_large": "https://sf3-ttcdn-tos.pstatp.com/img/user-avatar/3e9cbe6cd5f3fdd3d1d0cd996fbc8030~300x300.image", "level": 5, "description": "加我微信 frank_fang", "followee_count": 47, "follower_count": 12099, "post_article_count": 105, "digg_article_count": 34, "got_digg_count": 8828, "got_view_count": 585038, "post_shortmsg_count": 48, "digg_shortmsg_count": 13, "isfollowed": false, "favorable_author": 1, "power": 15301, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903882305306637, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6936921843701907469", "article_info": {"article_id": "6936921843701907469", "user_id": "2084329779636727", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "介于简单和困难之间的薛定谔算法题？？｜刷题打卡", "brief_content": "今天的算法可以说很有意思了，当你用暴力法破解的时候他就是一道简单的题目，而当暴力法一旦被判超时，那难度蹭蹭蹭就上来了，就跟薛定谔的脑血压一样。 给你一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动…", "is_english": 0, "is_original": 1, "user_index": 2.906920898424683, "original_type": 0, "original_author": "", "content": "", "ctime": "1615128008", "mtime": "1615185978", "rtime": "1615185978", "draft_id": "6936822421735374862", "view_count": 85, "collect_count": 0, "digg_count": 1, "comment_count": 0, "hot_index": 5, "is_hot": 0, "rank_index": 0.00013779, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2084329779636727", "user_name": "灬青芒灬", "company": "", "job_title": "前端工程师", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/5d0137128e0b96460313483c60bf6463~300x300.image", "level": 2, "description": "想要成为业内小有名气的前端", "followee_count": 32, "follower_count": 18, "post_article_count": 15, "digg_article_count": 38, "got_digg_count": 71, "got_view_count": 4755, "post_shortmsg_count": 34, "digg_shortmsg_count": 2, "isfollowed": false, "favorable_author": 0, "power": 118, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6936921843701907469, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6915763611415789576", "article_info": {"article_id": "6915763611415789576", "user_id": "4265760846775613", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "前端就该用 JS 刷算法9", "brief_content": "这道题其实就是让你了解一下，为啥我们做树题的时候，明明在做树题（或者链表）这些题目的时候，控制台的例子都是数组，而不是一个可视化的树结构的数据，之前我一直很难理解，直到了解到序列化和反序列化之后。 个人理解这是为了兼容不同语言内置数据结构的不同而做出来的优化策略，比方说 JS …", "is_english": 0, "is_original": 1, "user_index": 3.089693646737103, "original_type": 0, "original_author": "", "content": "", "ctime": "1610201778", "mtime": "1610247306", "rtime": "1610247306", "draft_id": "6915545458056101895", "view_count": 149, "collect_count": 2, "digg_count": 1, "comment_count": 0, "hot_index": 8, "is_hot": 0, "rank_index": 0.00013744, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "4265760846775613", "user_name": "厨猿加加", "company": "某不知名但人很nice的非互联网公司", "job_title": "打工人中最会做饭的厨子", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/60bf11e1ca44d36940130e27da8613b1~300x300.image", "level": 2, "description": "做勤能补拙的打工人，做给女朋友做饭的前端", "followee_count": 97, "follower_count": 30, "post_article_count": 71, "digg_article_count": 13, "got_digg_count": 104, "got_view_count": 8811, "post_shortmsg_count": 4, "digg_shortmsg_count": 7, "isfollowed": false, "favorable_author": 0, "power": 192, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6915763611415789576, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6844903958989783048", "article_info": {"article_id": "6844903958989783048", "user_id": "2119514148841431", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844903958989783048", "cover_image": "", "is_gfw": 0, "title": "每天一道前端算法题--回溯算法--N皇后问题", "brief_content": "先来了解一下什么时回溯算法。回溯的处理思想，有点类似枚举搜索。我们枚举所有的解，找到满足期望的解。为了有规律地枚举所有可能的解，避免遗漏和重复，我们把问题求解的过程分为多个阶段。每个阶段，我们都会面对一个岔路口，我们先随意选一条路走，当发现这条路走不通的时候（不符合期望的解），…", "is_english": 0, "is_original": 1, "user_index": 3.0896936467371, "original_type": 0, "original_author": "", "content": "", "ctime": "1570530641", "mtime": "1598527077", "rtime": "1570531590", "draft_id": "6845076486915883021", "view_count": 709, "collect_count": 12, "digg_count": 5, "comment_count": 0, "hot_index": 40, "is_hot": 0, "rank_index": 0.00013659, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2119514148841431", "user_name": "前端小白说", "company": "饿了么", "job_title": "前端开发工程师", "avatar_large": "https://sf3-ttcdn-tos.pstatp.com/img/mosaic-legacy/3795/3033762272~300x300.image", "level": 1, "description": "", "followee_count": 14, "follower_count": 4, "post_article_count": 3, "digg_article_count": 73, "got_digg_count": 14, "got_view_count": 2592, "post_shortmsg_count": 0, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 39, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903958989783048, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6935733149385097230", "article_info": {"article_id": "6935733149385097230", "user_id": "1063982985386423", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "一颗红心多种解法！响应掘金号召3.3.2｜刷题打卡", "brief_content": "可以使用一个栈存储点，每次出栈一个点，如果其向右向左的点存在，就入栈，每次遍历到 (m - 1. n - 1)这个点是ret++，最后return ret 可以使用一个队列存储点，每次出队一个点，如果其向右向左的点存在，就入队，每次遍历到 (m - 1. n - 1)这个点是r…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1614851241", "mtime": "1615451728", "rtime": "1614923477", "draft_id": "6935728440649711629", "view_count": 83, "collect_count": 0, "digg_count": 3, "comment_count": 1, "hot_index": 8, "is_hot": 0, "rank_index": 0.00013658, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "1063982985386423", "user_name": "山花", "company": "掘土", "job_title": "解梦姻缘测字寻失", "avatar_large": "https://sf3-ttcdn-tos.pstatp.com/img/user-avatar/389c762ce962c734c8e7c12f325786fe~300x300.image", "level": 3, "description": "", "followee_count": 49, "follower_count": 56, "post_article_count": 290, "digg_article_count": 313, "got_digg_count": 905, "got_view_count": 25474, "post_shortmsg_count": 21, "digg_shortmsg_count": 70, "isfollowed": false, "favorable_author": 0, "power": 1159, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6935733149385097230, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6935480135290191908", "article_info": {"article_id": "6935480135290191908", "user_id": "289926801011517", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "83. 删除排序链表中的重复元素｜刷题打卡", "brief_content": "83. 删除排序链表中的重复元素｜刷题打卡 给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。 这是一道简单题，不过对我们这些算法小白来说是个认识链表这一数据结构的不错选择。 那什么是链表呢？我觉得小灰算法讲的不错。没找到电子版，直接拍的照哈。 对于链表的遍历来说，…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1614792873", "mtime": "1614961669", "rtime": "1614829237", "draft_id": "6935474232314822669", "view_count": 64, "collect_count": 0, "digg_count": 4, "comment_count": 1, "hot_index": 8, "is_hot": 0, "rank_index": 0.00013558, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "289926801011517", "user_name": "豆包君", "company": "CS", "job_title": "菜鸡前端", "avatar_large": "https://sf1-ttcdn-tos.pstatp.com/img/user-avatar/ee6ee7fc260fbf51dc7bd5d76350073f~300x300.image", "level": 3, "description": "蹲角角，晒阳阳", "followee_count": 42, "follower_count": 145, "post_article_count": 69, "digg_article_count": 310, "got_digg_count": 962, "got_view_count": 74402, "post_shortmsg_count": 58, "digg_shortmsg_count": 91, "isfollowed": false, "favorable_author": 0, "power": 1689, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6935480135290191908, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6912732328599470088", "article_info": {"article_id": "6912732328599470088", "user_id": "149189310042654", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "每日算法-最长公共前缀(分治-简单）", "brief_content": "编写一个函数来查找字符串数组中的最长公共前缀。 如果不存在公共前缀，返回空字符串 \"\"。 这个题容易让人理解错误，这里要找的是公共前缀。 分治定义将一个复杂的问题，分成两个或多个相似的子问题，在把子问题分成更小的子问题，直到更小的子问题可以简单求解，求解子问题，则原问题的解则为…", "is_english": 0, "is_original": 1, "user_index": 3.340720658123716, "original_type": 0, "original_author": "", "content": "", "ctime": "1609495929", "mtime": "1609559082", "rtime": "1609559082", "draft_id": "6912731810212380680", "view_count": 157, "collect_count": 1, "digg_count": 1, "comment_count": 0, "hot_index": 8, "is_hot": 0, "rank_index": 0.00013489, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "149189310042654", "user_name": "小小周虾", "company": "平安", "job_title": "前端", "avatar_large": "https://sf1-ttcdn-tos.pstatp.com/img/user-avatar/1ff91f54ad6367fc087b5e7848d2a315~300x300.image", "level": 1, "description": "love", "followee_count": 50, "follower_count": 4, "post_article_count": 16, "digg_article_count": 25, "got_digg_count": 38, "got_view_count": 3536, "post_shortmsg_count": 0, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 73, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6912732328599470088, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6844903937506541582", "article_info": {"article_id": "6844903937506541582", "user_id": "219558055786334", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844903937506541582", "cover_image": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/9/6/16d05182c2df4101~tplv-t2oaga2asx-image.image", "is_gfw": 0, "title": "「动态规划」「leetcode」 213.打家劫舍 II", "brief_content": "你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都围成一圈，这意味着第一个房屋和最后一个房屋是紧挨着的。同时，相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。 给定一个代表每个房屋存放金额的非负整数数…", "is_english": 0, "is_original": 1, "user_index": 7.8832997096348, "original_type": 0, "original_author": "", "content": "", "ctime": "1567866162", "mtime": "1598522506", "rtime": "1567868093", "draft_id": "6845076449448165390", "view_count": 622, "collect_count": 0, "digg_count": 6, "comment_count": 0, "hot_index": 37, "is_hot": 0, "rank_index": 0.0001346, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "219558055786334", "user_name": "dyhtps", "company": "🏠 在家办公", "job_title": "前端", "avatar_large": "https://sf1-ttcdn-tos.pstatp.com/img/user-avatar/517c0d2a0cf5186f2406dac3790cf5b3~300x300.image", "level": 3, "description": "凡爱他人者 就得见上帝", "followee_count": 171, "follower_count": 632, "post_article_count": 113, "digg_article_count": 485, "got_digg_count": 2086, "got_view_count": 146499, "post_shortmsg_count": 0, "digg_shortmsg_count": 32, "isfollowed": false, "favorable_author": 0, "power": 3550, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903937506541582, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6938695050427629599", "article_info": {"article_id": "6938695050427629599", "user_id": "2928754708978551", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/573482f71e174c63b243568b8d9012f1~tplv-k3u1fbpfcp-watermark.image", "is_gfw": 0, "title": "[ 力扣1431 ] 拥有最多糖果的孩子 | 刷题打卡", "brief_content": "给你一个数组 candies 和一个整数 extraCandies ，其中 candies[i] 代表第 i 个孩子拥有的糖果数目。 对每一个孩子，检查是否存在一种方案，将额外的 extraCandies 个糖果分配给孩子们之后，此孩子有 最多 的糖果。注意，允许有多个孩子同时…", "is_english": 0, "is_original": 1, "user_index": 4.43851915429201, "original_type": 0, "original_author": "", "content": "", "ctime": "1615540835", "mtime": "1615623235", "rtime": "1615623235", "draft_id": "6938691810982264869", "view_count": 62, "collect_count": 0, "digg_count": 0, "comment_count": 0, "hot_index": 3, "is_hot": 0, "rank_index": 0.00013424, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2928754708978551", "user_name": "Orime小猪", "company": "", "job_title": "全栈摸鱼三十年", "avatar_large": "https://sf1-ttcdn-tos.pstatp.com/img/user-avatar/93ae043958cdce68701b2571fbd6214c~300x300.image", "level": 2, "description": "", "followee_count": 41, "follower_count": 33, "post_article_count": 35, "digg_article_count": 178, "got_digg_count": 96, "got_view_count": 9151, "post_shortmsg_count": 5, "digg_shortmsg_count": 3, "isfollowed": false, "favorable_author": 0, "power": 187, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6938695050427629599, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6914803869528784904", "article_info": {"article_id": "6914803869528784904", "user_id": "219558055786334", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e5e3eac07f63410b88185e2d100bba53~tplv-k3u1fbpfcp-watermark.image", "is_gfw": 0, "title": "Divide and conquer algorithm: 分而治之, 逐个击破", "brief_content": "将手头的问题分成较小的子问题，然后分别解决每个子问题。如果子问题没办法解决，将子问题划分为更小的子问题时，到达无法划分的阶段时得出结果。最后合并所有子问题的解决方案，以获得原始问题的解决方案。 分割，将问题分割为较小的子问题，通常采用递归的形式，直到没有子问题可以进一步分割为止…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1609978342", "mtime": "1609988291", "rtime": "1609988291", "draft_id": "6914794014516445192", "view_count": 95, "collect_count": 0, "digg_count": 4, "comment_count": 3, "hot_index": 11, "is_hot": 0, "rank_index": 0.00013422, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "219558055786334", "user_name": "dyhtps", "company": "🏠 在家办公", "job_title": "前端", "avatar_large": "https://sf1-ttcdn-tos.pstatp.com/img/user-avatar/517c0d2a0cf5186f2406dac3790cf5b3~300x300.image", "level": 3, "description": "凡爱他人者 就得见上帝", "followee_count": 171, "follower_count": 632, "post_article_count": 113, "digg_article_count": 485, "got_digg_count": 2086, "got_view_count": 146499, "post_shortmsg_count": 0, "digg_shortmsg_count": 32, "isfollowed": false, "favorable_author": 0, "power": 3550, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6914803869528784904, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6844903647260868622", "article_info": {"article_id": "6844903647260868622", "user_id": "2225067263810631", "category_id": "6809637767543259144", "tag_ids": [6809640357354012685, 6809640407484334093, 6809640499062767624, 6809640956946546702], "visible_level": 0, "link_url": "https://juejin.im/post/6844903647260868622", "cover_image": "", "is_gfw": 0, "title": "React从零实现-组件渲染和setState", "brief_content": "在react中组件大体分为两种，一种是一个纯函数，没有生命周期的。另一个通过继承自React.Component的类来实现。 我们先来写一个Component类。 我们完成了一个Component类，同时该类的实例有一个setState函数，用来更新该组件。updateComp…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1532656341", "mtime": "1598461131", "rtime": "1532670966", "draft_id": "6845075582481334280", "view_count": 1086, "collect_count": 11, "digg_count": 24, "comment_count": 1, "hot_index": 79, "is_hot": 0, "rank_index": 0.00013382, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2225067263810631", "user_name": "xwchris7", "company": "bytedance", "job_title": "前端工程师", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/8a9dfa79a88946bdf5a6b264f562ba5b~300x300.image", "level": 3, "description": "If you can't explain it simply, you don't understand it well enough", "followee_count": 55, "follower_count": 99, "post_article_count": 23, "digg_article_count": 113, "got_digg_count": 822, "got_view_count": 30237, "post_shortmsg_count": 11, "digg_shortmsg_count": 12, "isfollowed": false, "favorable_author": 0, "power": 1114, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546490, "tag_id": "6809640357354012685", "tag_name": "React.js", "color": "#61DAFB", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/f655215074250f10f8d4.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1432234367, "mtime": 1631692935, "id_type": 9, "tag_alias": "", "post_article_count": 16999, "concern_user_count": 226420}, {"id": 2546526, "tag_id": "6809640407484334093", "tag_name": "前端", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/bac28828a49181c34110.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 1, "ctime": 1435971546, "mtime": 1631692835, "id_type": 9, "tag_alias": "", "post_article_count": 88828, "concern_user_count": 527704}, {"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}, {"id": 2546923, "tag_id": "6809640956946546702", "tag_name": "Element", "color": "#000000", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/2c670995272515e48cea.svg~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1489435335, "mtime": 1631690287, "id_type": 9, "tag_alias": "", "post_article_count": 1925, "concern_user_count": 15229}], "user_interact": {"id": 6844903647260868622, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6844903607880548365", "article_info": {"article_id": "6844903607880548365", "user_id": "1890815728424765", "category_id": "6809637767543259144", "tag_ids": [6809640398105870343, 6809640407484334093, 6809640467731316749, 6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844903607880548365", "cover_image": "", "is_gfw": 0, "title": "JS策略模式《JavaScript设计模式与开发实践》阅读笔记", "brief_content": "策略模式可以避免代码中的多重判断条件。 策略模式很好的体现了开放-封闭原则，将一个个算法（解决方案）封装在一个个策略类中。便于切换，理解，扩展。 策略中的各种算法可以重复利用在系统的各个地方，避免复制粘贴。 策略模式在程序中或多或少的增加了策略类。但比堆砌在业务逻辑中要清晰明了…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1526731720", "mtime": "1598454277", "rtime": "1526887548", "draft_id": "6845075429468930056", "view_count": 1055, "collect_count": 19, "digg_count": 32, "comment_count": 1, "hot_index": 85, "is_hot": 0, "rank_index": 0.00013372, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "1890815728424765", "user_name": "RoyLuo", "company": "", "job_title": "前端", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/1f2a4fdbaced7e9602f08ef2af73ac51~300x300.image", "level": 2, "description": "加油", "followee_count": 36, "follower_count": 16, "post_article_count": 12, "digg_article_count": 255, "got_digg_count": 177, "got_view_count": 11864, "post_shortmsg_count": 3, "digg_shortmsg_count": 2, "isfollowed": false, "favorable_author": 0, "power": 295, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546519, "tag_id": "6809640398105870343", "tag_name": "JavaScript", "color": "#616161", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/5d70fd6af940df373834.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1435884803, "mtime": 1631692583, "id_type": 9, "tag_alias": "", "post_article_count": 67405, "concern_user_count": 398956}, {"id": 2546526, "tag_id": "6809640407484334093", "tag_name": "前端", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/bac28828a49181c34110.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 1, "ctime": 1435971546, "mtime": 1631692835, "id_type": 9, "tag_alias": "", "post_article_count": 88828, "concern_user_count": 527704}, {"id": 2546570, "tag_id": "6809640467731316749", "tag_name": "设计模式", "color": "#616161", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/95e6729d56b35272b0d6.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1437074032, "mtime": 1631692559, "id_type": 9, "tag_alias": "", "post_article_count": 7551, "concern_user_count": 261531}, {"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903607880548365, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6938398208347340831", "article_info": {"article_id": "6938398208347340831", "user_id": "2084329779636727", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "又回到最初的起点，来回顾一下两数之和怎么计算｜刷题打卡", "brief_content": "这次，我决定回顾一下我在leetcode上做的第一题，看了下提交记录，没想到已经是两年前了。 原题链接：1. 两数之和 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 的那 两个 整数，并返回它们的数组下标。 你可以假设每种输入只会对…", "is_english": 0, "is_original": 1, "user_index": 1.449660286786792, "original_type": 0, "original_author": "", "content": "", "ctime": "1615471848", "mtime": "1615529593", "rtime": "1615529593", "draft_id": "6938393463159259167", "view_count": 95, "collect_count": 0, "digg_count": 2, "comment_count": 0, "hot_index": 6, "is_hot": 0, "rank_index": 0.00013343, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2084329779636727", "user_name": "灬青芒灬", "company": "", "job_title": "前端工程师", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/5d0137128e0b96460313483c60bf6463~300x300.image", "level": 2, "description": "想要成为业内小有名气的前端", "followee_count": 32, "follower_count": 18, "post_article_count": 15, "digg_article_count": 38, "got_digg_count": 71, "got_view_count": 4755, "post_shortmsg_count": 34, "digg_shortmsg_count": 2, "isfollowed": false, "favorable_author": 0, "power": 118, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6938398208347340831, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6844903925888319495", "article_info": {"article_id": "6844903925888319495", "user_id": "219558055786334", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844903925888319495", "cover_image": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/8/27/16cd3a5b71cf582e~tplv-t2oaga2asx-image.image", "is_gfw": 0, "title": "「leetcode」649.Dota2 参议院", "brief_content": "Dota2 参议院由来自两派的参议员组成。现在参议院希望对一个 Dota2 游戏里的改变作出决定。他们以一个基于轮为过程的投票进行。在每一轮中，每一位参议员都可以行使两项权利中的一项： 参议员可以让另一位参议员在这一轮和随后的几轮中丧失所有的权利。 如果参议员发现有权利投票的参…", "is_english": 0, "is_original": 1, "user_index": 8.2540004785943, "original_type": 0, "original_author": "", "content": "", "ctime": "1566952459", "mtime": "1600065154", "rtime": "1566970520", "draft_id": "6845076432285089806", "view_count": 645, "collect_count": 0, "digg_count": 5, "comment_count": 0, "hot_index": 37, "is_hot": 0, "rank_index": 0.00013327, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "219558055786334", "user_name": "dyhtps", "company": "🏠 在家办公", "job_title": "前端", "avatar_large": "https://sf1-ttcdn-tos.pstatp.com/img/user-avatar/517c0d2a0cf5186f2406dac3790cf5b3~300x300.image", "level": 3, "description": "凡爱他人者 就得见上帝", "followee_count": 171, "follower_count": 632, "post_article_count": 113, "digg_article_count": 485, "got_digg_count": 2086, "got_view_count": 146499, "post_shortmsg_count": 0, "digg_shortmsg_count": 32, "isfollowed": false, "favorable_author": 0, "power": 3550, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903925888319495, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}, {"article_id": "6844904102972014599", "article_info": {"article_id": "6844904102972014599", "user_id": "3509296845566733", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844904102972014599", "cover_image": "", "is_gfw": 0, "title": "这次的红黑树应该够简单易懂了", "brief_content": "自从上次写了这篇简单易懂的红黑树原理及实现(js)之后，总觉得光是图片展示还是不太够，最好是有一个动画能够展示出来，然后突然想起了之前后端小伙伴给我看的一个页面实现的数据结构的展示动画（具体地址不记得了），突发奇想，为什么不自己实现一版红黑树的呢？于是，开始搞起了这个。", "is_english": 0, "is_original": 1, "user_index": 3.4654924264054, "original_type": 0, "original_author": "", "content": "", "ctime": "1585145815", "mtime": "1598863369", "rtime": "1585146504", "draft_id": "6845076695074996238", "view_count": 448, "collect_count": 2, "digg_count": 2, "comment_count": 2, "hot_index": 26, "is_hot": 0, "rank_index": 0.00013323, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "3509296845566733", "user_name": "awesome23", "company": "", "job_title": "", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/1f4e5d790ad16a9ff03c7dc2e0566eae~300x300.image", "level": 3, "description": "", "followee_count": 117, "follower_count": 138, "post_article_count": 13, "digg_article_count": 198, "got_digg_count": 878, "got_view_count": 37842, "post_shortmsg_count": 0, "digg_shortmsg_count": 1, "isfollowed": false, "favorable_author": 0, "power": 1254, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844904102972014599, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "202109151603130102121992083D00344F"}], "cursor": "eyJ2IjoiNzAwNzYyNzUzMTk4MTQyMjYyOCIsImkiOjE1NjB9", "count": 1774, "has_more": true}