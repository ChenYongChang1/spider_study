{"err_no": 0, "err_msg": "success", "data": [{"article_id": "6844904065864826893", "article_info": {"article_id": "6844904065864826893", "user_id": "1943592287085080", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844904065864826893", "cover_image": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/2/16/1704cc6173d418a1~tplv-t2oaga2asx-image.image", "is_gfw": 0, "title": "12306 抢票系列之只要搞定RAIL_DEVICEID的来源,从此抢票不再掉线(上)", "brief_content": "本文针对自主开发的抢票脚本在抢票过程中常常遇到的请求无效等问题,简单分析了 12306 网站的前端加密算法,更准确的说,是探究 RAIL_DEVICEID 的生成过程. 因为该 cookie 值是抢票请求的核心基础,没有它将无法正确发送请求,或者一段时间后就会到期失效需要重新获…", "is_english": 0, "is_original": 1, "user_index": 3.5918304549848, "original_type": 0, "original_author": "", "content": "", "ctime": "1581834987", "mtime": "1600497004", "rtime": "1581837450", "draft_id": "6845076638787436558", "view_count": 1096, "collect_count": 4, "digg_count": 3, "comment_count": 0, "hot_index": 57, "is_hot": 0, "rank_index": 0.00025046, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "1943592287085080", "user_name": "雪之梦技术驿站", "company": "雪之梦技术驿站", "job_title": "微信公众号", "avatar_large": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/3/21/1699edf2b84a6cd7~tplv-t2oaga2asx-image.image", "level": 3, "description": "你在互联网的路上匆匆而来,雪之梦技术驿站助你满载而去", "followee_count": 56, "follower_count": 93, "post_article_count": 100, "digg_article_count": 128, "got_digg_count": 298, "got_view_count": 73568, "post_shortmsg_count": 15, "digg_shortmsg_count": 36, "isfollowed": false, "favorable_author": 0, "power": 1033, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844904065864826893, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6844903507691044878", "article_info": {"article_id": "6844903507691044878", "user_id": "2999123450272520", "category_id": "6809637767543259144", "tag_ids": [6809640398105870343, 6809640499062767624, 6809640407484334093, 6809640403516522504], "visible_level": 0, "link_url": "https://zhuanlan.zhihu.com/p/30552148", "cover_image": "", "is_gfw": 0, "title": "精读《JS 中的内存管理》", "brief_content": "我为什么要选这篇文章呢？ sessionstack最近接连发了好几篇文章, 深入探讨JS, 以及 JS 中一些内部原理. 文中也讲到了, 伴随深入了解 JS 中的一些工作原理, 才有可能写出更好的代码和程序. 而 JS 中的内存管理, 我的感觉就像 JS 中的一门副科, 我们…", "is_english": 0, "is_original": 0, "user_index": 0, "original_type": 1, "original_author": "", "content": "", "ctime": "1509503765", "mtime": "1598437136", "rtime": "1509504918", "draft_id": "0", "view_count": 1640, "collect_count": 52, "digg_count": 112, "comment_count": 0, "hot_index": 194, "is_hot": 0, "rank_index": 0.00025003, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2999123450272520", "user_name": "linhuiw", "company": "Alibaba Inc.", "job_title": "", "avatar_large": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/mirror-assets/168e0884c5dd271b72b~tplv-t2oaga2asx-image.image", "level": 0, "description": "", "followee_count": 1, "follower_count": 221, "post_article_count": 1, "digg_article_count": 3, "got_digg_count": 112, "got_view_count": 1640, "post_shortmsg_count": 0, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 0, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546519, "tag_id": "6809640398105870343", "tag_name": "JavaScript", "color": "#616161", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/5d70fd6af940df373834.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1435884803, "mtime": 1631692583, "id_type": 9, "tag_alias": "", "post_article_count": 67405, "concern_user_count": 398956}, {"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}, {"id": 2546526, "tag_id": "6809640407484334093", "tag_name": "前端", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/bac28828a49181c34110.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 1, "ctime": 1435971546, "mtime": 1631692835, "id_type": 9, "tag_alias": "", "post_article_count": 88828, "concern_user_count": 527704}, {"id": 2546523, "tag_id": "6809640403516522504", "tag_name": "API", "color": "#616161", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/a7c8e10a9c742fc175f9.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1435971240, "mtime": 1631683137, "id_type": 9, "tag_alias": "", "post_article_count": 7154, "concern_user_count": 88261}], "user_interact": {"id": 6844903507691044878, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6844904119098966030", "article_info": {"article_id": "6844904119098966030", "user_id": "676954895561262", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844904119098966030", "cover_image": "", "is_gfw": 0, "title": "快速入门数据结构与算法之贪心、分治与动态规划", "brief_content": "上一篇我们学习了一些查找和排序的算法，今天我们来学习几个设计算法时常用的策略。本篇要介绍的策略有 很多同学都会觉得对这些策略不太理解？分治和动态规划分不清？下面我们一步一步的真正的去理解他们。 贪心策略是比较好理解的，略是一种近似解决问题的技术，所谓贪心，就是先选择当前阶段的最…", "is_english": 0, "is_original": 1, "user_index": 3.2598510045647, "original_type": 0, "original_author": "", "content": "", "ctime": "1586412875", "mtime": "1598562803", "rtime": "1586413597", "draft_id": "6845076719137718280", "view_count": 752, "collect_count": 6, "digg_count": 10, "comment_count": 3, "hot_index": 50, "is_hot": 0, "rank_index": 0.00024962, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "676954895561262", "user_name": "差得远呢", "company": "", "job_title": "前端小白==>>工程师进化中......", "avatar_large": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/3/29/1712570efb35485e~tplv-t2oaga2asx-image.image", "level": 1, "description": "", "followee_count": 104, "follower_count": 11, "post_article_count": 9, "digg_article_count": 59, "got_digg_count": 38, "got_view_count": 2199, "post_shortmsg_count": 0, "digg_shortmsg_count": 1, "isfollowed": false, "favorable_author": 0, "power": 59, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844904119098966030, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6844904065067909127", "article_info": {"article_id": "6844904065067909127", "user_id": "676954893979469", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844904065067909127", "cover_image": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/2/15/17044b8ca534681d~tplv-t2oaga2asx-image.image", "is_gfw": 0, "title": "算法-判断回文链表", "brief_content": "中文里,有回文诗句、对联,如:\"灵山大佛,佛大山灵\",\"客上天然居,居然天上客\"等等,都是美妙的符合正念倒念都一样的回文句. 回文数则是有类似22、383、5445、12321,不论是从左向右顺读。 因为js没有链表这种数据结构，要做这道题先来声明一个链表节点对象。还记得链表有…", "is_english": 0, "is_original": 1, "user_index": 7.3132632297382, "original_type": 0, "original_author": "", "content": "", "ctime": "1581700853", "mtime": "1598547589", "rtime": "1581819166", "draft_id": "6845076636501540877", "view_count": 1026, "collect_count": 1, "digg_count": 2, "comment_count": 0, "hot_index": 53, "is_hot": 0, "rank_index": 0.00024929, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "676954893979469", "user_name": "CharlesYu01", "company": "百度", "job_title": "", "avatar_large": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/10/19/16688190a0032500~tplv-t2oaga2asx-image.image", "level": 2, "description": "以马内利", "followee_count": 40, "follower_count": 1297, "post_article_count": 32, "digg_article_count": 45, "got_digg_count": 196, "got_view_count": 40816, "post_shortmsg_count": 22, "digg_shortmsg_count": 15, "isfollowed": false, "favorable_author": 0, "power": 591, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844904065067909127, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6844903938861318152", "article_info": {"article_id": "6844903938861318152", "user_id": "4494459265619128", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844903938861318152", "cover_image": "", "is_gfw": 0, "title": "算法题 -- 求最长路径", "brief_content": "给定一张包含N个点、N-1条边的无向连通图，节点从1到N编号，每条边的长度均为1。假设你从1号节点出发并打算遍历所有节点，那么总路程至少是多少？ 第一行包含一个整数N，1≤N≤10^5。 接下来N-1行，每行包含两个整数X和Y，表示X号节点和Y号节点之间有一条边，1≤X，Y≤N…", "is_english": 0, "is_original": 1, "user_index": 2.7903809449105, "original_type": 0, "original_author": "", "content": "", "ctime": "1568064553", "mtime": "1598522851", "rtime": "1568075617", "draft_id": "6845076454229671950", "view_count": 1533, "collect_count": 5, "digg_count": 4, "comment_count": 0, "hot_index": 80, "is_hot": 0, "rank_index": 0.00024921, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "4494459265619128", "user_name": "Sleepy 😪", "company": "brocelia", "job_title": "前端工程师", "avatar_large": "https://sf1-ttcdn-tos.pstatp.com/img/user-avatar/f9a8cad4555d8b98e2b8df70d874afbc~300x300.image", "level": 2, "description": "加油呀小李！", "followee_count": 35, "follower_count": 18, "post_article_count": 23, "digg_article_count": 30, "got_digg_count": 80, "got_view_count": 16242, "post_shortmsg_count": 0, "digg_shortmsg_count": 1, "isfollowed": false, "favorable_author": 0, "power": 242, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903938861318152, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6913899234190327816", "article_info": {"article_id": "6913899234190327816", "user_id": "4265760846775613", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "前端就该用 JS 刷算法4", "brief_content": "每日一题二叉树中所有距离为K的节点注意事项dfs查找目标节点的时候，记得条件深度遍历，否则给null加parent属性就尴尬了开始查找距离的时候，记得保存所有走过的节点，防止重复跑使用paths保存走", "is_english": 0, "is_original": 1, "user_index": 3.58917994053047, "original_type": 0, "original_author": "", "content": "", "ctime": "1609767614", "mtime": "1609894157", "rtime": "1609815312", "draft_id": "6913898337905164301", "view_count": 308, "collect_count": 2, "digg_count": 2, "comment_count": 0, "hot_index": 17, "is_hot": 0, "rank_index": 0.00024864, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "4265760846775613", "user_name": "厨猿加加", "company": "某不知名但人很nice的非互联网公司", "job_title": "打工人中最会做饭的厨子", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/60bf11e1ca44d36940130e27da8613b1~300x300.image", "level": 2, "description": "做勤能补拙的打工人，做给女朋友做饭的前端", "followee_count": 97, "follower_count": 30, "post_article_count": 71, "digg_article_count": 13, "got_digg_count": 104, "got_view_count": 8811, "post_shortmsg_count": 4, "digg_shortmsg_count": 7, "isfollowed": false, "favorable_author": 0, "power": 192, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6913899234190327816, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6844903657830350856", "article_info": {"article_id": "6844903657830350856", "user_id": "1574156380154039", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "如何用堆栈来保存和恢复滚动条位置", "brief_content": "问题背景思路基于jq.ui的实例1、在jq.ui源码中页面切换之前手动触发个事件（用于在自己的代码中捕捉此事件并记录老页面滚动条位置信息）2、在页面上监听第一步中触发的beforeHideOldPan", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1534405664", "mtime": "1598593543", "rtime": "1534493049", "draft_id": "6845075595496259597", "view_count": 1812, "collect_count": 17, "digg_count": 53, "comment_count": 0, "hot_index": 143, "is_hot": 0, "rank_index": 0.00024816, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "1574156380154039", "user_name": "程序员大白", "company": "科大讯飞", "job_title": "前端开发工程师", "avatar_large": "https://sf3-ttcdn-tos.pstatp.com/img/user-avatar/6f71d6d46d4a72d1937a14c98135cc7c~300x300.image", "level": 2, "description": "完成比完美更重要", "followee_count": 8, "follower_count": 16, "post_article_count": 11, "digg_article_count": 198, "got_digg_count": 147, "got_view_count": 20811, "post_shortmsg_count": 0, "digg_shortmsg_count": 1, "isfollowed": false, "favorable_author": 0, "power": 355, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903657830350856, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6844903858087395336", "article_info": {"article_id": "6844903858087395336", "user_id": "2066737589133015", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844903858087395336", "cover_image": "", "is_gfw": 0, "title": "【算法题】递归求二叉树深度", "brief_content": "二叉树的深度算法，是二叉树中比较基础的算法了。对应 LeetCode 第104题。 然后你会发现 LeetCode 后面有些算法题需要用到这个算法的变形，比如第110题、543题。这两道题，如果你知道二叉树深度算法的递归过程，就很容易做出来。 给定一个二叉树，找出其最大深度。 …", "is_english": 0, "is_original": 1, "user_index": 3.362323454307, "original_type": 0, "original_author": "", "content": "", "ctime": "1559381101", "mtime": "1598506721", "rtime": "1559393712", "draft_id": "6845076328350220301", "view_count": 1873, "collect_count": 4, "digg_count": 1, "comment_count": 0, "hot_index": 94, "is_hot": 0, "rank_index": 0.00024815, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2066737589133015", "user_name": "fstar", "company": "", "job_title": "web前端", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/cad02166292bbd431285254bbb149fa2~300x300.image", "level": 2, "description": "已离职，找工作中，现居广州，三年web前端。专注于面试题学习。文章首发于个人博客：https://blog.fstars.wang", "followee_count": 31, "follower_count": 50, "post_article_count": 34, "digg_article_count": 81, "got_digg_count": 164, "got_view_count": 31799, "post_shortmsg_count": 3, "digg_shortmsg_count": 2, "isfollowed": false, "favorable_author": 0, "power": 481, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903858087395336, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6981022070159179783", "article_info": {"article_id": "6981022070159179783", "user_id": "553809592719847", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "Leetcode 51. N 皇后 -- javascript DFS", "brief_content": "Leetcode 51. N 皇后 javascript 研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。给你一个整数 n ，返回所有不同的 n", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1625395917", "mtime": "1625481261", "rtime": "1625451224", "draft_id": "6981015822747566088", "view_count": 85, "collect_count": 0, "digg_count": 0, "comment_count": 0, "hot_index": 4, "is_hot": 0, "rank_index": 0.00024772, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "553809592719847", "user_name": "LHDIYU", "company": "", "job_title": "", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/77f77abe7c961d4dcdc624951452cad6~300x300.image", "level": 2, "description": "", "followee_count": 25, "follower_count": 8, "post_article_count": 46, "digg_article_count": 3, "got_digg_count": 61, "got_view_count": 7004, "post_shortmsg_count": 0, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 131, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6981022070159179783, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6844903550347116551", "article_info": {"article_id": "6844903550347116551", "user_id": "1046390797501150", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://segmentfault.com/a/1190000012829866/", "cover_image": "", "is_gfw": 0, "title": "javascript背包问题详解", "brief_content": "打算好好学一下算法，先拿背包问题入手。但是网上许多教程都是C++或java或python，大部分作者都是在校生，虽然算法很强，但是完全没有工程意识，全局变量满天飞，变量名不明所以。我查了许多资料，花了一个星期才搞懂，最开始的01背包耗时最多，以前只会枚举（就是普通的for循环，…", "is_english": 0, "is_original": 0, "user_index": 0, "original_type": 1, "original_author": "", "content": "", "ctime": "1515857145", "mtime": "1599392364", "rtime": "1515857145", "draft_id": "0", "view_count": 2111, "collect_count": 21, "digg_count": 70, "comment_count": 4, "hot_index": 179, "is_hot": 0, "rank_index": 0.0002472, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "1046390797501150", "user_name": "__ihhu", "company": "", "job_title": "前端开发", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/b0f5873469ebc95aa91836aa2ef3bb6c~300x300.image", "level": 1, "description": "", "followee_count": 3, "follower_count": 7976, "post_article_count": 125, "digg_article_count": 31, "got_digg_count": 10802, "got_view_count": 309464, "post_shortmsg_count": 1, "digg_shortmsg_count": 4, "isfollowed": false, "favorable_author": 0, "power": 86, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903550347116551, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6981033041619583006", "article_info": {"article_id": "6981033041619583006", "user_id": "553809592719847", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "DFS和BFS ", "brief_content": "深度优先搜索(DFS) 和广度优先搜索一样，深度优先搜索（DFS）是用于在树/图中遍历/搜索的一种重要算法。 与 BFS 不同，更早访问的结点可能不是更靠近根结点的结点。因此，你在DFS 中找到的第一", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1625398447", "mtime": "1625492046", "rtime": "1625451727", "draft_id": "6981025250083340324", "view_count": 98, "collect_count": 0, "digg_count": 0, "comment_count": 0, "hot_index": 4, "is_hot": 0, "rank_index": 0.00024622, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "553809592719847", "user_name": "LHDIYU", "company": "", "job_title": "", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/77f77abe7c961d4dcdc624951452cad6~300x300.image", "level": 2, "description": "", "followee_count": 25, "follower_count": 8, "post_article_count": 46, "digg_article_count": 3, "got_digg_count": 61, "got_view_count": 7004, "post_shortmsg_count": 0, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 131, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6981033041619583006, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6911877972756545543", "article_info": {"article_id": "6911877972756545543", "user_id": "149189310042654", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "每日算法-整数反转（数学-简单）", "brief_content": "给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。 result * 10 + x % 10 取出末位 x % 10（负数结果还是负数，无需关心正负），拼接到 result 中。 x / 10 去除末位，| 0 强制转换为32位有符号整数。 通过 | 0 …", "is_english": 0, "is_original": 1, "user_index": 2.969362295916119, "original_type": 0, "original_author": "", "content": "", "ctime": "1609297006", "mtime": "1609337253", "rtime": "1609316931", "draft_id": "6911877548850806792", "view_count": 282, "collect_count": 0, "digg_count": 2, "comment_count": 2, "hot_index": 18, "is_hot": 0, "rank_index": 0.00024592, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "149189310042654", "user_name": "小小周虾", "company": "平安", "job_title": "前端", "avatar_large": "https://sf1-ttcdn-tos.pstatp.com/img/user-avatar/1ff91f54ad6367fc087b5e7848d2a315~300x300.image", "level": 1, "description": "love", "followee_count": 50, "follower_count": 4, "post_article_count": 16, "digg_article_count": 25, "got_digg_count": 38, "got_view_count": 3536, "post_shortmsg_count": 0, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 73, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6911877972756545543, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6844903545548996621", "article_info": {"article_id": "6844903545548996621", "user_id": "1222312658741496", "category_id": "6809637767543259144", "tag_ids": [6809640837895585805, 6809640499062767624, 6809640600502009863, 6809640467731316749], "visible_level": 0, "link_url": "https://juejin.im/post/6844903545548996621", "cover_image": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/1/7/160d0632f4b98357~tplv-t2oaga2asx-image.image", "is_gfw": 0, "title": "《Node.js设计模式》高级异步准则", "brief_content": "本系列文章为《Node.js Design Patterns Second Edition》的原文翻译和读书笔记，在GitHub连载更新，同步翻译版链接。 几乎所有我们迄今为止看到的设计模式都可以被认为是通用的，并且适用于应用程序的许多不同的领域。但是，有一套更具体的模式，专注…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1515324677", "mtime": "1599390547", "rtime": "1515324677", "draft_id": "6845075363232497678", "view_count": 2263, "collect_count": 32, "digg_count": 66, "comment_count": 0, "hot_index": 179, "is_hot": 0, "rank_index": 0.00024581, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "1222312658741496", "user_name": "counterxing", "company": "腾讯", "job_title": "前端工程师", "avatar_large": "https://sf3-ttcdn-tos.pstatp.com/img/user-avatar/e54cdb77060b6a5357fdd7466984aef2~300x300.image", "level": 3, "description": "", "followee_count": 21, "follower_count": 1402, "post_article_count": 32, "digg_article_count": 234, "got_digg_count": 3856, "got_view_count": 134062, "post_shortmsg_count": 3, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 1, "power": 4948, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546837, "tag_id": "6809640837895585805", "tag_name": "服务器", "color": "#a3abad", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/be1879c7e9983dab0049.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1489042149, "mtime": 1631666741, "id_type": 9, "tag_alias": "", "post_article_count": 10408, "concern_user_count": 20830}, {"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}, {"id": 2546666, "tag_id": "6809640600502009863", "tag_name": "数据库", "color": "#000000", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/c57a5426c2a8ab565881.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1446683560, "mtime": 1631692679, "id_type": 9, "tag_alias": "", "post_article_count": 11331, "concern_user_count": 279578}, {"id": 2546570, "tag_id": "6809640467731316749", "tag_name": "设计模式", "color": "#616161", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/95e6729d56b35272b0d6.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1437074032, "mtime": 1631692559, "id_type": 9, "tag_alias": "", "post_article_count": 7551, "concern_user_count": 261531}], "user_interact": {"id": 6844903545548996621, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6854573218947465229", "article_info": {"article_id": "6854573218947465229", "user_id": "624178332974216", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6854573218947465229", "cover_image": "", "is_gfw": 0, "title": "平衡二叉树专题", "brief_content": "力扣关于平衡二叉树的题目还是有一些的，并且都非常经典，推荐大家练习。今天给大家精选了 4 道题，如果你彻底搞明白了这几道题，碰到其他的平衡二叉树的题目应该不至于没有思路。当你领会了我的思路之后， 建议再找几个题目练手，巩固一下学习成果。 110. 平衡二叉树（简单） 最简单的莫…", "is_english": 0, "is_original": 1, "user_index": 8.8496786938743, "original_type": 0, "original_author": "", "content": "", "ctime": "1595594818", "mtime": "1599101233", "rtime": "1595683059", "draft_id": "6854812674393145358", "view_count": 471, "collect_count": 9, "digg_count": 7, "comment_count": 0, "hot_index": 30, "is_hot": 0, "rank_index": 0.00024515, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "624178332974216", "user_name": "lucifer210", "company": "e签宝", "job_title": "前端架构", "avatar_large": "https://sf1-ttcdn-tos.pstatp.com/img/user-avatar/39bce37a42b7e5a2d56f7eb5685dd444~300x300.image", "level": 3, "description": "Github 45k+ star ，专注前端工程化，性能优化，数据结构与算法领域。", "followee_count": 29, "follower_count": 1370, "post_article_count": 96, "digg_article_count": 226, "got_digg_count": 1275, "got_view_count": 112361, "post_shortmsg_count": 30, "digg_shortmsg_count": 46, "isfollowed": false, "favorable_author": 0, "power": 2829, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6854573218947465229, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6936175434027499557", "article_info": {"article_id": "6936175434027499557", "user_id": "2858385963754887", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "leetcode 双射 （单词规律）｜刷题打卡", "brief_content": "题目描述思路1定义两map在两个map中双方的键值对互换,这样就确认了对应关系以下为看了评论处小宇的精美回答后，挑选且修改后的回答", "is_english": 0, "is_original": 1, "user_index": 7.186567221288565, "original_type": 0, "original_author": "", "content": "", "ctime": "1614954233", "mtime": "1615007920", "rtime": "1615007920", "draft_id": "6936156047430123557", "view_count": 140, "collect_count": 0, "digg_count": 0, "comment_count": 0, "hot_index": 7, "is_hot": 0, "rank_index": 0.00024379, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2858385963754887", "user_name": "风萧萧归尘_", "company": "默默无名", "job_title": "前端", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/ff04bdf253bec5e260751f7d31ec24ba~300x300.image", "level": 2, "description": "略懂 javascript 小会 css", "followee_count": 29, "follower_count": 10, "post_article_count": 16, "digg_article_count": 75, "got_digg_count": 69, "got_view_count": 7394, "post_shortmsg_count": 4, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 142, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6936175434027499557, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6911097134427308046", "article_info": {"article_id": "6911097134427308046", "user_id": "2717648473824104", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": " 有迹可循的 BFS 问题 | 创作者训练营", "brief_content": "按层打印，如何换行就是首先要关心的问题。 根节点是明确的，同时根节点又是下一层的入口（通过 root.left / root.right 带出）。所以我们需要一个队列（queue）储存当前层所有的节点。每次换行，将上一层的节点推到结果数组中，并且通过递归收集当前层所有的节点，直…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1609115442", "mtime": "1609246027", "rtime": "1609126668", "draft_id": "6911096768319422477", "view_count": 309, "collect_count": 1, "digg_count": 3, "comment_count": 3, "hot_index": 21, "is_hot": 0, "rank_index": 0.00024357, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "2717648473824104", "user_name": "六六柒", "company": "wx: time-reconcile", "job_title": "FED", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/c773d33808ff3572acd4880135d68674~300x300.image", "level": 1, "description": "趁热打铁才能梦想成真 | 2021 成长实录", "followee_count": 18, "follower_count": 7, "post_article_count": 10, "digg_article_count": 143, "got_digg_count": 29, "got_view_count": 3115, "post_shortmsg_count": 11, "digg_shortmsg_count": 8, "isfollowed": false, "favorable_author": 0, "power": 61, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6911097134427308046, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6844903617728610317", "article_info": {"article_id": "6844903617728610317", "user_id": "1697301683792109", "category_id": "6809637767543259144", "tag_ids": [6809640357354012685, 6809640361531539470, 6809640398105870343, 6809640499062767624], "visible_level": 0, "link_url": "https://juejin.im/post/6844903617728610317", "cover_image": "", "is_gfw": 0, "title": "Virtual Dom算法实现笔记", "brief_content": "网上关于virtual dom（下面简称VD）的博客数不胜数，很多都写得很好，本文是我初学VD算法实现的总结，在回顾的同时，希望对于同样初学的人有所启发，注意，这篇文章介绍实现的东西较少，见谅。 很多代码来自github库：hyperapp，几百行代码的库，拥有了redux和r…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1528350154", "mtime": "1599483285", "rtime": "1528426066", "draft_id": "6845075534582382605", "view_count": 1708, "collect_count": 39, "digg_count": 66, "comment_count": 0, "hot_index": 151, "is_hot": 0, "rank_index": 0.0002422, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "1697301683792109", "user_name": "frontdog", "company": "阿里巴巴 - 钉钉文档", "job_title": "高级前端工程师", "avatar_large": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/6/7/163d8c74e88c9528~tplv-t2oaga2asx-image.image", "level": 2, "description": "前端狗、足球狗", "followee_count": 4, "follower_count": 158, "post_article_count": 11, "digg_article_count": 2, "got_digg_count": 537, "got_view_count": 33396, "post_shortmsg_count": 0, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 870, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546490, "tag_id": "6809640357354012685", "tag_name": "React.js", "color": "#61DAFB", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/f655215074250f10f8d4.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1432234367, "mtime": 1631692935, "id_type": 9, "tag_alias": "", "post_article_count": 16999, "concern_user_count": 226420}, {"id": 2546492, "tag_id": "6809640361531539470", "tag_name": "Node.js", "color": "#e81864", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/f16f548d25028a1fdd80.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1432234488, "mtime": 1631690352, "id_type": 9, "tag_alias": "", "post_article_count": 11514, "concern_user_count": 280711}, {"id": 2546519, "tag_id": "6809640398105870343", "tag_name": "JavaScript", "color": "#616161", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/5d70fd6af940df373834.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1435884803, "mtime": 1631692583, "id_type": 9, "tag_alias": "", "post_article_count": 67405, "concern_user_count": 398956}, {"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6844903617728610317, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6924978746441072647", "article_info": {"article_id": "6924978746441072647", "user_id": "342703357834413", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "《算法导论》一，二部分算法浅析及其JavaScript实现", "brief_content": "...... 先理解一个概念，算法中有一种设计思想叫分治法。 这里直接给出公式 证明过程。。。。你懂的 堆总是一棵完全二叉树。 increase: 只要不停的与父节点进行比较，若比父节点大则互换位置。若比父节点小则位置恰好，结束循环。 快速排序是一种最坏情况时间复杂度位n^2的…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1612347264", "mtime": "1612406735", "rtime": "1612406735", "draft_id": "6924977088374145038", "view_count": 174, "collect_count": 0, "digg_count": 1, "comment_count": 8, "hot_index": 17, "is_hot": 0, "rank_index": 0.00024191, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "342703357834413", "user_name": "magic_zhu", "company": "", "job_title": "", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/1846395f3ebd56ba47c7c4daad890337~300x300.image", "level": 1, "description": "菜菜子 =  又菜又佛系", "followee_count": 21, "follower_count": 7, "post_article_count": 6, "digg_article_count": 5, "got_digg_count": 21, "got_view_count": 1927, "post_shortmsg_count": 0, "digg_shortmsg_count": 1, "isfollowed": false, "favorable_author": 0, "power": 40, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6924978746441072647, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6951500353275691016", "article_info": {"article_id": "6951500353275691016", "user_id": "78820566642413", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "买卖股票的最佳时机|刷题打卡", "brief_content": "前言本文正在参与掘金团队号上线活动，点击查看大厂春招职位。题目给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。你只能选择 某一天 买入这只股票，", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1618523703", "mtime": "1618823145", "rtime": "1618823145", "draft_id": "6951196310896640031", "view_count": 164, "collect_count": 0, "digg_count": 2, "comment_count": 0, "hot_index": 10, "is_hot": 0, "rank_index": 0.000241, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "78820566642413", "user_name": "敲代码的厨娘", "company": "苏州某小型公司", "job_title": "前端开发", "avatar_large": "https://sf6-ttcdn-tos.pstatp.com/img/user-avatar/3dcf8b739391fbb2985fe95aa590581a~300x300.image", "level": 1, "description": "前端菜鸡", "followee_count": 17, "follower_count": 4, "post_article_count": 16, "digg_article_count": 35, "got_digg_count": 9, "got_view_count": 1344, "post_shortmsg_count": 1, "digg_shortmsg_count": 0, "isfollowed": false, "favorable_author": 0, "power": 22, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6951500353275691016, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}, {"article_id": "6936451340285509645", "article_info": {"article_id": "6936451340285509645", "user_id": "1468603266767197", "category_id": "6809637767543259144", "tag_ids": [6809640499062767624], "visible_level": 0, "link_url": "", "cover_image": "", "is_gfw": 0, "title": "LeetCode739. 每日温度(栈问题进阶)｜刷题打卡", "brief_content": "请根据每日 气温 列表，重新生成一个列表。对应位置的输出为：要想观测到更高的气温，至少需要等待的天数。如果气温在这之后都不会升高，请在该位置用 0 来代替。 例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的…", "is_english": 0, "is_original": 1, "user_index": 0, "original_type": 0, "original_author": "", "content": "", "ctime": "1615018587", "mtime": "1615021949", "rtime": "1615021949", "draft_id": "6936438728218902541", "view_count": 97, "collect_count": 0, "digg_count": 10, "comment_count": 0, "hot_index": 14, "is_hot": 0, "rank_index": 0.00024085, "status": 2, "verify_status": 1, "audit_status": 2, "mark_content": ""}, "author_user_info": {"user_id": "1468603266767197", "user_name": "random__", "company": "", "job_title": "前端开发", "avatar_large": "https://sf3-ttcdn-tos.pstatp.com/img/user-avatar/aa8005ae28c3f938e7657ff6ea7a7325~300x300.image", "level": 2, "description": "emm...", "followee_count": 81, "follower_count": 41, "post_article_count": 52, "digg_article_count": 544, "got_digg_count": 420, "got_view_count": 11407, "post_shortmsg_count": 15, "digg_shortmsg_count": 50, "isfollowed": false, "favorable_author": 0, "power": 534, "study_point": 0, "university": {"university_id": "0", "name": "", "logo": ""}, "major": {"major_id": "0", "parent_id": "0", "name": ""}, "student_status": 0, "select_event_count": 0, "select_online_course_count": 0, "identity": 0, "is_select_annual": false, "select_annual_rank": 0, "annual_list_type": 0, "extraMap": {}, "is_logout": 0}, "category": {"category_id": "6809637767543259144", "category_name": "前端", "category_url": "frontend", "rank": 2, "back_ground": "https://lc-mhke0kuv.cn-n1.lcfile.com/8c95587526f346c0.png", "icon": "https://lc-mhke0kuv.cn-n1.lcfile.com/1c40f5eaba561e32.png", "ctime": 1457483942, "mtime": 1432503190, "show_type": 3, "item_type": 2, "promote_tag_cap": 4, "promote_priority": 2}, "tags": [{"id": 2546592, "tag_id": "6809640499062767624", "tag_name": "算法", "color": "#60ADFF", "icon": "https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/leancloud-assets/68a1097944c7fa1d7961.png~tplv-t2oaga2asx-image.image", "back_ground": "", "show_navi": 0, "ctime": 1439503293, "mtime": 1631692675, "id_type": 9, "tag_alias": "", "post_article_count": 23471, "concern_user_count": 310821}], "user_interact": {"id": 6936451340285509645, "omitempty": 2, "user_id": 0, "is_digg": false, "is_follow": false, "is_collect": false}, "org": {"org_info": null, "org_user": null, "is_followed": false}, "req_id": "2021091516030601020405602532004485"}], "cursor": "eyJ2IjoiNzAwNzYyNzUzMTk4MTQyMjYyOCIsImkiOjEzMDB9", "count": 1774, "has_more": true}