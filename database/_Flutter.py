[{"id": "6881616516886822919", "title": "记录使用GestureDetector组件的一个点", "desc": "GestureDetector是用来监控用户手势的一个组件，具体使用如当Container中的child是Text时，发现即使父Container定义了宽度高度，可点击区域也只有Text的可视区域，如"}, {"id": "6844903853893091342", "title": "Flutter Web 实战 - 俄罗斯方块", "desc": "最近看到 Flutter 支持 web 开发了，于是今天尝试将之前写的一个小游戏移植到 flutter_web。 观察可以发现，相对于原有的flutter 目录结构，flutter_web 只是多了一个 web 文件夹。 1. 复制 Web 文件夹 毫无疑问，web/main.…"}, {"id": "6904838910497849352", "title": "Flutter 实现钉钉消息列表效果(一)", "desc": "Flutter环境安装可以参考Flutter官网步骤进行安装搭建实现效果如图创建Fluter项目flutter_dingtalk创建DTMainScreen主布局，使用PageView加载显示和切换视"}, {"id": "6844903924550516743", "title": "flutter json数据处理", "desc": "只要我们的app不是单机的，那么必然涉及到远程服务器数据请求。在flutter中，发起请求已经有现成的包dio了，使用起来也非常简练方便，如还是不是很了解，可以点击查看dio的详细文档。 发起请求，拿到服务端返回的json数据后，接下来的步骤是怎么样的。flutter(应该说是…"}, {"id": "6844904198920749063", "title": "Flutter 新闻客户端 - 08 路由管理 auto_route", "desc": "B站视频https://www.bilibili.com/video/BV1xf4y1S7Xq本节目标安装插件路由定义自动生成路由控制类转场动画登录检查中间件带参数传递获取返回值正文一些优秀的路由插件"}, {"id": "6844904126183129096", "title": "flutter仿微信底部图标渐变", "desc": "在flutter中，如果想实现上面的页面切换效果，必然会想到pageView。pageView的controller可以监听到pageView的滚动事件，也可以获取pageView滚动的位置，所以我们在滚动事件中根据位置去改变对应的图标颜色就可以实现了。 图标是从微信中提取出来…"}, {"id": "6844903811694198791", "title": "Flutter状态管理学习手册(一)——ScopedModel", "desc": "ScopedModel属于入门级别的状态管理框架，它的思想比较简单，参考官方文档便可以很容易理解其中构架。 在Flutter中Lifting state up(状态提升)是十分必要的，状态提升可以理解为把组件之间相互共享的状态提取出来放在一个较高层级中管理的一种思想。Scope…"}, {"id": "6844903940652269576", "title": "Flutter Widget and Bald", "desc": "...... 这些我们都不讲，今天我们聊一下 Flutter Widget 。让我们开始吧～ 呈现的样⼦。当 Widget 的状态改变时，它会重新构 建其描述（展示的 UI），框架则会对⽐前后变化的 不同，以确定底层渲染树从⼀个状态转换到下⼀个状 态所需的最⼩更改。 Widge…"}, {"id": "6844903741875814413", "title": "爱奇艺 Flutter 跨平台 Hybrid 实践", "desc": " "}, {"id": "6858275663506964487", "title": "【Flutter】设计一个简单的列表搜索栏", "desc": "在一些类似微信，微博等大型应用中，它们基本上都会自带一个搜索功能。在之前，我使用了 RxDart 设计了一个单选列表组件（原文在这里），下面我将使用这个单选列表组件，来构建一个满足部分需求的列表搜索。 在 TextField 中，我们可以传入 TextEditingContro…"}, {"id": "6844903813241896973", "title": "Flutter和原生之间的平台通道实践与原理", "desc": "Flutter使用了一个灵活的系统，允许开发者调用特定平台的API，无论在Android上的Java或Kotlin代码中，还是iOS上的ObjectiveC或Swift代码中均可用。 应用的Flutter部分通过平台通道（platform channel）将消息发送到其应用程序…"}, {"id": "6951549443116105764", "title": "[Flutter翻译]Flutter Linux插件开发设置", "desc": "由于Flutter对Linux桌面的支持，我们现在可以期待这个伟大的平台有更多漂亮的应用。然而，当你想写一个自定义插件来扩展你的应用程序的功能时，你需要写一些C代码。我没有在任何地方找到关于如何做到这"}, {"id": "6844903637668331534", "title": "Flutter 中 ListView 组件的子元素曝光统计 | 掘金技术征文", "desc": "在使用 Flutter 开发应用的过程中我们经常遇到需要展示一组连续元素的情景。这时我们通常会选择使用 ListView 组件。在电商场景中，被展示的元素通常是一组商品、一组店铺又或是一组优惠券信息。把这些信息正确的展示出来仅仅是第一步，通常业务同学为了统计用户的浏览习惯、活动…"}, {"id": "6844904103961690120", "title": "Flutter集成到已有iOS工程", "desc": "之前写过一篇介绍flutter集成到Android工程的文章，这次总结记录一下自己把flutter集成到iOS的流程，以及遇到的问题以及和解决方法供大家参考。 使用Android studio创建在上一篇新版Flutter集成到已有Android项目中有介绍，这里不再赘述。 这…"}, {"id": "6844904198903955470", "title": "Flutter 新闻客户端 - 06 代码规范、业务代码组织、新闻首页实现", "desc": "B站视频https://www.bilibili.com/video/BV1Pp4y1C7hx1本节目标代码规范业务代码组织首页代码编写2代码规范2.1官方代码规范https://dart.dev/g"}, {"id": "6972556159802671111", "title": "Flutter中使用Bloc做状态管理实践 ", "desc": "为了获得高性能，更好的规范代码，在flutter的代码中我们通常会引入状态管理，flutter中的状态管理有很多种，这里介绍flutter中使用Bloc的实践方法。"}, {"id": "6844904166939181063", "title": "【译】Dart/Flutter中的异步编程", "desc": "好久没有更文了，为避免让广大朋友产生我消失了的错觉，所以就又水一文，能帮助一个是一个。 本来想自己写写文章，后来发现翻译也不错。这里是英文原文。 正如上面的代码，很多Dart异步API都是返回的Future。Future也是Dart异步编程中最基础的一个概念。总地来说，Dart…"}, {"id": "6982080902377504781", "title": "Flutter for Mac安装", "desc": "配置环境 先判断shell指定的环境，在终端输入chsh输入密码，会显示/bin/xxxx，xxxx就是shell的环境是bash还是zsh 使用bash环境 vim ~/.bash_profile "}, {"id": "6859273722667368455", "title": "[Flutter翻译]在Flutter中为linux编写插件", "desc": "嘿，希望你在这次流行病中没事。我们都知道Flutter最近用canonical扩展了对linux的支持。有了这个，我们现在可以更容易地用Flutter为linux构建和部署应用程序了。 在这个例子中，我们将创建一个插件，它将为我们提供电池百分比水平和它的技术。 在你的插件文件夹…"}, {"id": "6844903945744154632", "title": "1、深入研究flutter组件之（AbsorbPointer）", "desc": "AbsorbPointer可以想象成web端的遮罩，众所周知周知，禁止表单的点击时间有disabled，但是这样一来，如果页面比较复杂，要控制表单元素是否可点那可成了灾难，这时候AbsorbPointer就可以快速解决这个问题。我们可以把它看成是一个透明的穹顶，一旦打开，从外部…"}, {"id": "6844904025532399629", "title": "Flutter widget的生命周期", "desc": "最近一直在用flutter做app，感觉就像用vue或react写web页面一样，蛮好玩的。为了加深自己对Flutter的理解，记录一下自己的学习心得。 1. state对象的依赖发生变化时，这是当state中通过InheritedWidget使用了父级widget的共享数据，…"}, {"id": "6919302914309619719", "title": "Flutter的滚动控件", "desc": "直接使用默认构造函数创建：适合数据量较小的列表，一次性创建所有子控件。 使用命名构造函数ListView.builder创建。适用于数据量较大或者无限数据量的情况，因为不会一次性构建所有的子widget，widget只有在需要展示的时候才会被创建。 使用ListView.sep…"}, {"id": "6856650182211076104", "title": "「 Flutter x CloudBase Framework 」把 Flutter 云端一体化做到极致", "desc": "Flutter 开发者福利 ~ 经过对 Flutter 云端一体化的持续探索，并且和多个业务团队持续打磨，现在可以通过 CloudBase Framework 一键创建并部署 dart server，完成前后端业务闭环。 1. 背景 云开发 CloudBase 提供了强大的一站…"}, {"id": "6844904160777732104", "title": "[译]深入Flutter", "desc": "本文描述了Flutter的内部工作原理。Flutter的widget是用激进组合的方式工作的，所以用户在构建UI的时候会用到很多的widget。为了支持这个工作量，Flutter使用了亚线性算法来处理布局、构建组件以及树数据结构。还包括了其他的一些常量及的优化。综合考虑其他的一…"}, {"id": "6973894926471790606", "title": "[Flutter翻译]Discreet日志#2: Qwtch to Flwtch: 将Cwtch的Go/Qt前端移植到Go/Flutter上", "desc": "欢迎来到Discreet Log! 这是一个两周一次的技术开发博客，深入介绍我们在Open Privacy从事的研究、项目和工具。在我们的第二篇文章中，Erin Atwater记录了为Cwtch开发的"}, {"id": "6936313630359027720", "title": "[Flutter翻译]Discreet Log #2: Qwtch to Flwtch: 将Cwtch的Go/Qt前端移植到Go/Flutter上。", "desc": "欢迎来到Discreet Log！这是一个两周一次的技术开发博客，提供我们在Open Privacy工作的研究、项目和工具的深入了解。每两周一次的技术开发博客，深入了解我们在 Open Privacy 工作的研究、项目和工具。在我们的第二篇文章中，Erinn Atwater记录…"}, {"id": "6903541465453068295", "title": "Dart Json 序列化方案探索-睡前开发笔记(一)", "desc": "之前的文章: &#x3C;&#x3C;Dart Json序列化方案探索-插件展示>>已经展示过json_object插件的基础功能了, 我们现在分享json_object的开发笔记. 这是笔记的第一天, 今天我们要做的事情有: 我需要像类对象使用类的成员那样访问JsonObje…"}, {"id": "6844903845412225038", "title": "【Flutter工具】fmaker:自动生成倍率切图/自动更换App图标", "desc": "fmaker可以自动识别项目下/assets/fmaker中的多倍图，将多倍图按flutter格式递归转换为2.0x，3.0x，4.0x等文件夹，再将压缩后的低倍图保存到assets中，保证flutter可以自动识别低倍率的图片。例如，在文件夹下放置example@3x.png…"}, {"id": "6902793665878425614", "title": "【flutter】手把手写flutter入门的例子（二）：无限滚动ListView添加交互和导航到新页面", "desc": "接下来还是在这个无线滚动ListView中添加交互和导航到新页面。 实现内容：在每一行添加一个可点击的心形icon，当用户点击列表中的条目，切换收藏状态时，将该单词对添加或者移除到收藏夹。 第一步：添加一个_saved Set（集合）到RandomWordsState。这个集合…"}, {"id": "6944597896071217189", "title": "Flutter中布局实现：线性、弹性、流式和层叠布局", "desc": "Flutter中通过Row和Column来实现线性布局，类似于Android中的LinearLayout控件。Row和Column都继承自Flex，弹性布局Flex允许子组件按照一定比例来分配父容器空间。超出屏幕显示范围会自动折行的布局称为流式布局。Flutter中通过Wrap和..."}, {"id": "6913810958443872264", "title": "flutter工程化-flutter实际项目中的包管理", "desc": "实际项目中我们会用到许多package，无论是我们自己编写的还是使用的第三方。寻找我们需要的包国内可以在https://pub.flutter-io.cn查找。 flutter的package使用和npm包类似。添加一个package的步骤如下： 打开应用文件夹下的 pubsp…"}, {"id": "6844903893734785038", "title": "Native转型Flutter经验分享", "desc": "为了让大家能够了解我们在进行Native转型Flutter期间遇到的问题以及为什么要进行这样的决策，首先介绍一下项目背景。 进行Flutter转型的项目是公司一个长期迭代的物联网App，该产品会发布到Android和iOS两个平台上，平均每个月都需要发布一个版本。到目前为止，整…"}, {"id": "6916870555060666376", "title": "【Flutter 2-7】Flutter手把手教程UI布局和Widget——垂直布局控件Column|七日打卡", "desc": "Column是在Flutter中常见的布局控件，它负责垂直方向布局。Row负责水平方向布局，二者都是继承于Flex，类似于iOS里面的UIScrollView，但是又有很多不同。 把剩余的空间拆分成n-1份(n是子控件的个数)，这里也就是3分，每一份都插入到子控件之间。看绿色数…"}, {"id": "6911482886843531277", "title": "Flutter学习之旅-混合开发Part1", "desc": "当在发送和接收值时，这些值在消息中的序列化和反序列化会自动进行。"}, {"id": "6860823970015510536", "title": "最右 JS2Flutter 框架——渲染机制（二）", "desc": "1、概述在上一篇文章最右JS2Flutter框架——开篇[1]中，我们已经介绍了如何实现最简单的HelloWorld，示例中只涉及到Text一个Widget，实际开发过程中，会需要用到各种丰富的Wid"}, {"id": "6911338293376319501", "title": "【摸鱼研究所】让你的屏幕下个雪呗 （番外篇）", "desc": "1. 怎样的雪花会撞在障碍物上呢 通过上面方法来判断雪花是不是危险，但是如果你说雪花比障碍物大怎么办？那你说我怎么办～当然随便他怎么办，我反正不办。 2. 那撞墙了要怎么办呢 在左图中，我们只需要求 S 点的位置所对应的 角θ ,就可以知道圆弧的起始角度，弧度对应 2倍的角1，…"}, {"id": "6921009592251973639", "title": "Flutter学习笔记—布尔、列表、map", "desc": "布尔类型在Dart中，布尔类型的默认值为null。列表创建列表与获取下标从0开始，使用length可以访问list的长度添加元素可以使用add添加元素定义不可改变的列表可以在list字面量前添加con"}, {"id": "6844903849958834189", "title": "站在巨人的肩膀上", "desc": "自移动平台（iOS / Android）诞生以来，跨平台开发的尝试从未停止，成功与失败并存。而 Flutter 的出现并非偶然，是 Google 基于前人长期以来探索的道路，辅以大规模人力、物力创造得到的。 在真正开始 Flutter Talk 之前，我觉得有必要让大家知道，十…"}, {"id": "6947907713175126053", "title": "Flutter组件Image", "desc": "1. 手动创建图片目录 assets/images，将图片拖到文件夹中 2. pubspec.yaml配置文件中设置图片路径（注意assets:前面的空格可能引起编译错误） 3. 加载本地图片 clear：清楚源图像和目标图像。 color：获取源图像的色相和饱和度以及目标图像…"}, {"id": "6844903722124836872", "title": "Flutter免费视频第二季-常用组件讲解", "desc": "这一季将集中火力，死磕Flutter的API，也就是组件（widget）的使用，我们尽量把常用的都讲到，这也算学习中最辛苦的一章，因为你要记忆的内容会很多。但是学完后，会很有成就感。（但学习这一季，你必须先把第一季看了，否则没有开发环境是没办法继续学习的。）"}, {"id": "6844903889691475976", "title": "3、Flutter Tips - Flutter 1.7 发布;", "desc": "7月10日，Flutter Team宣布推出Flutter 1.7版本，是在Google I/O发布主要功能后发布的较小版本。Flutter 1.7包含对AndroidX支持和Google Play商店要求的支持的更新，一些新的和增强的组件，以及针对用户上报issues的修复。…"}, {"id": "6901870015646662664", "title": "【Flutter 1-10】Flutter手把手教程Dart语言——运算符[二]", "desc": "运算符是一种告诉编译器执行特定的数学或逻辑操作的符号。Dart语言内置了丰富的运算符，并提供了以下类型的运算符：算术运算符、关系运算符、类型判断运算符、赋值运算符、逻辑运算符、按位和移位运算符、条件表达式、级联运算符以及其他运算符。 条件 ? 表达式 1 : 表达式 2 ：如果…"}, {"id": "6945273407617368078", "title": "Flutter: Error running pod install", "desc": "Launching lib/main.dart on iPhone 8 in debug mode... Running pod install... 318.0s 这里省略很多。。。。 Cloning into '/var/folders/k8/p7j2dm4x32nbl20…"}, {"id": "6844903762453069831", "title": "[译] Flutter: 图解 Container 部件", "desc": "Flutter 1.0 也推出差不多一两个月了，然而官方文档并不友好，这里 图文并茂地介绍下 基本部件 Container 的使用。"}, {"id": "6914535341101678605", "title": "【Flutter 2-4】Flutter手把手教程UI布局和Widget——Statelesswidget与Statefulwidget", "desc": "如果一个Widget从初始化到使用再到销毁，整个过程中都不需要修改其UI的样式，例如纯展示页面，我们就用Statelesswidget。常见的Statelesswidget有：Text、Icon、ImageIcon、Dialog等。可以看到这些往往都是一些展示类的，不需要改变其…"}, {"id": "6844903966749229070", "title": "Flutter学习篇(六)——路由剖析终篇", "desc": "在路由剖析前篇已经讲了Navigator的初始化，路由的映射生成以及观察订阅，这个篇章则会侧重于路由的形态以及路由的本质。 做的事情无外乎就是从_history取出oldRoute, 把route加入_history,然后各自调用oldRoute,route的一些类似生命周期的…"}, {"id": "6844903833924009997", "title": "Flutter 基础布局Widgets之FittedBox详解", "desc": "FittedBox组件的作用是对child组件进行缩放和对齐方式的设置，其缩放的参数为fit，有多种选择的方式，而对齐方式alinment用法则和之前一致，即很多都是相通的。 fill(通过扭曲源的纵横比填充目标框。): none(将源文件对齐到目标框内(默认情况下居中)，并丢…"}, {"id": "6904839340690505741", "title": "Flutter 实现钉钉消息列表效果(三)", "desc": "上一篇:Flutter实现钉钉消息列表效果(二)依赖实现效果如图修改整体的DTMessageScreen布局使用SingleChildScrollView+Column实现一个DTMessageLis"}, {"id": "6919400745334898696", "title": "Dart异步操作及网络请求", "desc": "Dart中的异步操作使用Promise来实现，跟js中的Promise很像，直接使用Promise对耗时操作进行包裹即可。 上面操作中，将模拟的耗时操作使用Future进行包裹，返回“请求到的”数据。在main方法中，使用then来对数据进行处理。跟js中Promise不同，F…"}, {"id": "6844903861715468302", "title": "3、Flutter Multiplatform - desktop;", "desc": "Flutter for Desktop最初是为了开发Flutter的Windows，macOS和Linux嵌入而创建的项目,这项工作后来成为Flutter的一部分。而此项目现在只是在当前状态下使用这些库构建Flutter应用程序的示例和测试环境，它还包括一些实验性的早期桌面插件…"}, {"id": "6896344386741731342", "title": "【Flutter 1-8】Flutter教程Dart语言——控制语句", "desc": "Dart 支持 if - else 语句，其中 else 是可选的，比如下面的例子。 Switch 语句在 Dart 中使用 == 来比较整数、字符串或编译时常量，比较的两个对象必须是同一个类型且不能是子类并且没有重写 == 操作符。 枚举类型非常适合在 Switch 语句中使…"}, {"id": "6844903967286132749", "title": "Web 开发者如何理解 Flutter 布局之 —— 2. Container", "desc": "容器组件。 类似于行级元素,跟随内容的增大而增大。 装饰属性存在时,背景色应写在BoxDecoration中,若BoxDecoration与外层的样式属性冲突,则会报错。 报错指出,container的 color 是其 BoxDecoration.color 的快捷方式,无法…"}, {"id": "6844903967286099981", "title": "Web 开发者如何理解 Flutter 布局之 —— 1. Text", "desc": "文本组件。 *注: 若使用Text Widget,但文本不足以撑满一行,则文本以行级样式展现,由于未设宽度,因此不会应用右对齐的效果。"}, {"id": "6844903892975616013", "title": "Flutter与Native的混合开发之--Andriod项目调用Flutter项目页面-初探", "desc": "目前Flutter比较流行，对于目前前端同学来说，，学习Flutter的来说，相对来说不是那么难，学习曲线还好，而相对于有Android或者IOS开发经验的同学来说，可能会更容易一点，如果是光学些Flutter和Dart方面的东西来说，可以按照其官方提供的api来进行学习即可，…"}, {"id": "6844903827913572366", "title": "Flutter 初探(四)：滚动类Widgets", "desc": "走马观花式的学习并不能带来高的学习效率，尤其是缺乏学习资料的技术，仅仅靠着一本书是不够的，需要深入思考，结合文档，源码应该才是最佳学习实践机会。"}, {"id": "6860824501832630286", "title": "最右 JS2Flutter 框架——通信机制（三）", "desc": "1、概述通信包括异步和同步两种方式，异步可根据是否关注返回结果再细分成Request-Reply和One-Way两种。JS2Flutter框架的通信机制也是在不断的迭代中逐步完善，年初发的文章Flut"}, {"id": "6917533954971009037", "title": "【Flutter 2-9】Flutter手把手教程UI布局和Widget——弹性布局控件Flexible | 七日打卡", "desc": "Flexible可以帮助Row、Column、Flex的子控件充满父控件，它的用法很灵活，也具有权重的属性。跟Flexible相类似的控件还有Expanded。 Flexible的参数flex是表示比例的值。 我们给第二个控件设置的flex值为2，给Image设置的高度为80，…"}, {"id": "6844903889913774093", "title": "初略讲解Flutter的状态管理", "desc": "响应式的编程框架中都会有一个永恒的主题——“状态（State）管理”，无论是React/Vue（两者都是支持响应式编程的Web开发框架）还是Flutter，讨论的问题和解决的思想都是一致的。所以，如果你对React/Vue的状态管理有了解，可以跳过本节。言归正传，我们想一个问题…"}, {"id": "6844904039726252039", "title": "基于Flutter+FaaS的业务框架思考与实践", "desc": "闲鱼长期在做技术一体化的探索与实践：我们希望使用一门语言，一套技术栈，能让开发工程师在任何场景完成业务开发，实现开发模式和技术栈的统一。这是对开发效率的极致追求，也是对开发人员的深度赋能，更好的释放人员价值，驱动业务成长。 闲鱼已经借助Flutter良好的跨栈能力来对App上的…"}, {"id": "6844903999158616078", "title": "flutter好用的轮子推荐十六-flutter可自定义的评分组件", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6847902222324334605", "title": "iOS与Flutter混合开发的姿势", "desc": "首先要解释一下题目, 本文关于混合开发细节本文会简要聊一些, 因为官方文档与网友的智慧已经相当完备, 完全可以面向google编程, 这里不必赘述。那么就回到了本文的核心中来, 主要讲述了针对 iOS 与 Flutter 混合开发中为了一个小优化点而进行的一系列不 ( zi )…"}, {"id": "6944000831465193480", "title": "Flutter  打包 android端  apk", "desc": "本次所记录的打包流程全部都是在Android Studio上完成,建议不要直接参考官方文档的打包流程，不然很大几率会出错 android studio终端生成签名文件 例：keytool -genke"}, {"id": "6874032135007797262", "title": "Flutter 绘制图形 Circle Packing", "desc": "懒癌发作，好久没写文章了... 本文讲解使用 Flutter 实现 Generative Artistry 教程里面的第六个图形 Circle Packing（圆形填充）。 创建一个圆。 判断这个圆是否与其他圆发生碰撞。 没有则不断增大圆的半径，再次进行碰撞检测，直至最大半径。…"}, {"id": "6844903801808224263", "title": "Flutter RichText支持自定义文字背景", "desc": "那个啥。。我的中文字呢？ 被怂为啥别人别的平台能做啊，不管，必须支持。于是我又去看了下issue，去年的issue，都快4个月了。。搞什么鬼，修不修？ 算了，不修，老夫自己来画。。 文本里面加入图片我们做过了那么一切好像都是顺水成章的事情了。如果下面有哪里觉得讲的有点跳跃，请先…"}, {"id": "6844904094230921230", "title": "Flutter | ShaderMask - 给你的Widget加上色彩", "desc": "嘿，你别说还挺好看。 话不多说，了解一下是如何实现的吧。 请出今天的主角：ShaderMask。 这就是官方demo的例子，也是 ShaderMask 最基础的用法，下面就来说一下进阶的用法。 其实这个和 ShaderMask 本身没有什么关系了，是「着色器」和「动画」的合作后…"}, {"id": "6844903808380698637", "title": "Android原生集成Flutter的浅尝", "desc": "感谢Flutter的先行者们对Flutter的项目的促进，以便让我们这些后来者能少跳一些坑。这篇文章之前已经有许多谈论这方面的文章了。最具代表性的就是 闲鱼技术组 的系列文章了。而这篇文章更多的是个人在实际项目中的运用与总结。 这种方式是我在完成 Flutter 层开发后，为了…"}, {"id": "6844903737740230670", "title": "Flutter redux 进阶", "desc": "会有两个问题：UI视图和Redux数据通用逻辑耦和在一起，无发通过mock数据来对UI进行UT；大家习惯套路代码，上来就是一个stful，不会想是不是stless更科学点（事实上初代实现80%的Screen是Statefull的，重构后90%都能写成Stateless，提升了页…"}, {"id": "6844903989113421838", "title": "Flutter开发日记——Flutter动画&Motion Widget详解（下）", "desc": "本篇文章已授权微信公众号YYGeeker独家发布转载请标明出处AnimatedDefaultTextStyle1、简介AnimatedDefaultTextStyle控件表示一个具有变化文本样式的动画"}, {"id": "6942090969181487111", "title": "Flutter-Dart网络", "desc": "只要开火(方法调用),然后你就可以去扫地(执行异步任务下面的方法)，水烧开鸣叫(回调)， 去冲水(处理异步任务结果)。 Dart IO库中提供了Http请求的一些类，我们可以直接使用HttpClient来发起请求。使用HttpClient发起请求分为五步： 这一步可以使用任意H…"}, {"id": "6858180268793184264", "title": "Flutter+FaaS一体化任务编排的思考与设计", "desc": "简介：闲鱼flutterfaas一体化提升研发体验+研发质量Flutter+Serverless三端一体研发架构，客户端不仅仅是编写双端的代码，而是扩展了客户端的工作边界，形成完整的业务闭环。在新的研"}, {"id": "6844904023636590605", "title": "Flutter环境搭建", "desc": "本篇文章主要介绍在 Mac 环境搭建 Flutter 的相关流程及可能遇到的一些问题的解决方案。Flutter 官方其实已经提供了很全面的 安装流程 , 所以这里主要讲的还是一些大家可能遇到的环境问题的解决办法。 Flutter 开发环境需要安装 JDK，Android SDK…"}, {"id": "6901297790698618888", "title": "mac flutter 工程安装及踩坑", "desc": "--- # 主题列表：flutter theme: 不萌也不呆 highlight: --- > 附上官方安装教程：https://flutterchina.club/setup-macos/ > 使"}, {"id": "6844903869797892109", "title": "Mac版最详细的Flutter开发环境搭建", "desc": "Flutter是相对新出的框架，对系统有一定的要求。 将下载好的sdk保存后解压。 记住解压后的文件路径，接下来要用到。 由于在国内访问Flutter有时可能会受到限制，Flutter官方为中国开发者搭建了临时镜像，可以将如下环境变量加入到用户环境变量中。 使用快捷键Comma…"}, {"id": "6844903893273411598", "title": "闲鱼Flutter＆FaaS云端一体化架构", "desc": "国有，闲鱼架构团队负责人。在7月13号落幕的2019年Archsummit峰会上就近一年来闲鱼在Flutter&FaaS一体化项目上的探索和实践进行了分享。 随着无线，IoT的发展，5G的到来，移动研发越发向多端化发展。传统的基于Native＋Web＋服务端的开发方式，研发效率…"}, {"id": "6959901808172990495", "title": "【公告】lexpro 库 sound null safety 版本发布", "desc": "这个五一节最大的动作就是把 lexpro 从 sdk 2.10 提升到 2.12+，这是 flutter2+ 支持的版本号，以后库特性将跟随语言特性和框架特性一起更新..."}, {"id": "6844904041093431309", "title": "Flutter 食髓知味", "desc": "早期针对各平台（操作系统差异），使用相应平台支持的开发语言，开发应用。就 ios 和 android 两大阵营来讲，需要两套代码来实现一款应用，生产效率相对较低。 H5 技术的出现，为 web 运行在原生应用中提供了更好的支持。webview + jsBridge 让 web …"}, {"id": "6854573214681858062", "title": "[Flutter翻译]【第2部分】在Dart中生成代码：注解、source_gen和build_runner", "desc": "在\"【第1部分】Dart中的代码生成：基础知识 \"中，我们介绍了代码生成背后的动机是什么，并列出了Dart中最重要的工具，让计算机为我们做艰苦的工作。在这篇文章中，我们将介绍如何创建和使用Dart注解，以及如何使用source_gen和build_runner开始处理这些注解。…"}, {"id": "6844903731708837902", "title": "Flutter之使用PageView实现图片预览视差效果", "desc": "继续Flutter系列博客的更新，google在昨天12月14日发布了Flutter的1.0(Stable)版本，不同于google挖的其他坑，Flutter自发布release版本号到第一个stable版本之间也才过了十个月，可见google对Flutter的定位绝不是一个实…"}, {"id": "6916864335578923015", "title": "Flutter | 包管理 ", "desc": "​在日常开发中，很多时候需要用到第三方的SDK，这些SDK可能会被很多个项目用到，因此可以将这些代码单独抽到一个模块中，使用的时候只需要集成对于的模块即可，​在Java中，模块会被打成一个jar包​在"}, {"id": "6911953634566209549", "title": "使用VScode+Chrome轻松体验flutter", "desc": "说明：这里我用的是windows，Mac后续体验了再补充一.安装flutter国内朋友可以前往flutter中文网下载安装：https://flutterchina.club/setup-window"}, {"id": "7002555371118133285", "title": "聊聊Flutter中的常见滑动手势冲突", "desc": "手势冲突，一个让人头疼的问题，尤其是在Flutter上。 最近我也遇到了两个嵌套列表滑动手势冲突的场景，搞得我有些怀疑人生～"}, {"id": "7002045224763523086", "title": "Flutter 热敏打印 模板化实现", "desc": "前言: 手机端打印一直是一个让人很头疼的问题,用图片打印,图片过大,性能太差.指令打印,可维护性差,调试麻烦. 于是我编写了一个渲染打印指令的库 GitHub链接 具有以下优点 支持数据绑定 模板化编"}, {"id": "7002837627111997471", "title": "Flutter 网络请求 Dio 封装", "desc": "一般在dart中网络请求库采用的是dio，在dio之上我们需要对其进行一层封装，以适应业务的繁杂需求。"}, {"id": "7004646798119665678", "title": "Flutter GetX系列教程---介绍、Snackbar、Dialog、BottomSheet、Navigation、Obx", "desc": "前言 本文是基于官方最新稳定版本get: ^4.3.8来进行开发 本系列课程将会以最简单的方式来进行讲解，对于零基础也可以轻松掌握，全文深入浅出，每一个章节都会有对于案例来展示效果以及如何运用。 整一"}, {"id": "6999139586739798029", "title": "Flutter特效--给控件钻石般的微光", "desc": "作为一个大前端开发者，我希望把UI尽善尽美的展现给用户；此时你不仅需要一个集能力、审美、高标准于一体的设计师配合，更需要自己对所写界面有着极高的追求。"}, {"id": "7005124611046113293", "title": "Fair 2.0逻辑动态化架构设计与实现", "desc": "Fair 1.0，我们实现了布局的动态化，但是数据部分没有动态化能力。针对这个问题，我们发起了2.0对逻辑动态化的支持。Fair 逻辑动态化，我们基本实现了跟数据相关的逻辑处理能力。"}, {"id": "7002558013269606430", "title": "聊聊Flutter中的点击空白处隐藏键盘", "desc": "如何监听全局点击事件，且不影响已有组件点击事件的分发响应？如何获取输入框组件所在的区域，判断点击坐标是否命中？这里有你想要的答案。"}, {"id": "7001787415920640013", "title": "Flutter Key的原理和使用(三) LocalKey的三种类型", "desc": "我们在上一章说到,同一级中相同类型的`Widget`不给它传`Key`的话,Flutter有时候就会出现分不清它们之间的对应关系,尤其是Widget之间的顺序发生改变的时候. 此时,我们就需要传个ke"}, {"id": "6946764691725254669", "title": "闲鱼宗心大佬聊跨端职业发展", "desc": "首先感谢掘金这个帮助开发者成长的社区，从 2020 年开始写博客至今，不仅沉淀（水）了近 80 篇博客，还完成了职业生涯的小突破。最重要的在优弧大大发掘我之后，借由掘金这个平台认识了很多好朋友和大佬。其中大圣和言哥对我的影响最多，在我多次迷茫或者瞎搞的时候给出建议或者直接敲打我…"}, {"id": "7001150450854527006", "title": "我们是怎么做到的：Google I/O Photo Booth", "desc": "我们（Very Good Ventures 开发者们）与 Google 合作，为今年的 Google I/O 带来了互动体验：Photo Booth！你现在可以与知名的谷歌吉祥物 Flutter's "}, {"id": "6992768707206316040", "title": "Flutter 疑难杂症系列：实现中文文本的垂直居中", "desc": "通过代码自适应的方式实现文本的垂直居中，避免了针对不同字体、字号及手机的适配工作，开发同学们再也不用担心文本的居中问题了。"}, {"id": "7005877183822430238", "title": "Flutter练习（三）— 仿掘金渲染掘金文章列表", "desc": "前言 上一章，我实现了moke json数据展示首页的分类，今天自己又写了一个文章列表组件来渲染从掘金上的文章"}, {"id": "7001085222070517796", "title": "Flutter Key的原理和使用 (一) 没有Key会发生什么", "desc": "在flutter中,几乎每个widget都有一个Key,但是我们使用的时候一般不会传Key , 那么这个Key,它到底是干什么用的呢? 几乎每个widget都有,但我们又很少用到它. 那到底什么时候才"}, {"id": "7000936745407610910", "title": "Flutter使用Draggable与自定义RenderObject实现图片添加标签，随意拖动位置效果", "desc": "本篇文章这里主要是讲一下整个功能的一个实现思路和使用到的技术点，更加详细的还请参阅源码 一、实现的效果图如下 二、实现的功能与使用到技术点 功能 标签拖动的时候显为一个圆点 标签只能在图片显示的范围内"}, {"id": "6993502936680628238", "title": "Flutter 比 React Native 更优秀的五个理由", "desc": "React Native 不能像 Flutter 那样提高性能，因为它是基于 JavaScript 运行时的架构。尝试用 Flutter 构建应用程序，不要由于 Dart 是一种陌生的语言而感到害怕。"}, {"id": "6981360281309937671", "title": "Flutter实现简单爆炸效果", "desc": "最近业务上需要投入的时间比较多，没有太多的时间去学习Flutter一些比较深入的知识，于是只好用一些碎片时间来实现一些简单的Flutter动画了"}, {"id": "7005839311018917924", "title": "将Flutter Module添加到原生项目中（单个Flutter实例、多个Flutter实例）", "desc": "参考Dart中文文档翻译：将 Flutter 集成到现有应用 Github官方Demo：https://github.com/flutter/samples/tree/master/add_to_ap"}, {"id": "7004644973370933278", "title": "Flutter深入浅出组件篇---AspectRatio、FractionallySizedBox", "desc": "AspectRatio介绍 AspectRatio 主要的作用是调整子组件设定的宽高比，如播放视频时16:9或4:3等。 示例代码 本文中很多效果都没有截图，可下载源代码运行项目 源代码地址，或者通过"}, {"id": "7003176923941568519", "title": "Flutter深入浅出组件篇---SizeBox、FittedBox", "desc": "SizeBox介绍 SizeBox 是一个指定尺寸的盒子，一般用来限制子控件的大小，能强制子控件具有特定宽度和高度。 示例代码 本文中很多效果都没有截图，可下载源代码运行项目 源代码地址，或者通过视频"}, {"id": "6975886005144387621", "title": "从 Flutter 和前端角度出发，聊聊单线程模型下如何保证 UI 流畅性", "desc": "从 Flutter 和前端角度出发，聊聊单线程模型下如何保证 UI 流畅性 - Dart 是单线程的，但通过事件循环可以实现异步 - Future 是异步任务的封装，借助于 await 与 asy"}, {"id": "6857022707587809287", "title": "Flutter 应用启动分析 (Android视角)", "desc": "在Flutter项目的AndrodManifest.xml配置了FutterApplication和MainActivity，所以先看在应用启动时FlutterApplication中做了什么事情。 主要初始化一些变量，包括aot的共享库名称，flutter的Asscets目录…"}, {"id": "6931593345793785870", "title": "Dart 危险的空值判断", "desc": "前段时间为上线了一个功能，然后开始有用于反馈bug 开始只有个别用户出现问题，后来大量的用户出现相同的问题。经过一天的紧张排查 后来终于锁定的问题出现的原因 if(result){} result被后来的一个业务给置为null。导致了后续的操作没有执行 在Dart语言里面一切数…"}, {"id": "6911166612859158536", "title": "Flutter 入门 - Dart 语法扫盲精选", "desc": "Flutter入门篇，想多说一些感慨：“没有必要准备充足再出发”。对未知、“新鲜”的技术领域，小伙伴们不忘初心，但忘记了出发。 自我设限的心理暗示只要你找，就肯定能找到一个，最常见的莫过于，没有准备好。每一个说中文的人，无论多么博学，都一定还存在不认识的汉字、存在不会写的笔画，…"}, {"id": "6918698096109191175", "title": "Flutter 中内置的显式动画", "desc": "在我们的 上一篇文章 中，我们弄清楚了如何利用 Flutter 的交织动画编写一些完美的动画。AnimatedFoo 和 TweenAnimationBuilder 让我们能够将一些基本动画运用在应用程序中。这些动画通常从头到尾使用补间进行渲染，而在这背后，Flutter 代替…"}, {"id": "6844903870112464904", "title": "Flutter安装、配置、初体验 windows 版", "desc": "采用了Dart作为开发框架和widget的语言。底层图形框架和Dart虚拟机在C /C++中实现。"}, {"id": "6844904058503839752", "title": "Flutter自制插件之r_calendar日历插件", "desc": "1.如何使用. 2.使用它."}, {"id": "6844904198937509901", "title": "Flutter 新闻客户端 - 10 编译发布正式版", "desc": "1. APP 图标 2. 启动图片 3. Android 发布 4. IOS 发布"}, {"id": "6906762712735285261", "title": "Flutter 布局学习笔记", "desc": "Flutter 官方文档中介绍了所有布局部件（Widget），我打算将其翻译成前端能看懂的教程，遂有此文。 所有部件我都用代码解释，如果你需要运行代码，可以提前下载初始代码，htps://github.com/FrankFang/pz11hUSS3pSJ 然后改写第 54 至 …"}, {"id": "6844904052396949517", "title": "新版Flutter集成到已有Android项目", "desc": "FlutterSDK升级后，我们发现不能按照原来的方式集成到已有Android项目中了，因为没有了Flutter这个类，通过阅读源码我找到了新的使用方式。 在已有Android工程中集成flutter，可以使用AndroidStudio的new Flutter Module实现…"}, {"id": "6844903857697325069", "title": "Flutter Spacer 灵活配置你的Row/Column", "desc": "我们平时在写 Row/Column 的时候，一般会配置一下子widget 的排列方式。 看图了解一下。 可以看到确实如我们刚才所写的一样。 一个小方块在最前面，两个小方块在后面。 可以看到，它其实就是包装了一个 Expanded 的 SizedBox 。 知道了原理以后我们就可…"}, {"id": "6844904133992923143", "title": "【flutter大杂烩】encrypt库rsa加密支持noPadding填充方式", "desc": "开发中遇到了一个问题，encrypt rsa加密填充方式只支持：OAEP 和 PKCS1，并不支持noPadding。 因此需要自己扩展一下，以支持noPadding填充。 RSA加密常用的填充模式有三种：RSA_PKCS1_PADDING， RSA_PKCS1_OAEP_PA…"}, {"id": "6844903888261218311", "title": "Flutter页面跳转到IOS原生界面   如何实现？", "desc": "2019年初的时候，我学过一阵子Flutter，着重看了下Bloc(business logic component),自己写了个小demo。完了之后，Flutter就被抛之脑后了。 二.在原生AppDelegate.m里，将FlutterViewController 作为ro…"}, {"id": "6844904194105671694", "title": "从0开始设计Flutter独立APP | 第一篇: 数据库与状态管理", "desc": "鉴于Flutter高性能渲染和跨平台的优势，闪点清单在移动端APP上，使用了完整的Flutter框架来开发。既然是完整APP，架构搭建完全不受历史Native APP的影响，没有历史包袱的沉淀，设计也能更灵活和健壮。 这几个业务点，设计到的技术选型有：本地数据库、前端状态管理，…"}, {"id": "6844903650158968846", "title": "[译] 使用 Flutter 实现跨平台移动端开发", "desc": "Flutter 是一款由 Google 开发的开源、跨平台移动端开发框架。它允许使用同一个代码库构建高性能、漂亮的 iOS 和 Android 应用，同时它也是 Google 即将推出的 Fuchsia 操作系统的开发平台。此外，通过自定义的 Flutter 引擎可以将其嵌入到…"}, {"id": "6844904196639031304", "title": "小技巧：Flutter如何引用自定义图标", "desc": "我说的不是Iconfont，它确实帮助我们解决了按项目管理图标以及生成.ttf文件的难题，但是对于Flutter，这还远远不够，我说的是fluttericon.com这个网站，和Iconfont不一样，这是一个不需要任何后端的网站，所以如果你觉得访问国外网站速度太慢，你还可以从…"}, {"id": "6844903972428316680", "title": "使用 Github Actions 持续发布 Flutter 应用", "desc": "Github Actions 是 Github 提供的一种 CI/CD 服务，如果你的 Flutter 应用代码放在 Github 上，那就可以使用这个服务自动化进行应用测试，构建，发布工作了。 要把构建出来的 apk 发布到仓库的 Release，还需要创建一个 Person…"}, {"id": "6844904195317825549", "title": "Flutter 玩转微信——微信首页", "desc": "这篇文章主要介绍的是如何利用Flutter搭建微信首页的功能，详细讲述该功能实现过程中所运用到的技术，以及遇到问题后如何解决的心得体会。该功能虽然粗看时看似简单，但是细作时发现其功能逻辑复杂，内部细节处理较高，当然其中涵盖了Flutter中大部分知识点，笔者相信初学者通过实现该…"}, {"id": "6917238956522209287", "title": "【老孟Flutter】为什么 build 方法放在 State 中而不是在 StatefulWidget 中", "desc": "删除了一些代码，保留了重点代码。 但 AnimatedState 是内部实现，并不需要开放给外部（开发者）,外部也不需要知道 AnimatedState 的内部实现。 此时的 this 指向的是 MyWidget 的实例，然后父组件改变颜色，重新构建 MyWidget 组件，前…"}, {"id": "6844903902186323976", "title": "Flutter基础（十二）路由（页面跳转）与数据传递", "desc": "在Android开发中我们使用Intent来进行页面跳转，也称之为原生路由，后来出现了一些路由框架，比如ARouter。 在Flutter中进行界面跳转的就是路由，路由用Route类来进行表示，Navigator是对Route进行管理的Widget。这一篇文章我们来学习路由和数…"}, {"id": "6844903943600865294", "title": "flutter Lottie 动画引导页的实现", "desc": "1. 在 pubspec.yaml 中添加依赖库 2. 在文件中添加引用库 3. 根据 API 调用 a. prepareAnimation 的固定参数是动画资源，不可缺少； b. repeatCount 可设置动画重复的频率；RepeatCount.nTimes(n) 重复 …"}, {"id": "6857762289362976776", "title": "Flutter&Flame——TankCombat游戏开发（三）", "desc": "为了避免子弹过多，导致的卡顿，这里加了个玩家子弹上限，下面就是往bullets(list)加了一颗子弹，同时传给了这颗子弹坦克的位置和game对象，另外两个参数先不用管。我们先看看bullet这个类 这样一些子弹的基础属性就声明完成了，接下来我们在render方法和update…"}, {"id": "6844903869705617421", "title": "Flutter ListView 源码分析", "desc": "不得不说，Flutter 绘制 UI 的速度和原生根本不是一个量级的，Flutter 要快的多了，比如常用的 ListView 控件，原生写的话，比如 Android，如果不封装的话，需要一个 Adapter、ViewHolder，再加个 xml 布局文件，而 Flutter …"}, {"id": "6844903985632002056", "title": "强大的Github Actions", "desc": "github有一个神器，叫做Github Actions，基于它提供的自动化构建服务，我们可以进行构建，测试，打包，部署我们的代码项目，相对于jenkins这类构建服务，它最大的优势是提供了整套服务器环境，包括Linux，Windows,macOS这些可选的服务器，这样一来，我…"}, {"id": "6844904198950092807", "title": "Flutter 新闻客户端 - 13 使用 supernova、imgcook 导入 sketch psd xd 自动生成代码", "desc": "B站视频https://www.bilibili.com/video/BV1t5411W7Tt本节目标了解supernova代码生成器作用导入xd设计稿如何高效使用生成代码正文代码生成器superno"}, {"id": "6889823642067140622", "title": "Flutter Hooks 使用及原理", "desc": "在Flutter项目的开发中，我们很容易发现业务逻辑和视图逻辑的高度耦合使我们非常难受，这个痛点也是前端开发经常遇到的。为了解决这个问题，在Flutter中其实也可以使用Mixin方式来解决，但是在实践中会遇到一些限制： Mixin之间可能会互相依赖。 Mixin之间可能存在冲…"}, {"id": "6914486206700978183", "title": "Flutter源码分析(二)进入StatefulWidget世界", "desc": "关于StatefulWidget的StatefulElement和StatelessWidget的StatelessElement都是继承ComponentElement这个类。在讲述StatefulWidget的源码的时候因为有很多方法在“Flutter源码分析(一)先从St…"}, {"id": "6844904180864253960", "title": "借Adobe XD之力，自动生成Flutter代码", "desc": "今天，我们来聊聊一个专门为“懒人程序员”准备的工具——Adobe XD。使用它可以快速将原型设计图转换为可执行的Flutter代码， 而由于Flutter自身跨平台的特性，因此这些自动生成的代码即可以用在Android、iOS这样的移动设备上，也可以用在Web页中。 简而言之，…"}, {"id": "6844903956603224078", "title": "flutter - listView 下拉刷新  上拉加载", "desc": "下拉刷新的组件RefreshIndicator。 具体要做的事情，就是请求第一页数据啦。 getInit里面就是请求，具体请求我在上个文章见过啦。 记得页码如果是0的时候，list要重新赋值，不是0的话，要addAll，这是我请求到数据后的操作，大家可以参考一下。 就是list…"}, {"id": "6939682750379065375", "title": "[Flutter翻译]Flutter 2来了：Flutter Engage之后你需要知道的一切。", "desc": "3月3日，Flutter Engage举行了一场活动，这是谷歌为了庆祝Flutter新版本的到来而举办的，Flutter是一个跨平台框架，负责超过15万个iOS和Android应用，其中一些应用的用户数超过150M+。 想知道Flutter 2.0是什么？也许你想回顾一下Flu…"}, {"id": "6844903843310878727", "title": "跟上时代潮流，一起学习Flutter", "desc": "近期在Google/IO大会上flutter1.5的发布引起了业内很大的讨论，是时候着手感受一下它的开发体验了，总体来说Flutter的安装体验非常棒，几乎没遇到什么困难。我的机器是MacOS 10.14.3 执行 flutter doctor 命令，会在命令行中列出你的环境问…"}, {"id": "6901177864243445767", "title": "Mac 系统 Flutter 环境配置", "desc": "如果提示 commond not found 证明你的路径是有问题，自己再次检查一下。 【1】、许可证问题：Android toolchain - develop for Android devices (Android SDK version 28.0.3)! Some An…"}, {"id": "6844903955193921549", "title": "原生转flutter快速入门", "desc": "本文是给第一次接触flutter的原生开发iOS/android同学快速入门的攻略，高手请绕路，轻拍哈。 对于原生开发的同学，对于flutter会比较感兴趣，也许会从网上零星获得一些学习资源，但是比较零散，不构成学习路径，可能也会踩一些坑，为了避免少走弯路，又能快速的入门flu…"}, {"id": "6935789380611096589", "title": "Flutter2重磅发布支持Web和桌面应用", "desc": "谷歌在今日召开的一场线上活动中正式宣布了Flutter 2的发布。作为一款用于构建跨平台APP的框架，Flutter今天正式迎来了它的的第二个大版本，增加了对桌面和Web 应用程序的支持。开发者可借助 Flutter2打造开箱即用的APP，并且能够为 iOS、Android、W…"}, {"id": "6844903801707593736", "title": "Flutter中的垃圾回收机制", "desc": "两种模式下都存在Dart RunTime，它包含了垃圾收集器，是实例化对象并变得无法访问时分配和释放内存的必要组件。 2.可达性算法：通过gc root对象开始搜索，不可达的对象会被回收，引用的类型主要有强引用、弱引用，当存在强引用时宁愿抛出oom也不回收、但是弱引用的话，有可…"}, {"id": "6844904071497793543", "title": "flutter中的路由过场动画 PageTransitionsTheme", "desc": "过场动画过场动画也就是切换路由时的动画这个东西有几种方案可以做继承PageRoute来做,复写5个抽象方法,并抽象buildTransitions继承已有的系统类,比如MaterialPageRout"}, {"id": "6865879479634526215", "title": "如何在flutter页面中应用模板方法设计模式？", "desc": "这里没用到 context 也没使用任何路由插件。 模板方法模式是一种只需使用继承就可以实现的非常简单的模式。 模板方法模式由两部分结构组成，第一部分是抽象父类，第二部分是具体的实现子类。通常在抽象父类中封装了子类的算法框架,包括实现一些公共方法以及封装子类中所有方法的执行顺序…"}, {"id": "6844903656941158414", "title": "Flutter之DataTable使用详解", "desc": "1. DataTable参数 2. DataColumn参数 3. DataRow参数 4. DataCell参数"}, {"id": "6912359203734552583", "title": "flutter 组件尺寸约束", "desc": "在书写 flutter 时是否偶尔发现自己写的宽高没有起作用？其中可能产生的原因就是与 flutter 的默认的约束规则产生了抵触。 会得到什么呢？我的第一反应就是会得到分别得到一个紫色大方块与蓝色小方块。但是实际上经过 devtool 查看，父子宽高均为100，最终只看到一个…"}, {"id": "6844903928396513288", "title": "Flutter 交互基础之 Draggable", "desc": "Draggable 是Flutter中的一个可以拖拽到DragTarget的Widget。并且，他可以把自己携带的数据传递给DragTarget。当Draggable被拖动到DragTarget的时候，DragTarget会判断是不是需要接收传递过来的数据，在接收后做相应的状态…"}, {"id": "6847902222894759950", "title": "[Flutter翻译]Canonical通过Flutter实现对Linux桌面应用的支持", "desc": "副标题：Ubuntu团队已经为所有Linux发行版上的Flutter应用程序制作了一个新的基于GTK+的主机。 Google对Flutter的目标一直是提供一个可移植的工具包，用于构建以原生速度运行的漂亮UI，无论你的目标是哪个平台。为了验证这一能力，我们首先关注移动平台And…"}, {"id": "6844903975439826952", "title": "即将开源|Flutter页面线上性能数据不再是谜", "desc": "移动端APM其实已经是一个很成熟的命题了，在Native世界这些年的发展中，曾经诞生过很多用于监控线上性能数据的SDK。但是由于Flutter相对于Native做了很多革命性的改变，导致Native的性能监控在Flutter页面上基本全部失效了。基于这个背景，我们在去年启动了名…"}, {"id": "6844903858628460558", "title": "Flutter AnimatedList 源码分析", "desc": "现在的UI页面已经离不开动画了，如果没有动画，页面看起来就会很突兀。 对于我们使用最多的Listview，Flutter 当然也给我们封装好了。 由于近期某些不可抗拒的原因，Flutter官网我们是打不开了。 可以看到和普通的没什么区别，那我们再来找一下怎么添加/删除item以…"}, {"id": "6844903956825505799", "title": "Flutter 布局控件篇-->Wrap、Flow", "desc": "很显然，Row组件的主轴是水平方向的，是让其内容水平排布的，Row默认只有一行，如果超出屏幕不会折行。这两个属性加上的话，是没有效果的 但是我们如果用上面两个属性来指定的话，这样也不好，因为你并不确定有多少内容，所以我们想让他如果超出屏幕显示范围的话，让他自动折行，这种布局称之…"}, {"id": "6844903863972003847", "title": "Flutter 波浪圆形进度条", "desc": "利用动画更改波浪的偏移值，并使动画不停的进行重复。两个波浪偏移的速度设置成不一致的，让波浪看起来更协调 完成波浪动起来的效果之后基本上就差不多了，但是会有一个很明显的问题，那就是在设置进度之后，进度条中的波浪是瞬间涨上去，看上去非常的不协调，所以我们还需要给进度条加上一个，进度…"}, {"id": "6844903829389967368", "title": "Flutter 基础Widgets Text()之TextStyle详解", "desc": "Text Widget就是显示单一样式的文本字符串。字符串可能会跨越多行，也可能全部显示在同一行上，具体取决于布局约束。 style参数可选。如果省略了，文本将使用最近的DefaultTextStyle的样式。如果给定样式的TextStyle.inherit属性为true（默认…"}, {"id": "6860224716708904968", "title": "[Flutter翻译]宣布Dart 2.6与dart2native：将Dart编译成自足的本地可执行文件", "desc": "Dart已经提供了一套广泛的编译器，用于为移动设备和网络构建生产优化的代码。这些灵活的编译器使我们的框架合作伙伴能够针对广泛的形式因素。Android和iOS上的Flutter应用，Web和桌面上的Flutter应用，Web上的AngularDart应用，以及嵌入式设备上的Go…"}, {"id": "6850418115864920071", "title": "[Flutter翻译]Flutter时代的多平台VS跨平台", "desc": "从移动应用开发的早期开始，就有一场激烈的争论，是使用原生平台技术还是跨平台技术来构建应用。Flutter为这场争论创造了一个新的维度，因为它同时具有多平台和跨平台的特点。 Flutter的承诺和开发社区的兴趣意味着值得在原生与Flutter的背景下再次列举这场辩论。 最好的原生…"}, {"id": "6844903974881984519", "title": "【译】写一款小众的 flutter 图标包", "desc": "和平常一样，凌晨 3 点。我在网上搜索高质量的黑色主题包，想分享给一部分人，让他们觉得“嗯，你真厉害”。鉴于 GitHub 是新的社交媒体，我偶然发现了一个 “CSS” 库，我们学校最棒的一个程序员都曾给它点过赞（starred）。心想 “不妨深入地研究一下，看看这些字体是如何…"}, {"id": "6844904071837532167", "title": "Flutter VIPER架构-解决复用和测试问题的利器", "desc": "MVC可以说是框架的经典了，但是在MVC框架的实践中，我们很难做到降低它的耦合度，我们在使用过程中，会有大量的接口都出现在controller中，导致controller中的代码非常的庞大，而在view中实现的时候，我们又习惯性的只实现页面布局相关的东西，而到了动画，页面布局逻…"}, {"id": "6844903731733987336", "title": "[译] Hummingbird: 构建Flutter Web应用", "desc": "在今天的Flutter Live上，我们宣布正尝试在Web上运行Flutter。在这篇文章中，描述了我们如何应对尝试过程中遇到的挑战以及当前该技术的状态。在本文的最后，您将找到有关互操作和嵌入的问题及答案； 让我们快速回顾一下Flutter的架构。 Flutter是一个多层系统…"}, {"id": "6844903987125157896", "title": "Flutter 原生插件开发流程", "desc": "使用Dart编写，按需使用Java（kotlin)或Objc（Swift），分别在Android 和 iOS平台实现的package。 默认情况下，iOS代码使用swift语言编写，Android代码使用Kotlin语言编写。但是你可以通过 -i 指定iOS的语言；-a指定An…"}, {"id": "6844903833890455560", "title": "详解 Json Web Token （如何为Flutter开发一个简单的JWT解析库）", "desc": "简单解释即：JWT是一个紧凑的、URL安全的、用于在双方之间传输claims的这样一个方法。而这个claims是用JSON格式编码的，并且进行了数字签名。 claim - 声明;宣称;断言;(尤指对财产、土地等要求拥有的)所有权;(尤指向公司、政府等)索款，索赔。让我们看一看具…"}, {"id": "6844903749291343886", "title": "如何在国内发布Flutter Plugin", "desc": "由于Flutter正式版的发布,Flutter在国内也变得火热起来。突然心血来潮的想写个Plugin，跟个风蹭一蹭Flutter的热度，但是奈何国内的一些环境，一直卡在发布这一步。几经周折，最后终于发布成功了！ 运行 flutter packages pub publish -…"}, {"id": "6844903906842017800", "title": "Flutter基础（十三）Flutter与Android的相互通信", "desc": "本来这篇文章应该讲一下Flutter的插件开发，但是在插件开发的基础是PlatformChannel，也就是Flutter与Android/iOS Native的通信，理解了这一个知识点，Flutter的插件开发也就不在话下。 Flutter不能完成所有Native的功能，因此…"}, {"id": "6854573215163875336", "title": "Flutter Dart语法学习", "desc": "开发FlutterApp之前我们肯定要先了解Dart这门语言及语言的特性、语法等。最近看了大量的 Dart语言相关内容，本章会来简述。 Google及全球的其他开发者，使用 Dart 开发了一系列高质量、 关键的 iOS、Android 和 web 应用。 Dart 非常适合移…"}, {"id": "6844904184085512199", "title": "Flutter 中 GestureDetector 的使用误区", "desc": "在实际开发中，我们通常需要实现某个组件的更多点击事件。比如：原生的RaisedButton组件是无法响应诸如拖拽或是按下、抬起等细化的动作，它只有一个onPressed()方法来表示。当我们想实现这些细化事件时，通常使用的组件是GestureDetector。 可以看到，单纯地…"}, {"id": "6844903958759079943", "title": "FLUTTER混合工程踩坑之旅", "desc": "Flutter 是 Google推出并开源的移动应用开发框架，主打跨平台、高保真、高性能。开发者可以通过 Dart语言开发 App，一套代码同时运行在 iOS 和 Android平台。 Flutter提供了丰富的组件、接口，开发者可以很快地为 Flutter添加 native扩…"}, {"id": "6844903826529468430", "title": "Flutter -- Element生命周期", "desc": "Widget其实是Element的配置项，Flutter中真正代表屏幕上显示元素的类是Element 。 Element一般并不是直接调用的，而是通过调用Widget.createElement方法来初始化元素，通过阅读Widget源码Element createElement…"}, {"id": "6844903956280246280", "title": "Flutter 容器控件篇-->Scaffold", "desc": "Flutter 中的Scaffold实现了基本的 Material 布局。 只要是在 Material 中定义了的单个界面显示的布局控件元素，都可以使用 Scaffold 来绘制。 可以简单的将Scaffold理解为一个布局的容器。可以在这个容器中绘制我们的用户界面。 二者的区…"}, {"id": "6973897612265013279", "title": "[Flutter翻译]Discreet日志#9：带有原生Go库的Flutter", "desc": "欢迎来到Discreet Log! 这是一个两周一次的技术开发博客，深入介绍我们在Open Privacy从事的研究、项目和工具。在我们的第九篇文章中，Dan Ballard谈到了在跨平台的移动和桌面"}, {"id": "6844903942795558919", "title": "Flutter(五)之彻底搞懂Dart异步", "desc": "一. Dart的异步模型 1.1. Dart是单线程的 1.1.1. 程序中的耗时操作 针对如何处理耗时的操作，不同的语言有不同的处理方式。 处理方式一： 多线程，比如Java、C++，我们普遍的做法是开启一个新的线程（Thread），在新的线程中完成这些异步的操作，再通过线程…"}, {"id": "6991630672766959624", "title": "让你看懂dart中静态成员和继承｜8月更文挑战", "desc": "静态属性和静态方法 访问静态属性和静态方法 级联操作符 .. 的使用 dart中的继承 继承时需要注意的点 子类调用父类的构造函数super 子类可以有自己的属性和方法 优先调用子类方法的如果子类没有"}, {"id": "7002489491361366023", "title": "Flutter深入浅出组件篇---ConstrainedBox、BoxConstraints、UnconstrainedBox", "desc": "ConstrainedBox ConstrainedBox介绍 主要目的是对其子组件添加额外的约束，有时候子组件需要自动调整宽度和高度，以达到最佳的适配设计，那么这时候使用ConstrainedBox"}, {"id": "6895614802585255944", "title": "把玩飞镖：Dart VM 集成入门", "desc": "飞镖（Dart）既是一种轻巧的武器，也是一门编程语言的名称。这门语言的 Dart VM 虚拟机内置在 Flutter 框架中，在移动端开发中有广泛的应用。那么，我们能否脱离 Flutter，单独为原生项目（如游戏引擎或高性能图形应用）嵌入 Dart VM 呢？这就是本文关注的场…"}, {"id": "6940054536115617829", "title": "从 QuickJS 到 Dart VM：稿定跨端渲染工程的运行时演化", "desc": "在稿定科技，我们使用 QuickJS 与 Skia 搭建并落地了自研的 App 端编辑器渲染能力。去年北京的 QCon+ 上，笔者为此做了「基于 QuickJS + Skia 的 GUI 框架」分享。下面是一些基于该能力渲染的实际应用截图： 但在短短几个月后，我们就再次升级了这…"}, {"id": "6996848801835778084", "title": "三段代码打造好看的流式布局，flutter之wrap【flutter20个实例之七】", "desc": "一、老套路，先看样式 图一是我业务中的样式，图二是下方源码展示样式（复制可直接运行，无额外组件引入） 二、讲解 1.结构拆分 首先，页面是个滚动列表，所以一定需要一个listview来容纳 然后每一个"}, {"id": "6999588546986131487", "title": "Flutter深入浅出组件篇---AppBar", "desc": "AppBar介绍 ​ AppBar是基于Material Design设计风格的应用栏，一般使用在Scaffold内部，作为顶部导航栏。 为什么需要AppBar ​ 1、因为导航栏里面一般由左侧功能键"}, {"id": "6997614147269574670", "title": "【自种树自乘凉】Flutter 搭建开发环境", "desc": "本文仅为 Windows 下搭建 Flutter 的 Android 开发环境教程。本文三个核心：代码编辑器 & Flutter SDK（内含 Dart SDK） & Android SDK"}, {"id": "6844903744639860743", "title": "Flutter基础视频免费教程 共25集完成", "desc": "Flutter基础视频的25集终于更新完了，也算给2018年画上了圆满的句号，2019年我们继续开始，每周3集免费视频等着你。 当然这套Flutter基础视频是面向前端小伙伴的，能让前端程序员快速上手Flutter。 其实你最好的方法是先看视频，然后看文字教程。所以这里把文字教…"}, {"id": "6844904199717650440", "title": "美团外卖Flutter动态化实践", "desc": "Flutter 跨端技术一经推出便在业内赢得了不错的口碑，它在“多端一致”和“渲染性能”上的优势让其他跨端方案很难比拟。虽然 Flutter 的成长曲线和未来前景看起来都很好，但不可否认的是，目前 Flutter 仍处在发展阶段，很多大型互联网企业都无法毫无顾虑地让全线 App…"}, {"id": "6971750152784576525", "title": "【Flutter 基础】脱离 AS Ide 使用命令行开发环境", "desc": "当所有 Android Studio Ide 的所需环境以及 SDK 安装完成后大概占用 6~8Gb 磁盘空间"}, {"id": "6992607728904437767", "title": "Flutter渲染之绘制上屏", "desc": "在开始探索绘制流程之前，我们先看看不使用`Flutter Framework`的`Widget`时，如何渲染出一个图形"}, {"id": "6897101906158714887", "title": "Flutter 的可视化界面、绘制性能调优 🔧 —— DevTools", "desc": "首先是DevTools本身是Flutter官方推荐的一个调试工具。 DevTools是用Flutter编写的，极具特色 🖼 。 拥有非常全面的调试功能，可以满足大小、方面不同的优化需求 ⚙️。 要使用DevTools首先，所有的一切的前提，肯定是，装上它，yes，这看似简单的…"}, {"id": "6844904153064407054", "title": "「 Dart Js Ts 」给前端工程师的一张Dart语言入场券", "desc": "啊～好久没写文章了,惭愧惭愧。🐶 You might already know Dart. - from 10 good reasons to learn Dart 是的,你还没开始学 Dart,可能就对它很熟悉了。 Dart 的「 前世今生 . 衰落与崛起 」 2013 年…"}, {"id": "6844904113105272846", "title": "阿里集团内如何进行Flutter体系化建设？", "desc": "2019 年无疑是 Flutter 技术如火如荼发展的一年。每一个移动开发者都在为 Flutter 带来的“快速开发、富有表现力和灵活的 UI、原生性能”的特色和理念而痴狂，从超级 App 到独立应用，从纯 Flutter 到混合栈，开发者们在不同的场景下乐此不疲的探索和应用着…"}, {"id": "6986420271720693774", "title": "在 Flutter 中实现文字动画", "desc": "动画期望在更新您的应用程序的整体客户机体验从视觉分析，运动，和自定义动画的巨大的一部分，你真的可以想象！.就像协调到应用程序中的一些不同的东西一样，动画应该是有帮助的，而不是基本上是一个正常的复杂格式"}, {"id": "6992513095956430862", "title": "Flutter listview下拉刷新 上拉加载更多", "desc": "这是我参与8月更文挑战的第4天，活动详情查看：8月更文挑战 下拉刷新 在Flutter中系统已经为我们提供了google material design的刷新功能 , 样式与原生Android一样. "}, {"id": "6971599302414041118", "title": "介绍 Flutter 桌面应用 NativeShell", "desc": "猫哥说 看到这张图片，我就感觉脖子酸。。。我这样摆过，虽然看起来很 cool，然后你的脖子要上下调整，这比左右调整费事。 今天推荐阅读的是关于 Flutter 桌面开发，下面有原文、代码 Git 链接"}, {"id": "6997370774466068517", "title": "Flutter深入浅出组件篇---继承关系图", "desc": "1、Flutter Object继承关系 该继承图为flutter2.2版本最新继承关系图。 视频讲解地址 视频讲解地址 2、Flutter Widget组件继承图 Flutter关系继承图.xmin"}, {"id": "7000744746901569549", "title": "Flutter积累一些常用基础知识", "desc": "**这是我参与8月更文挑战的第4天，活动详情查看：[8月更文挑战] 启动页的知识点 flutter读琴项目笔记 Size size = MediaQuery.of(context).size; Siz"}, {"id": "6844903763329679374", "title": "使用 redux 管理 flutter 应用数据", "desc": "redux 是什么？简单来说，就是为了解决 UI 层状态管理的方案，如果不熟悉，请先看文档学习一下，今天的重点不是学习 redux，而是直接用 redux 管理 flutter 的状态。"}, {"id": "6912731940688756750", "title": "00《Flutter核心技术与实战》学习笔记@开篇", "desc": "大前端，想要了解终端开发。 Dart语言和Flutter混合开发框架的框架原理和底层设计思想。 Flutter综合应用模块。 构建出一套符合企业级开发标准的Flutter混合开发框架。"}, {"id": "6844903826848219143", "title": "Flutter 初探(二)：基础类Widgets和布局类Widgets上手", "desc": "逐渐构建，思考，记录完善学习过程，希望后续能够将整个学习的过程整合为一个app，这样既能学习到知识，又能够记录下来。"}, {"id": "6936384114832441381", "title": "Flutter chart 各种用法教程", "desc": "我们定义dataBar数组并且在里面添加6条数据 。然后将数据的数据源赋值给我们的Series 构造方法里面data 属性里面 我们定义dataLine数组并且在里面添加6条数据 。然后将数据的数据源赋值给我们的Series 构造方法里面data 属性里面 flutter 里面…"}, {"id": "6944597868066013220", "title": "Flutter基础Widget使用----动画图解输入框", "desc": "输入框同样是UI组成的必要部分，比如常见的登陆场景，需要输入用户名和密码，多个输入框组成在一起就成了一个表单了。在 Flutter 中输入框是由 TextField Widget实现的，而表单是由 Form Widget实现的。TextField用于文本输入，它提供了很多属性，下..."}, {"id": "6844903654382632967", "title": "【译】使用 Flutter 实现跨平台移动端开发", "desc": "【译者注：链接序号对应下面索引列表，另外可以点击阅读原文查看详细的链接文章】 简介：Flutter 使得创建跨平台移动端应用变得轻而易举。本文将介绍 Flutter 并将其与其他移动端开发平台进行比较，还会阐述如何使用它来构建应用程序。 Flutter 是一款由 Google …"}, {"id": "6904571675128528910", "title": "【flutter环境】设置git忽略文件-实用技能", "desc": "可以见到.gradle文件夹已经变成灰色的了。说明它不会被git关注其变动了 这样项目就变动简洁了。能准确知道改动了哪些文件 这也是我喜欢用vscode的一个重要原因。git功能非常好用！！！ 每次修改完代码，在打包出apk前。我都会再检查一遍代码变动的地方，看看有没有问题。"}, {"id": "6844903917113835528", "title": "Flutter动画的简单使用", "desc": "Flutter动画的简单使用Flutter的动画我们要记住三个点，AnimationController、Thween、Forward()，一个简单的动画就是由这三个组成的AnimationContr"}, {"id": "6844903827435421703", "title": "Flutter 初探(三)：容器类Widgets", "desc": "容器类愈加抽象，但是给布局和各种酷炫实现打下了坚实的基础和广阔的想象力，是个诱惑而充满挑战的体验。"}, {"id": "6844903765028372494", "title": "[译] Flutter: 图解 Row 与 Column 部件", "desc": "图文并茂地介绍 Row / Column 部件的正确打开方式"}, {"id": "6844903763765886989", "title": "谈谈 Flutter 中的请求和异步", "desc": "这篇文章会用前端的视角来描述一下关于在 Flutter 中如何处理异步的问题；"}, {"id": "6844903780958355463", "title": "[译] Flutter: 图解 BoxDecoration", "desc": "Flutter 的盒子模型样式控制，带 demo 与 图解"}, {"id": "6907796204785303566", "title": "Flutter: 没有key的话会发生什么有趣的现象 ?", "desc": "emmmm... 总感觉哪里怪怪的, 为什么只有颜色互换了,数字没动, 不应该是整个盒子位置互换吗? emmmm... 理想状态下,应该是 绿色的数字为1的盒子__消失, 留下橙色的2和绿色的3 嗯! 没毛病! 现在好像明白了一些什么, 除去视图, 我们自己看那三个代码中的 B…"}, {"id": "6844903893512486920", "title": "融云微课堂第五讲", "desc": "基于原生代码开发 Flutter 插件"}, {"id": "6844903776810172423", "title": "Dart 简单入门", "desc": "HYPERS 前端工程师，黄术，在使用 Dart 过程中的一些学习记录。"}, {"id": "6844903741322166286", "title": "Flutter: My favourite keyboard shortcuts", "desc": "Life is short. Time is precious. Make the most of it. There’s a really good article on WaitBuyWhy about how the weeks in your life are like…"}, {"id": "6844904006326681613", "title": "前端的flutter之路（二）：项目前期准备", "desc": "1. 路由库：fluro 定义一个类，实现一个方法 对传入的 Router 实例进行扩展。代码在这里 确保执行代码的 一开始 进行调用上述的类方法进行路由的初始化，比如 runApp 方法运行之前或者在 根类 MyApp 的构造函数 中，我选择了后者。router 实例最好是全…"}, {"id": "6844904183204691982", "title": "Flutter - BLoC模式入门", "desc": "这里提一点关于IDE的问题，很多人是移动转过来的，所以用Android Studio的人很多。其实Flutter也可以用VS Code来开发。笔者，两个都用过，他们各有好处。Android Studio在项目初期，目录、文件处理多的时候方便。重构的时候关于文件的修改，都会在其他…"}, {"id": "6991665588514848799", "title": "谈谈flutter中Checkbox复选框的全选与删除【flutter20个实例之三】", "desc": "图1是我的实际开发中业务界面，用作展示而已，具体源码效果是图1下侧的三张图片。 源码可直接复制运行查看效果，不涉及组件引入和数据请求逻辑"}, {"id": "6844904135918092296", "title": "为精美，FButton&FSwitch", "desc": "为帮助开发者能够舒适的构建出拥有精美 GUI 的现代应用程序，【阿里巴巴-飞猪-FliggyMobile 技术团队】 推出了 FWidgets 系列组件。 就在前几天，我们开放了 FWidgets 的第一个组件 《FSuper》，获得了社区开发者们良好的反馈，目前该组件已经获得…"}, {"id": "6897164337144676359", "title": "Google 2020开发者大会Flutter专题", "desc": "由于疫情的原因，今年的Google 开发者大会 (Google Developer Summit) 在线上举行，本次大会以“代码不止”为主题，全面介绍了产品更新以及一系列面向本地开发者的技术支持内容。我比较关注的是移动开发，在本次大会上，关于Flutter 主题的演讲主要从 F…"}, {"id": "6915218831459745800", "title": "Flutter | 路由管理", "desc": "将给定的路由入栈（打开页面），返回 future 对象，用于接收该路由出栈是返回的数据。 路由表就是一个 map，key 为路由名字，value 是一个 builder 的回调函数，用于生成相应的路由 widget。如下： MaterialApp 有一个 onGenerateR…"}, {"id": "6844904186925023246", "title": "【r_upgrade】快来升级你的Flutter应用", "desc": "劣势：暂无发现，如果发现bug欢迎提issue. 3. 取消下载 4. 安装应用 5. 暂停下载 6. 继续下载 7. 获取最后一次下载的ID 8. 获取ID对应的下载状态 9. 增量升级 10. 热更新 然后.当你使用upgrade方法时,你应该设置参数notificatio…"}, {"id": "6844903941503713294", "title": "对Flutter路由管理库Fluro的封装", "desc": "在公司使用flutter开发过一个app后，我也算一个老用户了，练习时长半年，最近公司的搞重构，要用到fluro来对路由进行管理，我们一起来简单体验下。 在setupRoutes里面我们遍历那个map,里面调用router.define()来把路由注册到Fluro Router…"}, {"id": "6844904063746703374", "title": "基于Flutter的仿微信聊天应用", "desc": "作为当下风头正劲的跨端框架，flutter成为原生开发者和前端开发者争相试水的领域，笔者将通过一个仿微信聊天的应用，展现flutter的开发流程和相关工具链，旨在熟悉flutter的开发生态，同时也对自己的学习过程进行一个总结。笔者是web前端开发，相关涉及原生的地方难免有错漏…"}, {"id": "6936391941806358535", "title": "当我们在聊 RN 时，我们在聊什么 | 技术点评", "desc": "那是 18 年的夏天，公司 6 月底去成都团建回郑州后，小弟、肖老师和当时绰号小萌的我（以下简称三剑客）开始了使用 React Native 开发 App 的工作。当时经验尚浅的我也只是有小程序和公众号的开发经验，唯一的亮点就是封装了 wx-promise-pro 并独立完成了…"}, {"id": "6956543918934605832", "title": "Flutter 渲染浅析", "desc": "Flutter 框架为什么需要 widget、element和renderObject三棵树呢？Flutter 渲染又是怎么一层层抽象的呢？"}, {"id": "6916718068605386766", "title": "带你重新“玩转”Flutter", "desc": "Flutter也许不再是非常热门时髦的话题了，但作为一项已经逐渐进入规模化实践的技术，它的价值已经初步获得认可，后续应该有不错的生命力。作为较早期的Flutter实践者，我一直在思考Flutter的技术价值以及如何释放这些价值，本篇尝试从一个新的视角去结构化的梳理Flutter…"}, {"id": "6963438699933597710", "title": "Flutter ModalBottomSheet 指导", "desc": "好的，第一个问题，有两种底层表: 模态的和持久的。当用户与屏幕交互时，持久化保持可见。谷歌地图应用就是一个例子。"}, {"id": "6973805113521471525", "title": "Dart 的编程语言之美 4 个超级特性", "desc": "在阅读 Flutter 时，我读到最多的缺点之一就是使用 Dart 编程语言。它还没有 Kotlin 那么成熟，这是我读到的最常被提及的论点之一。在我看来(我承认这可能会引起争议) ，Dart 是一种"}, {"id": "6844904131287580685", "title": "在 Flutter 里使用 Stream", "desc": "在 Flutter 中有两种处理异步操作的方式 Future 和 Stream，Future 用于处理单个异步操作，Stream 用来处理连续的异步操作。比如往水杯倒水，将一个水杯倒满为一个 Future，连续的将多个水杯倒满就是 Stream。 Stream 是一个抽象类，用…"}, {"id": "6968768917607022606", "title": "Flutter学习：什么是Container以及布局约束的实现", "desc": "前言 在Flutter开发中，Container作为一个容器类的Widget，有点类似HTML的div，在项目中也是高频使用；那在使用过程中，你是否有过下面的这些疑问： Container是什么?"}, {"id": "6925774895557115917", "title": "Flutter 安卓实现无线调试", "desc": "配置系统环境变量。。"}, {"id": "6995834660227907615", "title": "8月更文挑战｜Flutter之Dart基础：进制转换、与字符串互转", "desc": "这是我参与8月更文挑战的第1天 今天要介绍的是在Dart中二进制、八进制、十进制、十六进制之间的转换，String和int之间的转换。 进制转换 返回值是一个代表当前进制的字符串。 radix 代表要"}, {"id": "6844904185679331342", "title": "Flutter - 将 Flutter 集成到现有项目（iOS - Framework篇）", "desc": "用 Flutter 来开发，从来都不可能是新开的一个纯 Flutter 项目，很大一部分都是 老项目接入 Flutter 来混编。 在 Flutter 官网 - Adding to an iOS app 这里，官方也给出了一些将 Flutter 集成进入现有 iOS 项目的方法…"}, {"id": "6976422861816741896", "title": "Flutter开发：关于Gridview的使用", "desc": "这是我参与更文挑战的第22天，活动详情查看：更文挑战   Gridview常用的几种方式 1、GridView.count(@required int crossAxisCount) GridView"}, {"id": "6844904179274612749", "title": "flutter前端入门踩坑记录", "desc": "flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 flutter可以与现有的代码一起工作。在全世界，flutter正在被越来越多的开发者和组织使用，并且flutter是完全免费、开源的。flutter使构建精美的移动应用程序变得轻…"}, {"id": "6974330575016427551", "title": "flutter 增大GestureDetector点击范围", "desc": "GestureDetector的ontap点击事件，一般是以child的大小作为点击区域，有时候为了增大点击区域会给child设置padding，但是设置完点击padding部分仍然不会有点击效果，这"}, {"id": "6956362423561846815", "title": "Flutter 移动安全 ー Ep.1 SSL Pinning", "desc": "原文 前言 这篇文章还是很好的，作者是一个银行从业者，简单说就是在你的程序里指定 ssl 通讯证书，提供安全性。 为啥这样做呢，比如你用公共 wifi ，这时候打开 www.taobaomy.com "}, {"id": "6959185012688158756", "title": "Flutter 从一个版本到另一个版本迁移【转译】", "desc": "原文 每次当技术改变为一个新的主版本时，将一个项目从较低的版本迁移到较高的版本是痛苦的。幸运的是，Dart 有一个迁移工具，可以帮助您将项目中的定义迁移到新的语法中。 但是即使你已经准备好切换到一个更"}, {"id": "6844903743104745486", "title": "Flutter之使用Overlay创建全局Toast并静态调用", "desc": "Toast在Android上是最常用的提示组件了，它的优势在于静态调用、全局显示，可以在任意你想要的地方调用他而丝毫不影响界面的布局，调用简单程度与Logger的调用不相上下。 然而在Flutter中并没有给我们提供Toast的接口，想要实现Toast的效果有两种途径，一种是接…"}, {"id": "6844904003252420615", "title": "Flutter自制插件之r_scan二维码&条形码扫描（支持文件、url、内存、相机）", "desc": "6. 打开闪光灯/获取闪光灯状态 还有更多..."}, {"id": "6844903938945187854", "title": "FlutterGo 后端知识点提炼:midway+Typescript+mysql(sequelize)", "desc": "关于 FlutterGo 或许不用太多介绍了。 如果有第一次听说的小伙伴，可以移步FlutterGo官网查看下简单介绍. FlutterGo 在这次迭代中有了不少的更新，笔者在此次的更新中，负责开发后端以及对应的客户端部分。这里简单介绍下关于 FlutterGo 后端代码中几个…"}, {"id": "6855430227972554759", "title": "[Flutter翻译]深入Flutter Web", "desc": "副标题：充分利用网络平台的力量，实现以应用为中心的体验。 今天我们想给大家介绍一下我们将Flutter带到网络上的最新进展，特别是我们正在做的与网络平台深度和原生集成的工作。 我们对Flutter的愿景是提供一个可移植的工具包，以便在任何你可能想在屏幕上画像素的地方构建美丽的体…"}, {"id": "6844903906938634248", "title": "Flutter | 超实用简单菜单弹出框 PopupMenuButton", "desc": "点击 AppBar 右上角的按钮，弹出一个菜单供用户选择。 幸运的是，Flutter 提供给我们了一个 Widget，直接就能实现如上的效果。 assert(!(child != null && icon != null)) 判断了 child 、icon 是否同时不为空，如果…"}, {"id": "6844904152049385480", "title": "妙趣横生，FRadio", "desc": "现在，快扔掉你手中还没蘸蕃茄酱的薯条 🍟。 把目光聚焦到这 👀。 FRadio 十分擅长于处理单选任务场景，这点你可以从它被赋予的名称可以看出。 那么请调整好坐姿，妙趣横生的 FRadio 将给你带来精美创造力的解放，这也许会让你受到些许的惊艳。但请尽快适应它。我们还有很多…"}, {"id": "6844903762956386312", "title": "Flutter仿写单读App介绍与总结", "desc": "这次选择仿写一个很轻量的项目单读App，主要通过项目来练习一下常用的组件、布局、网络请求、json解析等。 项目主页采用的是PageView,当前屏幕所能看到的即时PageView的单一页面,该页面的布局主要是使用Column里面children: <Widget>[]包裹各种…"}, {"id": "6898559754877009928", "title": "书后拓展：Flutter 中一行文字到屏幕上，渲染全过程！", "desc": "我要写的这一系列文章旨在分享一些我想要继续分享，但碍于《Flutter 开发之旅从南到北》中篇幅和话题的限制，没有深入分析的部分，读者们可以在学有余力的情况下在这里继续拓展下去。 本文要讨论的话题是 Flutter 中的文本渲染，也假定你已经大致清楚了 Flutter 中 Wi…"}, {"id": "6844903750105055246", "title": "Flutter上你需要一个简单实用的验证码输入Widget", "desc": "现在很多app都有填写验证码的需求，而这个验证码的UI流行非普通的输入框(毕竟移动开发主要矛盾是设计师日益增长的天马行空同落后的开发之间的矛盾)，作为跨平台方案的Flutter自然也会用到这种控件。本着少造轮子，多copy的原则，想去找个验证码的控件直接用，但是搜罗了一遍Git…"}, {"id": "6974949842950979620", "title": "Flutter 创建多图像的 PDF 文件", "desc": "保持热情去改变! 今天这篇文章是让你在客户端完成 PDF 的创建，这样能减轻服务器的压力。 这是很有必要的，服务器的 CPU 资源很宝贵。 Flutter 插件 https://pub.dev"}, {"id": "6857138535494287373", "title": "Flutter架构组件（FAC）——Flutter解耦架构模型和跨组件状态管理", "desc": "1. LiveState组件 2. ViewModel组件 ViewModel 可以用来管理UI所需的相关数据，承担UI和Model之间的交互和处理业务逻辑。 比如一个 AppBar需要提供title改变的接口，或 AppBar 的右侧Action中提供一个购物车数量指示。典型…"}, {"id": "6844903834125352968", "title": "如何在Windows、MacOS上搭建Flutter开发环境（详细篇）", "desc": "特别说明：如果读者还不会科学上网！请先停止学习，因为读者不可能将Flutter开发环境搭建成功，所以先去学学科学上网，而且能打开谷歌了，再返回来学习效率会更高。 Java开发工具包下载地址，这个地址会随着Java升级而有所变化，如果已经改变了，请百度一下搜索java下载或者直接…"}, {"id": "6864367531055857678", "title": "FlutterDojo设计之道——状态管理之路（一）", "desc": "Flutter万物皆Widget的理念很容易搭建出这样一个WidgetTree。 在这个Widget Tree中，通常会存在很多组件之间的相互依赖，时间一长，就很容易变成下面这样。 这是申明式编程的通病，因为Widget用于展示数据，而数据可能来源于很多其它的Widget，这时…"}, {"id": "6979130674557468702", "title": "flutter的项目结构认识", "desc": "好不容易把环境配置完成，建起了一个flutter的项目，下面来认识下flutter的项目结构。 上图中标红的为比较重要的三个文件，分别是： 1、lib 2、iOS 3、android 4、文件汇总： "}, {"id": "6932020573870489608", "title": "自定义Flutter Lint插件实现自己的Dart语法规则", "desc": "在网上搜索自定义Dart语法检查或自定义Dart lint最终都会导向 Customizing static analysis 这篇文档。文档中介绍了Dart Static analysis的功能和使用方式。 如在if语句使用了错误的变量名称，提示如下错误。 但是文章标题中所谓…"}, {"id": "6844903887468494855", "title": "Flutter滚动动画", "desc": "本篇文章我们一起开发一个炫炫的列表展示，伴随着滚动，背景做一些相应的动画效果。先看下效果图: 我们在main.dart里这么生成列表的children：items.map((Item _item) => DemoCard(_item)).toList();对DemoCard传入…"}, {"id": "6911222947222913038", "title": "【Flutter 2-3】Flutter手把手教程UI布局和Widget——容器控件Container", "desc": "Container 的color属性与属性 decoration的color存在冲突，如果两个color都做了设置，默认会以decoration的color为准。 如果我们没有给Container设置width和height，Container会跟child的大小一样；假如我们…"}, {"id": "6854573215147098119", "title": "[Flutter翻译]探索Dart的新构建系统", "desc": "如果你曾经做过一个web应用程序，你可能使用过一个构建系统。Webpack、Gulp或Grunt都是构建系统。 Dart 1使用了一个叫Barback的系统，但是Dart 2使用了一个新的系统，叫pack:build。那么有什么变化，为什么？ 构建系统的一个快速定义是一个程序，…"}, {"id": "6844903769126207495", "title": "一个设置 flutter 应用沉浸模式的 package（iOS & Android 通用）", "desc": "flutter 作为乐高积木，即便设置沉浸模式这样简单的工作也有专门的包来实现，给搭建业务的同学提供跨平台的便利性，和功能的确定性。相对 RN 而言，flutter 和 native 之间的通讯也算比较健壮。总之，如果不考虑热更新，flutter 是非常值得推荐的 APP 框架。"}, {"id": "6897473396424310792", "title": "【Flutter 1-9】Flutter教程Dart语言——函数和匿名函数", "desc": "=> 表达的 是 { return 表达式; } 的简写，有时=>也称之为胖箭头语法。 函数可以有两种形式的参数：必选参数 和 可选参数。必选参数定义在参数列表前面，可选参数一定是定义在必要参数后面。 当你调用函数时，可以使用 参数名: 参数值 的形式来指定命名参数。例如： 已…"}, {"id": "6844903940396417031", "title": "初略讲解Flutter的Align（对齐与相对定位）", "desc": "在上一节我们讲过，通过Stack和Positioned来指定一个或多个子元素相对于父元素各个边的精确偏移，并且可以重叠。但如果我们只想简单的调整一个子元素在父元素中的位置的话，使用Align组件会更简单一些。 alignment：需要一个AlignmentGeometry类型的…"}, {"id": "6844904039394574344", "title": "Dart 语言基础入门篇", "desc": "本文是【从零开始学习,开发个Flutter App】路上的第 1 篇文章。 这篇文章介绍了 Dart 的基础特性，目的在于让大家建立对 Dart 语言的总体认知，初步掌握 Dart 的语法。 我们假定读者已经有一定的编程基础，如果你了解 JavaScript 或者 Java 等…"}, {"id": "6973897323390697485", "title": "[Flutter翻译]Discreet日志#5：用Cwtch UI测试提高安全性", "desc": "欢迎来到Discreet Log! 这是一个两周一次的技术开发博客，深入介绍我们在Open Privacy从事的研究、项目和工具。在我们的第五篇文章中，Erin Atwater谈到了我们为Cwtch测"}, {"id": "6844903902685446158", "title": "初略讲解Flutter的文本及样式（基础组件）", "desc": "textAlign：文本的对齐方式；可以选择左对齐、右对齐还是居中对齐。注意，对齐的参考系是Text Widget本身。本例中第一个Text虽然指定了居中对齐，但因为Text文本内容宽度不足一行，Text的宽度和文本内容长度相等，那么这时指定对齐方式是没有意义的，只有Text宽…"}, {"id": "6844903768039882766", "title": "Flutter  Widget 静态布局实战", "desc": "1. ListView 能实现什么效果？ 2. widget 如何添加到 ListView 中？ 3. ListView 点击事件，单个 widget 点击事件 4. ( 重点 ) widget 如何垂直、水平摆放？ 5. 图片、Icon、Text widget 的简单使用 在…"}, {"id": "6844904190154637320", "title": "Flutter 中由 BuildContext 引发的血案", "desc": "今天和各位分享一个博主在实际开发中遇到的问题，以及解决方法。废话不多说，我们先来看需求： 相信这个弹出菜单视图都有见过吧？下面重点来了：在本次的项目需求中，该视图的选项文字是由Server端返回的。也就是说，这些选项的内容和个数都不固定，因此不能将其在代码中写固定值。 如上述代…"}, {"id": "6914101521995661319", "title": "Flutter pub上传失败问题 记录", "desc": "官方描述: Pub is the package manager for Dart. / dart 语言的包管理器 这个域名有多个小伙伴同时 ping 过, 对应 ip 不相同,所以可知这个网站是有负载均衡的, 但是坑的地方来了, 部分在墙外,所以这就是这个网站偶尔国内访问不通…"}, {"id": "6844904096181420039", "title": "Flutter星级评选", "desc": "确定使用Stack叠加效果主件,下面采用空(☆),上面叠加实心的(★)."}, {"id": "6844903945777889288", "title": "2、深入研究flutter组件之（Accumulator）", "desc": "还记得创建新项目的时候flutter默认给我们一个什么实例吗？一个点击累增的例子，今天，我们用Accumulator来一个不一样的实现方法。由于其很简单，作为前端我暂且把它看成一个对象类型。就比如Array等等。 然后就可以拿着_accumulator为所欲为了。具体使用请参照…"}, {"id": "6844903917029949448", "title": "初略讲解Flutter的Row和Column（线性布局）", "desc": "所谓线性布局，即指沿水平或垂直方向排列其子组件。Flutter中通过Row和Column来实现线性布局，类似于Android中的LinearLayout控件。Row和Column都继承自Flex（弹性布局），我们将在后续详细讲解Flex。 对于线性布局，有主轴和纵轴之分，如果布…"}, {"id": "6844903654571393031", "title": "移动跨平台开发深度解析", "desc": "移动跨平台开发一直是移动开发者和前端开发者追求的的话题，从早期的cordova、ionic，到如今的react native、weex、kotlin native和flutter等，可以说如今的跨平台框架可谓百花齐放，颇有一股推倒原生开发者的势头。 JavaScript流派：这…"}, {"id": "6844903967290310670", "title": "Web 开发者如何理解 Flutter 布局之 —— 3. Image", "desc": "图像组件。 有关于 \"pubspec.yaml\" 文件修改的详细信息,请参照 flutter 中文网中相关章节的描述。 [BECARE!] 本示例[2]代码以安卓平台为运行环境,不能确保其他平台的稳健及可执行性。 因此,需要在 \"pubspec.yaml\" 中添加并安装此依赖。…"}, {"id": "6916391210877878286", "title": "【Flutter 2-6】Flutter手把手教程UI布局和Widget——Image控件、NetworkImage、AssetImage|七日打卡", "desc": "Image是一个常用的控件，它可以帮助我们显示图片，图片的资源可以是来自网络、本地或者是内存。在移动端的开发中会大量使用Image来展示一些图文，了解和掌握Image控件是非常有必要的。 AssetImage是Flutter提供的一个可以从本地读取图片资源的类，我们可以使用它来…"}, {"id": "6902753099060887566", "title": "【Flutter 1-13】Flutter手把手教程Dart语言——异步、Future、Stream、async、await详解", "desc": "Dart代码库中有大量返回Future或Stream对象的函数，这些函数都是异步的，它们会在耗时操作（比如I/O）执行完毕前直接返回而不会等待耗时操作执行完毕。 Dart 代码库中有大量返回Future或Stream对象的函数，这些函数都是异步的，它们会在耗时操作执行完毕前直接…"}, {"id": "6882610904949587975", "title": "Flutter基础widgets教程Align篇", "desc": "1Align2构造函数3常用属性3.1alignment：对齐方式3.1.1顶部左边3.1.2顶部中间3.1.3顶部右边3.1.4中部左边3.1.5中部中间3.1.6中部右边3.1.7底部左边3.1."}, {"id": "6945455000109711390", "title": "【Flutter】实战问题集锦（四）", "desc": "在业务开发中ListView每个Cell有一个点赞功能。点赞动画由AnimationController控制，通过didUpdateWidget判断点赞值执行动画。问题在当删除未点赞状态Cell，被删除的未点赞Cell下面是点赞Cell上移，而上移点赞Cell会再执行一次动画。…"}, {"id": "6947854487495114760", "title": "Flutter基础组件Row&Column", "desc": "简介Row和Column为常用的多子控件容器组件，Row水平布局、Column垂直布局重要概念：mainAxisAlignment 主轴对齐方式： 与布局相同方向的对齐方式，Row为水平方向，Colu"}, {"id": "6844903967294488583", "title": "Web 开发者如何理解 Flutter 布局之 —— 5. SingleChildScrollView / ListView + ScrollBar", "desc": "列表视图及滚动条。 在 web 应用中, 当 body 中内容的宽高大于屏幕本身宽高时,页面会被撑开并附加滚动条。 而在原生 app 中并不具备这个效果,即使页面中本身的内容超出了屏幕, 应用容器也不会为你添加滚动容器及滚动条。 因此, 我们需要使用 Widget 来构造他们。…"}, {"id": "6903079889012785159", "title": "【Flutter 1-15】Flutter手把手教程Dart语言——包管理工具Pub详解、pub get,pub cache使用", "desc": "Dart 生态系统使用包来管理共享软件，比如：库和工具。我们使用Pub包管理工具 来获取Dart包。在Pub上，可以找到公开可用的包。或者从本地文件系统或其他的位置，比如Git仓库，加载可用的包。无论包是从什么途径加载的， Pub 都会进行版本依赖管理，从而帮助我们获得版本兼容…"}, {"id": "6844903664813867016", "title": "Flutter实例：开发一个搜索Npm的应用", "desc": "一个Flutter开发的案例"}, {"id": "6917176624341319688", "title": "【Flutter 2-8】Flutter手把手教程UI布局和Widget——水平布局控件Row|七日打卡", "desc": "Row是在Flutter中常见的布局控件，它负责水平方向布局。Column负责垂直方向布局，二者都是继承于Flex，类似于iOS里面的UIScrollView，但是又有很多不同。 把剩余的空间拆分成n-1份(n是子控件的个数)，这里也就是3分，每一份都插入到子控件之间。看绿色数…"}, {"id": "6844903586707537933", "title": "Flutter-Cookbook 非官方翻译", "desc": "这本书包含了一些技巧，演示了如何在编写flutter应用程序的同时，解决一些常见的问题。每一篇都是独立的，可以用作参考，帮助你您构建应用程序。"}, {"id": "6844903889830051847", "title": "Flutter测试（二）：在项目中进行 Widget 测试", "desc": "上回书对 Flutter 中 Widget 测试的官方 Demo 进行了简单的讲解，这篇文章我们对自己的项目进行 Widget 测试。 就拿 「想吃啥」APP 来进行测试吧。 因为平时我们写APP的时候，肯定会封装一些 Widget 来进行复用，所以首页中 选个菜吧 & But…"}, {"id": "6844903939637248013", "title": "flutter ScopedModel深入浅出", "desc": "ScopedModel是从Google正在开发的新系统Fuchsia库中分离出来，为了使用flutter时能够更好得管理flutter中的状态。ScopedModel是flutter最早开始使用的状态管理库。虽然目前它已经停止维护了，但还是有很多人使用，并且，学习ScopedM…"}, {"id": "6844903853993771022", "title": "初略讲解Flutter应用模板源码：计数器示例", "desc": "用Android Studio和VS Code创建的Flutter应用，源码模板是一个计数器示例，通过讲解分析计数器示例的源码，可以让读者对Flutter应用程序结构有个最基本的了解，在后续的文章中，笔者将会基于此示例，一步一步添加新的功能来介绍Flutter应用的其他概念与技…"}, {"id": "6844903923937968135", "title": "Flutter系列之Dart语言概述", "desc": "Dart可以在编译器（Android Studio）、命令行（前提是安装了Dart SDK）及网页repl.it中调试编译，由于本次内容比较简单，我们直接在网页中调试编译即可。 在Dart中，所有的变量都可以用var来申明，当然，也可以指定具体的类型来申明一个变量。当使用var…"}, {"id": "6844903876131291143", "title": "踩一个Flutter Hot Reload的新坑", "desc": "遇到问题：iOS连接实体手机开发时候启动xcode flutter的debugger后，会遇到连接在5秒之后自动断开的情况, 稳定复现... 也就是直接拉人家libusbmuxd这个库的master代码了... 可以说很大胆了 没想到libusbmuxd更新了... 然后最新的…"}, {"id": "6938693559004430350", "title": "flutter 渲染三棵树(Widget、Element、RenderObject)", "desc": "Flutter的渲染流程如果想了解flutter的渲染原理，那么flutter的三棵树是无论如何也绕不过去的。创建树创建widget树调用runApp(rootWidget)，将rootWidget传"}, {"id": "6844904045333741582", "title": "flutter边缘实践——实现异步依赖并控制反转IoC（附JS粗制版解决方案）", "desc": "这几天写 flutter 产品给了我一个新需求——在 app 打开时检查当前版本是否为最新版本，如果不是则弹窗提示更新。 一开始想，这需求简单啊，直接在 main.dart 的 _MyAppState initState 中写下 showDialogUpdate() 就完事了。…"}, {"id": "6844903862877306894", "title": "Flutter Scoped_Model 浅析", "desc": "在前端开发中，我们经常能听到 redux 等状态管理的词汇。 但是对于我这种搞移动端出身的人，对这些词汇就不是很熟悉。 Flutter 作为借鉴了很多 React 思想的语言，自然也会有相对应的状态管理。 比如我多个页面同时使用了 User 对象，当我其中一个地方改了以后，想要…"}, {"id": "6844904001461288967", "title": "Flutter-AnimatedList源码分析", "desc": "细心的观察会发现，第一步里只对_outgoingItems集合进行了修正，没有对 _incomingItem进行处理，这是因为新增的时候 _itemsCount += 1是在动画开始前就设置了，而remove是在动画结束后才会去减1的，之所以动画结束后才减 _itemCount…"}, {"id": "6903025586843860999", "title": "【Flutter 1-14】Flutter手把手教程Dart语言——Dart语言引用、import、package使用", "desc": "import 关键字可以帮助你创建一个模块化和可共享的代码库，代码库不仅只是提供 API 而且还起到了封装的作用：以下划线（_）开头的成员仅在代码库中可见。 使用import来指定命名空间以便其它库可以访问。比如你可以导入代码库 dart:html来使用Dart Web中相关 …"}, {"id": "6844903832594415624", "title": "Flutter 基础布局Widgets之Row详解", "desc": "Row即创建一个水平的组件列表，是非常常用的组件，而Column即创建一个垂直的组件列表，用法和Row一模一样，因为Row以及Column都是Flex的子类，它们的具体实现也都是由Flex完成，只是参数不同。"}, {"id": "6844903734271541261", "title": "Flutter免费视频第三季-布局组件讲解", "desc": "Flutter第二季学完，你已经可以作一些效果出来了。但是你想随心所欲的进行布局页面效果，还是感觉有些吃力，这个你不要担忧，这季教程学完你就可以精通Flutter的布局了，并且在对Flutter的了解上有更深层次的了解。 这季里我我会讲解水平布局、垂直布局、GridView布局…"}, {"id": "6844903593074491405", "title": "轻松使用flutter撸app", "desc": "这不是flutter已经是bate2了，马上就release了，所以我就开始搞了 For help getting started with Flutter, view our online documentation. 怎么样使用列表控件，Row控件，Column控件 怎么使…"}, {"id": "6918257875479592968", "title": "Flutter 2-11】Flutter手把手教程UI布局和Widget——列表ListView | 七日打卡", "desc": "ListView是在移动端非常常见的控件，在大多数的展示场景中都离不开ListView。在Flutter中对ListView的封装也非常好，简单几行代码就可以满足我们布局一个滚动列表的需求。 ListView()是初始化的时候需要确定数据源的大小，一旦初始化成功后不能再次动态的…"}, {"id": "6844903801028083719", "title": "跟我一步一步实现 Flutter 视频播放插件 (一)", "desc": "当团队准备着手做 APP 时，我们把目标对准了 Flutter，尤其近期 Flutter 的使用热度一直不断攀升。由于第一次使用 Flutter，就想通过自己的实践去提升自己的能力。 在做 APP 时，我们用到了视频播放器，当前使用官方提供的插件「video_player」ht…"}, {"id": "6874737011325059086", "title": "来来来，Flutter Widget 体系架构与 UI 渲染流程", "desc": "Widget 的分类。 State 生命周期。 Widget、Element、RenderObject 三棵树 + LayerTree。 UI 更新与渲染流程。 InheritedWidget 数据共享原理。 首先，我们要明确 Widget 的概念，它仅仅就是一份视图的配置文件…"}, {"id": "6988044544864419871", "title": "flutter: CSS规则映射flutter控件-position", "desc": "css庞大而复杂,灵活且繁难, 如何把css的规则映射成flutter的控件确实是个不小的挑战. css有如此多的规则和属性, 而且还有各种简写形式, 无论如何肯定无法实现css的全部效果"}, {"id": "6844904094725849095", "title": "关于在Flutter Web中加载html", "desc": "最近碰到一个需求，需要在Flutter Web项目中加载html。在手机端我们可以使用webview_plugin插件加载，但是这个插件在web上面是无效的。那么，在Flutter Web中，该如何加载html呢？Flutter为我们提供了一个专门用于web的控件：HtmlEl…"}, {"id": "6844903774973067278", "title": "Flutter项目之app升级方案", "desc": "在我接触Flutter之前，做过一个比较失败的基于DCloud的HTML5+技术的app，做过几个RN项目。在这两种不同机制的app升级方案中，RN采用的是微软的CodePush技术。而那个比较失败的项目采用的是检查版本号，下载安装包的方法。而在这个Flutter项目中，我在写…"}, {"id": "6987364639025823751", "title": "Flutter 基础学习中(记录二)", "desc": "整体的项目搭建 上传项目到gitee以及github 学习基础 基于Flutter的超完整仿腾讯动漫，小说阅读，抖音视频项目，功能丰富，适合学习和日常使用，拥有较好的项目结构&比较规范的代码 Flut"}, {"id": "6864487800969003016", "title": "修复flutter_webview_plugin在页面滑出时web图层残留的问题", "desc": "webview_flutter 的性能要明显弱于 flutter_webview_plugin，其所造成的卡顿是肉眼可见，不需要看什么fps、dumpsy啥的...尤其是稍微复杂一些的页面。 基于此我选择了flutter_webview_plugin，当然它也有不足。 由于其本…"}, {"id": "6844903859144359944", "title": "Flutter 自定义功能强大的下拉筛选菜单 package", "desc": "A custom is strong dropdown menu for Flutter. Easy to use and powerful for customization, it's up to you what you want to display in the dr…"}, {"id": "6844904115244367886", "title": "Flutter 实际项目填坑记录", "desc": "Flutter是一个全新的跨平台开发的语言，我在实际项目开发中也有幸使用到 Flutter 进行完整开发，在这个开发过程中也是一步步的实验，在这其中也遇到了各种各样的坑， 网上通过各种谷歌，stackoverflow，Flutter官网等查资料，有些问题是解决，但还是有些问题不…"}, {"id": "6946023189000486943", "title": "Flutter | 事件处理", "desc": "当指针按下时，Flutter 会对应用程序执行命中测试(Hit Test) ，以确定指针与屏幕接触的位置存在哪些 Widget，指针按下事件(以及该指针的后续事件)会被分发到由命中测试发现的最内部的组件，然后从哪里开始，事件会在组件树中向上冒泡，这些事件会从最内部的组件分发的组…"}, {"id": "6894108615540473870", "title": "FlutterEasyPopup -- 自定义弹出层，So easy！！！", "desc": "弹出层（Popup）一直是各类App中一个重要的交互组成部分，很多时候，一个App中甚至会出现各种形形色色的弹出层。 额咳。。。听我说完。。。 这也就意味着，它需要覆盖在当前页面之上。那么通过查阅，我们可以发现Flutter提供了两种方式来实现这一效果。 第一种就是Overla…"}, {"id": "6844904038656376840", "title": "Flutter实战  从头撸一个「孤岛」APP（No.4、流行、点赞、动画）", "desc": "当你看到这篇文章的时候，已经是2020的某一天，从此以后再无2019。不知道这一年来你收获了多少呢，我也十分感谢你能打开这份年末我予你最好的礼物，不得不说你是个上进的人 中文文档 Like Button 支持推特点赞效果和喜欢数量动画的Flutter库."}, {"id": "6959059880892170271", "title": "Flutter - 仿掘金App下拉加载动效实现", "desc": "Flutter - 仿掘金App下拉加载动效实现 仿掘金移动端app下拉加载动效. 背景 & 介绍 一直在刷掘金app，每次都看到下拉加载的动效，于是想到是不是可以仿一个看看效果。 通过几十次的下拉刷"}, {"id": "6957714565199200263", "title": "最简单的Flutter权限管理插件", "desc": "这是Flutter上的一个动态权限处理的插件库，可以让Flutter应用层的开发者以非常简单的API统一处理原生的动态权限。它封装了关于权限的检查、请求，以及权限被永久拒绝时，适当的拉起系统设置页面，"}, {"id": "6844904081736089608", "title": "flutter网络请求框架dio基本使用", "desc": "—— 执剑天涯，从你的点滴积累开始，所及之处，必精益求精，即是折腾每一天。 需要注意的是，一个 cancelToken 只能对就一个网络请求。"}, {"id": "6857418437254512654", "title": "Flutter绘制进阶——贝塞尔曲线", "desc": "说到贝塞尔曲线各位前端的小伙伴一定不陌生😆，贝塞尔曲线是一段优美的曲线，他可以极大程度的提高我们程序的美观性，试想我们的应用如果只有简单的矩形、圆形、三角形巴拉巴拉的基础图形，很难达到我们期望的良好的交互效果。我们如何去随性所欲的裁切、遮盖、绘制我们想要的界面的，今天的主角—…"}, {"id": "6883682688784564231", "title": "Flutter 征服 富文本编辑器zefyr", "desc": "最近几年一直在写项目，一直没怎么写博客了。一是懒，二是忙，只想一心快速推进项目，毕竟写博客也很费心力。 但是因为zefyr刚升级到1.0.0, 文档不太完善，官方案例也不全，自己也是看了源代码才明白如何应用。写下这篇文章一是作为备忘记录，二是也分享给有需要的朋友。废话不多说，进…"}, {"id": "6961442429786390542", "title": "Flutter屏幕适配 - 等比缩放", "desc": "Flutter屏幕适配 Gitbub项目地址：VPixel 移动端UI适配无非就2种类型 多UI动态响应 单UI等比缩放 这里来聊聊比较常见的 单UI等比缩放 （毕竟省事，手动狗头～～～）"}, {"id": "6963810664443805732", "title": "Flutter 多个版本切换控制", "desc": "如果你和猫哥我一样，手上有几个 1 年前的项目，那么经常切换 sdk 版本，就成了必须做的事情，我可不会把老项目去升级新版本。"}, {"id": "6844904003453747213", "title": "Flutter实战  从头撸一个「孤岛」APP（No.2、闪屏Splash Page、引导页）", "desc": "1. 前情回顾 嗨，正在掉头发的你们好，我是洋小洋，本集咱们接着聊一下GooGle的“亲儿子”Flutter。那自从上篇文章分享之后，有一些掘友也发表了一些很有意思的评论。那咱们首先来回顾一下 在这里挑选3位的评论，觉得挺有趣，毕竟咱也不是设计师，这也不得不证明了一个产品的UI…"}, {"id": "6845166891573444616", "title": "Flutter渲染之通过demo了解Key的作用", "desc": "1. 前言 之前看很多类的构造函数里面有一个可选参数 key，平时写代码过程中也没怎么用就忽视了，后来遇到一些问题才发现这个小小的 key 可是有大作用，因此决定好好研究下。看了一些文章都是分析源代码，写得不明不白，晦涩难懂，因此决定通过两个实际的小 demo 来讲述。看本文之…"}, {"id": "6844903633562107912", "title": "Flutter 初体验", "desc": "初识 Flutter 还是在上个月的 GMTC 大会上。来自 Google 的工程师现场演示了如何使用 Flutter 构建美观、高性能的移动应用。个人对其中一些特性，比如良好的开发者体验、优秀的跨平台能力很感兴趣。于是决定在会后亲自体验一下。 最近几天尝试使用 Flutter…"}, {"id": "6968766138117259277", "title": "记一次排查Flutter中预期外rebuild的过程", "desc": "背景 在我的flutter项目中，从A组件导航到B组件后，B组件在软键盘弹起与收起的时候，A组件会不断调用didUpdateWidget和build。 初步排查 起初以为是路由的问题，经过排查后发现，"}, {"id": "6847902224857858062", "title": "Flutter 新闻客户端 - 14 headless strapi + graphql 快速构建新闻后台", "desc": "1. strapi 安装 2. 构建新闻数据结构 3. 调试 graphql 请求 4. 编写 flutter 代码"}, {"id": "6908351977617358855", "title": "Flutter InkWell - Flutter每周一组件", "desc": "FlutterInkwell使用详解使用场景当需要给一个元素点击事件的时候，你可以用InkWell来包裹这个元素，它里面有常用交互事件和点击效果，可以简单实现想要的效果预览组件参数说明案例代码"}, {"id": "6844904141811089421", "title": "Flutter组件之ChoiceChip教程", "desc": "简介最简单演示未选中未选中-code未选中-效果选中选中-code选中-效果常用属性属性名是否必须描述labelY标签的文字描述selectedY是否选中avatarN左侧小图标labelStyleN"}, {"id": "6844903978023518222", "title": "Mobx在Flutter中的使用教程", "desc": "Flutter 用的是 Dart 语言，而 Dart 很多地方借鉴了 React ，比如说每次页面刷新用的是和 React 类似的setState写法，这样虽然便于页面数据的更新，但也带来了 React 中一直存在的 state无法跨页面更新的问题。 React 提供了 Red…"}, {"id": "6972572785805623327", "title": "flutter 官方组件 stepper enhance/强化", "desc": "flutter 官方组件 step enhance/强化, 扩展 isStepperTypeHorizontalBottom 两属性"}, {"id": "6950645969671159822", "title": "flutter 踩坑记录， 一步一坑。", "desc": "flutter： 启动或打包是报错：uses-sdk:minSdkVersion 16 cannot be smaller than version 19 declared in library"}, {"id": "6844903880858271752", "title": "初略讲解如何调试Flutter应用", "desc": "在使用flutter run命令来运行应用程序之前，请运行flutter analyze命令来检测你的代码，这个命令是Dart Analyzer（分析器）的一个包装，它将分析你的代码并帮助你发现可能出现的错误。因为Dart Analyzer分析器大量使用了代码中的类型注释来帮助…"}, {"id": "6844903879566426125", "title": "Flutter 源码系列：DropdownButton 源码浅析", "desc": "如有不懂怎么用的，可以看这篇文章：Flutter DropdownButton简单使用及魔改源码。 下面重点说一下 DropdownButton 是如何实现的。 带着如上问题，我们开始。 我们在上一篇文章中已经了解到，DropdownButton 是一个 statefulWid…"}, {"id": "6944597847157243941", "title": "Flutter容器类Widget使用----Padding、DecoratedBox和ConstrainedBox", "desc": "容器顾名思义是可以容纳其他 Widget 的，这一节我们学习Padding、DecoratedBox和ConstrainedBox。在 Android 开发中我们给控件会设置内边距和外边距，也就是 padding 和 margin，当然父控件如果设置了 padding 实际上对子..."}, {"id": "6844904173851377678", "title": "flutter的Flexible和 Expanded的区别", "desc": "—— 执剑天涯，从你的点滴积累开始，所及之处，必精益求精，即是折腾每一天。 不同之处是Expanded会强制填充剩余留白空间，而Flexible不会强制填充。如下图所示。"}, {"id": "6844904198916571150", "title": "Flutter 新闻客户端 - 07 Provider、认证授权、骨架屏、磁盘缓存", "desc": "B站视频https://www.bilibili.com/video/BV1vV411o7bnhttps://www.bilibili.com/video/BV1SA411t7ovhttps://ww"}, {"id": "6847902220197986317", "title": "Flutter 绘制 Tiled Lines", "desc": "感觉很有意思，尝试用 Flutter 实现。本文实现第一篇教程的图形 Tiled Lines 效果如下。 的画笔 TiledLinesPainter。关于 CustomPaint 和 CustomPainter 的知识可以查阅这篇文章 使用 Flutter 绘制图表（一）柱状图…"}, {"id": "6844903732547682318", "title": "深度｜10分钟读懂阿里巴巴高级专家在Flutter Live2018的分享", "desc": "12月4日Flutter Live Beijing会议上，Google团队宣布第一个Flutter正式版本发布；并邀请了在这一技术方案中重要的合作伙伴闲鱼团队分享这半年以来的通过Flutter产出的业务结果以及对应的技术挑战。 本文根据Flutter Live Beijing嘉…"}, {"id": "6937312081213390862", "title": "探究Flutter App在Android宿主App中的整合", "desc": "前面一篇文章我们探讨了一下Flutter App如何被整合到iOS App中的，本文我们接着来讨论下Flutter App如何被整合到Android App中的。 作为Android项目的自动化构建工具，我们先来看看Gradle在Flutter APP的构建过程中大概做了哪些工…"}, {"id": "6844903850118217736", "title": "前端的flutter之路（一）：语法", "desc": "raw string，在前几种表示方式之前加上r即可。 r\"Single quotes work well for string literals.\" 字符串拼接，跟js不同，+可有可无。比如'test '\"string\"和'test ' + \"string\"都是可以的。 在j…"}, {"id": "6909719686833766413", "title": "Flutter ListTile - Flutter每周一组件", "desc": "组件解释：固定高度的单个行，通常包含一些文本以及前导或尾随图标。"}, {"id": "6844903784578039822", "title": "[译] Hummingbird: Web端运行Flutter", "desc": "在今天的 Flutter Live 上，我们宣布正尝试在 Web 端运行 Flutter 。 在这篇文章中，我们描述了我们如何应对挑战以及的当前的技术状况。 在帖子的最后，你将找到有关交互操作和嵌入问题的答案。 让我们快速回顾一下 Flutter 的架构。 Flutter 是一…"}, {"id": "6934875618689417253", "title": "Flutter | 布局组件", "desc": "布局类组件都会包含一个或多个组件，不同的布局类组件对子组件(layout)方式不同。在 Flutter 中 Element 树才是最终的绘制树，Element 树是通过 Widget 树来创建的 (通 Widget.createElement()) ，Widget 其实就是 E…"}, {"id": "6844903850449584142", "title": "Flutter BackdropFilter 实现高斯模糊", "desc": "最前面一段话说的是：如果你不设置他大小的话，这个组件将是全屏的。 当这一大串 0 显示在我眼前的时候我差点瞎了。 不过可以看到使用 BackdropFilter 非常简单就实现了高斯模糊的效果。 我们使用的是无状态的小部件，构造函数里需要传入一个widget，用来放在模糊的背景…"}, {"id": "6844904022009184270", "title": "Flutter开发日记-如何实现一个照片选择器plugin", "desc": "我们使用 photo_manager ，获取相册和资源信息。 在 photo_manager 源代码基础上进行了业务层的封装。 抹平 ios 和安卓端调用差异。eg.请求相册权限 我拉了 photo_manager 的代码下来改（其他同学不需要可以直接新建一个 plugin 工…"}, {"id": "6844903938039234568", "title": "使用 Flutter MVVM 开发登录功能", "desc": "前几天写了篇关于 Flutter MVVM 实现的文章 [开源] 从web端开发到app端开发也许只有一个Flutter MVVM的距离，今天我们使用它来开发一个简单的登录界面，体验使用 MVVM 数据绑定在开发过程中的便捷。 在Flutter中文本输入框(TextField)…"}, {"id": "6984588470396125214", "title": "Mac Flutter安装与配置", "desc": "Mac Flutter安装与配置 一、获取Flutter SDK （1）官网下载适用的SDK：https://flutter.dev/docs/development/tools/sdk"}, {"id": "6931548788855144455", "title": "Flutter学习笔记", "desc": "其中main方法是dart的入口方法。runApp方法是flutter的入口方法。MyApp是自定义的一个组件。 从最根本的开始哦。 在flutter中自定义组件其实就是一个类，这个类需要继承StatelessWidget/StatefulWidget。 StatelessWi…"}, {"id": "6930816300012961805", "title": "Flutter-快速创建简单闪屏页", "desc": "近来闲暇时间一直在做Flutter,闪屏页是一个比较常见的需求,网上的闪屏页教程大部分是那种类似于广告页,而非iOS中的 LaunchScreen 性质的闪屏页.按照原来的方案我们要配置闪屏页的话,我们需要同时配置两端的闪屏页,那么有没有比较简单的方案来配置闪屏页呢? 毋庸置疑…"}, {"id": "6991664921159139359", "title": "GridView滚动列表的顶级用法【flutter20个实例之二】", "desc": "这里主要是用到GridView 组件 GridView是一个可滚动的，2D数组控件。附带可直接运行源码"}, {"id": "6873657407805849607", "title": "Flutter 控制屏幕旋转", "desc": "最近需要做个平板的项目，然后需要直接横屏，有2种实现方式。 1, 随着屏幕旋转，布局自动调整。做横竖屏适配 第一种方式这里就不做说明了。代码做适配就可以。 下面说一下第二种实现方式 包含的方向类型。 ！！！！但是但是但是这个方法只适用于android在iOS上没有效果，上网查资…"}, {"id": "6844903982960246791", "title": "Flutter实战 | 从 0 搭建「网易云音乐」APP（六、歌词（一））", "desc": "本系列可能会伴随大家很长时间，这里我会从0开始搭建一个「网易云音乐」的APP出来。 本篇为第六篇，在这里我们会搭建歌词页面的逻辑。 0. 确认需求 没错，首先还是我们的老套路，确认需求。 歌词的功能其实是真的不少，而且我现在也没有完成，这一节主要就来讲前三个。 1. 展示歌词 …"}, {"id": "6844904020033830919", "title": "Flutter For Web入门实战", "desc": "Google在今年5月的Google大会上发布了Flutter1.5.4版本，同时也推出了Flutter for Web的预览版，并开启了Flutter的全栈框架之路。同时，今年9月举行的谷歌开发者大会上，Google宣布flutter1.9正式发布，并且flutter_web…"}, {"id": "6968979953064869896", "title": "[Flutter翻译]迈向Flutter Web的旅程第三部分：设计", "desc": "如果您是直接来到这个页面，请确保在开始这个页面之前，您先通过走向Flutter Web的旅程：2。 在这篇文章中，我们将讨论如何在保持单一代码库的情况下，使应用程序在移动和网络上都能响应。 这里有一些"}, {"id": "6844903807164383245", "title": "Flutter 实现webview与原生组件组合滑动", "desc": "欢迎关注我的Github和CSDN. 最近在用Flutter写一个新闻客户端, 新闻详情页中的内容 需要用Flutter的本地Widget和WebView共同展示 . 比如标题/上方的视频播放器是用本地Widget展示, 新闻内容的富文本文字使用webview展示html, 这…"}, {"id": "6844903957328838663", "title": "Flutter 滚动控件篇-->ListView", "desc": "它可以沿一个方向线性排布所有子组件，并且它也支持基于Sliver的延迟构建模型。 通常可滚动组件的子组件可能会非常多、占用的总高度也会非常大；如果要一次性将子组件全部构建出将会非常昂贵！为此，Flutter中提出一个Sliver（中文为“薄片”的意思）概念，如果一个可滚动组件支…"}, {"id": "6972907407219359752", "title": "Flutter训练营(七)-Flutter状态管理", "desc": "随着应用需要共享多处统一状态时，我们很难再清楚的测试维护我们的状态，因为它看上去实在是太复杂了！而且还会有多个页面共享同一个状态，例如当你进入一个文章点赞，退出到外部缩略展示的时候，外部也需要显示点赞"}, {"id": "6844903903423627278", "title": "Flutter关于一个登录页", "desc": "看设计图我们可以知道这是一个垂直排列Widget的页面，所以我们可以使用Column，关于Column由于是一个基础控件相信大家都已经可以很熟练的使用，这里就不细细展开了，举几个小🌰子。 既然涉及到输入框，那么就不得不说另一个问题，软键盘遮挡问题。 这个属性是用在我们外层的S…"}, {"id": "6844904198279020558", "title": "Flutter 新闻客户端 - 02 设计稿适配、加入图片字体资源、欢迎界面", "desc": "B站视频https://www.bilibili.com/video/BV19E411s7YM本节目标加入图片资源加入字体资源设计稿适配编写界面代码的逻辑和组织1加入图片资源1.1flutter图片资"}, {"id": "6869673927099187213", "title": "Flutter项目中构建Web工程以及发布nginx服务", "desc": "Flutter的beat通道已经支持对web的支持，通过 Web 支持，你可以将使用 Dart 编写的现有 Flutter 代码编译为可以嵌入浏览器，并部署到任何 Web 服务器上，具有客户端体验的 Web 应用。你可以使用 Flutter 的所有功能，而不需要任何浏览器插件。…"}, {"id": "6952521974056763422", "title": "文科生也编程 - GetX的简单使用", "desc": "文科生也编程 - GetX的简单使用 GetX是Flutter的轻便而强大的解决方案，它结合了高性能状态管理，智能依赖注入和快速实用的路由管理。 一、响应式控件 二、构建可伸缩应用程序 关键字：S"}, {"id": "6844904195531735048", "title": "在Flutter中使用SetState无效？可能是忽略了这个！", "desc": "这次是Flutter开发技术分享，解决的问题点来自本人实际的开发经历。 首先描述一下问题：在某个组件中调用setState()方法更新该组件状态，结果是无法做到更新效果，组件仍然维持原状。 为了突出问题点，减少不必要的干扰，我简化了原有代码内容。通过阅读上述代码，我们得知整个D…"}, {"id": "6844903936659292167", "title": "秀发去无踪之你不得不知道的Dart", "desc": "在dart项目中，必须声明一个入口函数main，这也很java，程序从main函数开始运行（习惯使用js的需要注意这一点）。 可以使用abstract来定义抽象类，抽象类不能被实例化。抽象类通常含有抽象方法，抽象方法只有方法签名，没有实现。 dart:core 提供了基础类型、…"}, {"id": "6844903766974529544", "title": "基于Flutter Canvas的飞机大战(一)", "desc": "小编也是初学者,为了了解flutter动画的使用与效果, 决定亲自定手用flutte写一款小游戏出来. 并将过程中的跳过的坑记录下来. main.dart是我们代码的主入口. lib.src用来存放我们整个游戏的逻辑代码文件. assets则是用来存放我们的图片资源文件. 在这…"}, {"id": "6860823716469997581", "title": "最右 JS2Flutter 框架——开篇（一）", "desc": "1、背景今年年初，我们在InfoQ发表了一篇题为Flutter动态化在最右App中的实践[1]的文章，主要讲述了最右实践Flutter动态化的方案，文章发布至今越来越多的业内同学联系到我，想了解更多关"}, {"id": "6844903733260730382", "title": "Flutter之在Flutter布局中嵌入原生组件Android篇", "desc": "之前介绍过在原生工程内嵌入Flutter，以页面形式或者View的形式嵌入都是可以的，最近看Flutter源码发现Flutter还支持在Flutter布局中嵌入原生View，这个特性在文档中还没有介绍，但是确实是一个非常实用的特性，比如困扰已久的地图实现，有了这个特性我们就可以…"}, {"id": "6876342362466058254", "title": "Flutter 系列之 Web入门", "desc": "本文主要讲如何从一个 web 开发者如何转变到 Flutter 项目，本文不会讲如何安装 Flutter ，如何调试 IDE，如何配置环境，诸如此类的。这些网上一搜一堆，如果有同学有需要可以在网上自取哦～ Flutter 出来之后，大概在 v1.12.13 的这个版本的时候，我…"}, {"id": "6889377769700982791", "title": "Flutter 复杂 Loading 动画的抽丝剥茧", "desc": "上面图中的动画第一眼看起来的确是有点复杂，但是我们来一步步分析，就会发现其实并不是那么难。仔细看一下就会发现，大致步骤如下： 大致步骤如上，下面我们就来一步步实现每个步骤。 知道了三角形的变化过程，首先我们需要绘制出来一个三角形，由于我们并没有三角形这种 widget，所以就需…"}, {"id": "6867787782035603470", "title": "从Flutter源码分析Image是如何被渲染出来的", "desc": "通过这个代码可以看出，Image最终通过 canvas 接口进行渲染，其实是通过 canvas.drawImageRect 方法，形成绘图指令，最终传输到skia引擎进行绘制。同时通过 save，restore，clipRect，translate，scale 等canvas接…"}, {"id": "6966261588500152328", "title": "Flutter Canvas学习之基础知识", "desc": "Flutter现在已经是移动端跨端方向非常优秀的解决方案，在阿里、字节、微店等公司，它都是一个比较重要的技术方案。目前来说除了某些场景下"}, {"id": "6881596471678861319", "title": "1964 年，空指针崩溃的源头，以及 Dart2.10 最新的空安全特性！", "desc": "2009 年，快排算法的作者、1980 年图灵奖的得主 Tony Hoare 在伦敦的 QCon 大会上发表了一场主题为《Null References: The Billion Dollar Mistake》的演讲，这场本该积极活跃的分享会全程却充满了懊悔和歉意，因为他认为正…"}, {"id": "6844904041974071303", "title": "Flutter开发之异步编程", "desc": "说到网络与通信，就不得不提到异步编程。所谓异步编程，就是一种非阻塞的、事件驱动的编程机制，它可以充分利用系统资源来并行执行多个任务，因此提高了系统的运行效率。 事件循环是Dart中处理事件的一种机制，与Android中的Handler消息传递机制和前端的eventloop事件循…"}, {"id": "6858885636313579528", "title": "Flutter&Flame——TankCombat游戏开发（四）", "desc": "在开工之前，我们先要思考一下，游戏中的电脑(坦克/炮弹)，它们并不知道该往哪里走、炮塔怎么转以及何时该开火，这一切都是我们通过代码告诉它们该如何‘表现’的，那么当两台电脑需要交互的时候，就产生了谁开的炮，谁原地爆炸，谁又重生在何时何地的问题... 这时我们就需要一个观察者，并将…"}, {"id": "6844903933513564168", "title": "flutter的进阶之路之Material Design与IOS风格组件", "desc": "1. 概述 2. App结构和导航组件 MaterialApp代表使用Material Design风格的应用，里面包含了其他所需的基本控件。官方提供的示例demo就是从MaterialApp这个主组件开始的。 使用home属性设置应用的主页，即整个应用的主组件。 routes…"}, {"id": "6998019573584756772", "title": "Flutter与原生双向通信BasicMessageChannel(IOS暂未测试)", "desc": "Flutter与原生双向通信BasicMessageChannel(IOS暂未测试)........"}, {"id": "6844903989113290765", "title": "Flutter开发日记——Flutter动画&Motion Widget详解（上）", "desc": "本篇文章已授权微信公众号YYGeeker独家发布转载请标明出处AnimatedContainer1、简介AnimatedContainer表示一个动画容器，只要更改容器的值，就能表现出对应的动画效果2"}, {"id": "6978965512885633060", "title": "Flutter 强随机密码生成器", "desc": "有的时候手机上也需要强密码生成器，这样就不用再 PC 上生成后复制过去了，用 Flutter 自己来打造一个吧。"}, {"id": "6949173227583668238", "title": "Flutter Getx 02 - 空安全、更健全的代码", "desc": "本节目标空安全意味着什么如何迁移代码如何禁用空安全代码规范示例视频https://www.bilibili.com/video/bv1g5411c7hF代码https://github.com/duc"}, {"id": "6844903944775286797", "title": "Flutter 自定义缩放控件", "desc": "最近在学习 Flutter，俗话说的好，纸上得来终觉浅，所以动手撸了一个 gank.io 的 APP，有兴趣的可以 到 GitHub 看看源码。 本文将与大家分享项目中自定义的缩放控件 GestureZoomBox 。 双击缩放。 双指缩放。 以双击位置/双指位置作为缩放中心。…"}, {"id": "6844903582467096584", "title": "flutter实战2：为APP增加上下Tab页", "desc": "紧接上一篇的有侧边栏APP，这次我们向APP中加入上下Tab页，使之跟趋近主流大部分APP的信息布局套路，等不及看源码的同学可以点击进入我的git仓库下载代码。 这是Tab页的控制器，用于定义Tab标签和内容页的坐标，还可配置标签页的切换动画效果等。 Tab页的Title控件，…"}, {"id": "6844903861656748039", "title": "Flutter常见问题-Error retrieving device properties for ro.product.cpu.abi", "desc": "为了避免后来看到的小伙伴们走弯路，先直接贴出解决方法，其余内容只是记录还原一下问题。 把Android Platform Tools 29换成Android Platform Tools 28，下载链接在文末。 说来也奇怪，就出去上了个实验课，回来Android Studio就…"}, {"id": "6844903987477495816", "title": "Flutter开发日记——Flutter布局Widget详解（下）", "desc": "addRepaintBoundaries：是否将子控件包裹在 RepaintBoundary 控件内。用于避免列表滚动时的重绘"}, {"id": "6942118356816232456", "title": "极简Flutter状态管理库：consumer", "desc": "若你觉得 Provider 等状态管理太繁琐， consumer 就是为你准备的一款高性能、极简的状态管理库。 consumer 是一个参考 react-consumer 方式的状态管理, 使用 dart 的 Stream 做发布订阅. 类 react 项目，当项目到一定程度，…"}, {"id": "6844904032071319559", "title": "Flutter 创建自定义路由过渡动画", "desc": "在 Flutter 中使用 Navigator.of(context).push(Route route); 方法进行路由跳转时就需要传一个 Route 对象，通常使用 MaterialPageRoute(builder: () {}); 创建，使用时会在路由跳转过程中添加默认…"}, {"id": "6844903894623993863", "title": "Flutter ListView 拖拽排序了解一下", "desc": "前面我们对于 ListView 的操作讲过 Flutter 滑动删除最佳实践，那现在我们来了解一下 ListView 的拖拽排序。 剩下两个就不多说了，都应该了解。 但是讲道理明明应该是 从 0 到 2，从 0 到 3。 既然我们要移动，那肯定也会对源数据进行操作，不然移动也都…"}, {"id": "6844904182613278733", "title": "Dart - 抽象类的实例化", "desc": "Dart 抽象类可以只声明方法，也可以有具体的方法实现，但是不能直接用抽象类来创建实例，只能被继承使用或者充当接口。 在这个地方，Map 的工厂方法并没有具体的实现，而只是在工厂构造方法前加了一个关键字 external。 可以看到，这里使用了 LinkedHashMap 来实…"}, {"id": "6844903814911229965", "title": "Fish Redux 全局Store-AppRoute使用指南", "desc": "前端的单页面应用越来越复杂，一个model变化会引起另外一个model变化，又可能引起视图变化。Redux的三大原则，使state的变化可预测成为可能。其中第一条就是单一数据源，这体现了集中思想。应用维护一颗状态树，而数据变化驱动视图重新刷新。单一的状态树更方便数据的管理，由于…"}, {"id": "6869618669408747528", "title": "FlutterDojo设计之道—状态管理之路（五）", "desc": "书接上回，我们通过InheritedWidget实现了跨Widget的数据管理。 可以发现，在使用InheritedWidget来实现数据管理的方式中，有几个东西是必须的。 在上篇文章中，我们使用了一个StatefulWidget来管理InheritedWidget，借助Sta…"}, {"id": "6844904064552009735", "title": "Dart变量、类型和流程控制", "desc": "本节将介绍Dart语言有别于其他编程语言的特性或比较重要的特性。假定，你已经有一些其他编程语言的基础，如C，C++，Java，JavaScript等。 在正式开始之前，有必要介绍下Dart的版本信息，因为Dart的语法规则是跟它的版本有关系的。执行下面的命令： 可以看到我本机安…"}, {"id": "6963764978692128798", "title": "[Flutter翻译]在2021年谷歌I/O大会上发布Flutter 2.2版", "desc": "用于多平台开发的领先UI工具包的发展势头强劲 在今天的谷歌I/O大会上，我们发布了Flutter 2.2，这是我们最新发布的开源工具包，用于从单一平台为任何设备构建漂亮的应用程序。Flutter 2."}, {"id": "6920852250667532301", "title": "Flutter 状态管理", "desc": "1.基础知识：StatelessWidget：无状态的Widget，它无法通过setState设置组件状态进行重绘，它内的属性应该被声明为final，防止改变。生命周期：初始化->build进行渲染S"}, {"id": "6844903998491721742", "title": "Flutter Tools的调试", "desc": "要想弄清楚各种命令背后的原理，一方面可以看静态代码，另一方面则是动态调试。 我们知道flutter tools是用dart实现的，其源码位于path/to/flutter/packages/flutter_tools。 用Android Studio打开该项目。 很多程序的调试…"}, {"id": "6911500351078137870", "title": "flutter从环境配置到打包(仅安卓)", "desc": "安装之后会检查你当前flutter的环境，如上图所示，由于本地还没启动设备，所以执行flutter run会报错。open -a Simulator打开ios模拟器，然后执行 flutter run即可"}, {"id": "6854573213171925005", "title": "[搬运]Dart之枚举中使用扩展", "desc": "Dart最近宣布支持Extension方法，你也可以在项目中使用这个牛X的功能了！！！本文旨在展示我是如何在项目中使用Extension方法的。 在我的Flutter项目中，我经常使用Enum，但是集成Enum和Extension方法会让代码变得更简洁易读。 假设你写了一个En…"}, {"id": "6924602985511125000", "title": "Flutter源码分析(三)Flutter灵魂组件ProxyWidget之InheritedWidget", "desc": "在开始讲解这篇文章之前，如果没看过前几篇的文章的话，建议先阅读以下。 2020年个人完成了一个开源的Flutter的影视项目如下。 ProxyWidget是InheritedWidget的父类，那么它是干什么的呢？ProxyWidget的说明，可以看到源码注释上写了这样一句话：…"}, {"id": "6844903977520201742", "title": "Flutter实战 | 从 0 搭建「网易云音乐」APP（五、播放功能逻辑）", "desc": "本系列可能会伴随大家很长时间，这里我会从0开始搭建一个「网易云音乐」的APP出来。 本篇为第五篇，在这里我们会搭建播放歌曲和播放歌曲一系列的逻辑。 我们整个APP的重中之重就是「播放歌曲」。（废话，一个音乐播放软件不放歌干嘛？） 对于播放来说，我选择的是 luanpotter …"}, {"id": "6844904054804447240", "title": "Flutter页面曝光事件埋点框架", "desc": "FlutterPageTracker是一个用于监听页面露出、离开的plugin。它具有以下特性： 当前页面入栈会触发当前页面的曝光事件和前一个页面的离开事件。 当前页面出栈会触发当前页面的离开事件和前一个页面的曝光事件。 1. 安装 2. 引入flutter_page_trac…"}, {"id": "6844903879620984845", "title": "Flutter Desktop Mac版小白体验", "desc": "flutter-desktop-embedding 这个项目其实已经存在很久了，之前看文档什么都没有，小白表示完全不会编译，最近发现官方终于更新readme了！！虽然文档依然简陋，但是已经很友好了，配置对了，一句flutter run项目就跑起来了。 当然，这并不是一个Goog…"}, {"id": "6844903956368326669", "title": "Flutter 布局控件篇-->Row、Column", "desc": "Flutter 中的Row和Column被称之为线性布局，所谓线性布局，即指沿水平或垂直方向排布子组件。 对于线性布局，有主轴和纵轴之分。 如果布局沿垂直方向，那么主轴就是指垂直方向，而纵轴就是水平方向。 在线性布局中，有两个定义对齐方式的枚举类MainAxisAlignmen…"}, {"id": "6844903956150222862", "title": "使用 Provider 管理 Flutter 应用状态 (上)", "desc": "官方的定义是： A mixture between dependency injection (DI) and state management, built with widgets for widgets. 翻译过来大意是一种依赖注入和状态管理的混合方案，使用部件创建，作用…"}, {"id": "6938680478111121438", "title": "flutter前瞻（一）—— 初识Dart", "desc": "笔者从网上找了一张简单的对比图，不难发现，Flutter在性能方面脱颖而出，当然，伴随着的，也是很高的开发成本，特别是对没有接触过前端或Java的同学来讲，学习成本是巨大的。那么，为什么还要选择flutter，这里其实涉及到了一个非常重要的地方——跨平台。以原生APP为例，以往…"}, {"id": "6844903587022110728", "title": "跨平台开发框架 Lynx 初探", "desc": "跨平台开发是目前开发较热门的方向，React Native 在这方面取得了很大的成功，同时 Flutter 也获得了非常多的关注。React Native 采用 Web 框架开发并使用 Native UI 进行渲染，很大程度上降低了 Native 开发的门槛并且提高迭代的效率，…"}, {"id": "6997202342655311879", "title": "Flutter 重识 NestedScrollView ", "desc": "前言 extended_nested_scroll_view 是我的第一个上传到 pub.dev 的 Flutter 组件. 一晃眼都快3年了，经历了43个版本迭代，功能稳定，代码与官方同步。 而我最"}, {"id": "7002032884571701279", "title": "Flutter挑战之增大点击范围", "desc": "前言 我在 Flutter 重识 NestedScrollView (juejin.cn) 中留下 增大点击范围 的挑战，时间已经过了一个星期，不知道大家思考的怎么样了？今天说了一下对于 增大点击范围"}, {"id": "6997253893046403109", "title": "在Flutter里实现一个开心农场地块布局！Web前端工程师也可以看看，作为Flutter入门。", "desc": "前言 半个月前，有一位B站的小兄弟加我微信，咨询我这种地图在Flutter里如何实现... 类似的东西，我以前用flash做过，在小程序里也实现过。虽然我对Flutter不算是特别熟悉，但没觉得有多难"}, {"id": "6995141672313028621", "title": "Flutter UI系统", "desc": "一、屏幕和图像 在介绍 Flutter 的 UI 系统之前，我们先来了解下显示屏是如何显示图形的，这有助于理解 UI 系统的设计。 1.1 基本单位 - 像素 可视化的所有的一切在本质上都是依靠绘制的"}, {"id": "7005624223850823687", "title": "[Flutter翻译]Flutter 2.5的新内容", "desc": "性能改进，DevTools更新，新的Material You支持，新的应用模板，以及更多 你好，欢迎来到Flutter 2.5! 这是一个很大的版本，在Flutter发布的历史上，它的统计数字是第二高"}, {"id": "7007674497830486046", "title": "Container，设置宽高不响应？", "desc": "问题场景： 日常开发中，我们遇到过这样的问题， Widget 设置了宽度 width: 100 而展示出来并不是 100 像素呢？而一般的处理方式是把 Widget 放在 Center 里面，对吗？ "}, {"id": "7002906716039823367", "title": "有道词典Flutter架构与应用", "desc": "长期来看，用 Flutter 来替代 Native，实现双端代码统一，节约人力开发，会是我们持续探索的方向。"}, {"id": "7006908470184116254", "title": "Flutter深入浅出组件篇---ClipRect、ClipRRect", "desc": "ClipRect介绍 ClipRect 是给子组件裁剪为给定的矩形大小，默认情况下，ClipRect会阻止其子组件在边界之外进行会话，如果需要对子组件进行大小和位置的限定，那么还可以通过自定义裁剪路径"}, {"id": "7000706151696302093", "title": "浅谈 Dart 类与类的基本方法", "desc": "Dart 语言是一门面向对象、类定义、单继承的语言，支持接口(interfaces)、混入(mixins)、抽象类(abstract classes)、具体化泛型(reified generics)。"}, {"id": "7007288937496444942", "title": "Flutter练习（四）— MarkDown渲染文章详情", "desc": "前言 上一篇文章模仿掘金将文章列表渲染了出来，接下来是展示文章详情，在此我引用了flutter_markdown来实现markdown的渲染"}, {"id": "6996860982488219661", "title": "Flutter手势密码插件从开发到发布至pub仓库", "desc": "前言 本篇记录的是使用Flutter完成手势密码的功能，大致效果如下图所示： 该手势密码的功能比较简单，下面会详细记录实现的过程，另外还会简单说明如何将该手势密码作为插件发布到pub仓库。 开始 实现"}, {"id": "7005882653769465869", "title": "Flutter 多引擎支持 PlatformView 以及线程合并解决方案", "desc": "本文介绍了 Flutter 多引擎下，使用 PlatformView 场景时不能绕开的一个线程合并问题，以及它最终的解决方案。"}, {"id": "6998335494664749087", "title": "深入解析基于 Flutter 的 Web 渲染引擎「北海 Kraken 」技术原理", "desc": "从技术角度深入解析如何基于 Flutter 开发一个 Web 渲染引擎，以及北海的一些重要技术特性的原理。"}, {"id": "7005010372637753352", "title": "Flutter GetX系列教程---GetxController", "desc": "GetxController介绍 在实际的项目开发过程中，我们不可能把UI代码、业务逻辑都放在一起处理，这样对项目的架构、代码的可读性、后期的维护将会是致命的，好在GetX为我们提供了GetxCont"}, {"id": "7003608065115176968", "title": "dart 防抖和节流", "desc": "前端的开发者都或多或少的遇到过节流与防抖的问题。函数节流和函数防抖，两者都是优化执行代码效率的一种手段。在一定时间内，代码执行的次数不一定是越多越好。"}, {"id": "6997283367045562375", "title": "flutter + getx 最佳实践", "desc": "基于getx实现的全新flutter getx模版，适用于中大型项目的开发。最新版本的空安全、view 和 state 自动响应等功能。"}, {"id": "6920862050952413197", "title": "让 Flutter 在鸿蒙系统上跑起来", "desc": "鸿蒙系统 （HarmonyOS）是华为推出的一款面向未来、面向全场景的分布式操作系统。在传统单设备系统能力的基础上，鸿蒙提出了基于同一套系统能力、适配多种终端形态的分布式理念。自 2020 年 9 月 HarmonyOS 2.0 发布以来，华为加快了鸿蒙系统大规模落地的步伐，预…"}, {"id": "6992127843740155918", "title": "🔥Flutter 那些花里胡哨的底部菜单🔥 进来绝不后悔", "desc": "🔥Flutter 那些花里胡哨的界面🔥，花里胡哨的底部导航，仿抖音、小红书底部菜单，向上展开菜单，半圆菜单，中间凹进去的菜单，动画底部导航"}, {"id": "6994231790198063134", "title": "Flutter 锁定行列的 FlexGrid", "desc": "前言 之前在 GrapeCity/ComponentOne 做微软 Xaml 系列的控件，包括 Silverlight, WPF, Windows Phone, UWP，一套代码多端共用，是真香。对于"}, {"id": "6844903736498716685", "title": "新年献礼 技术胖262集前端免费视频 让您走的更容易些", "desc": "2018还有十几天就要过完了，我觉的这一年我的成长并不是很快，有很多2018新年许的愿望都没有达成。这篇文章算我2018年的一个总结吧！ 在这岁末迎新的时候，把所有的视频送给你，希望你可以在2019年，无论是学习还是工作都有所进步。 有很多人问我为什么要录制这么多免费视频，是不…"}, {"id": "6938672390725435422", "title": "Flutter 异常处理方案——灰度与降级", "desc": "1. Flutter 异常概述 关于 Flutter 异常类型与捕获的文章网上已经有许多了，本文不再详细赘述，此处仅做个小结以保证文章的完整性。 所谓 Dart 异常，根据来源又可以细分为 App 异常和 Framework 异常，而 App 异常指的是。根据异常代码的执行时序…"}, {"id": "6844903892883374094", "title": "Flutter图片分辨率适配", "desc": "为了达到最佳显示，我们在开发过程中一般会在不同分辨率的屏幕上显示不同尺寸的图片。 在项目中创建一个assets文件夹用来存放资源文件，资源文件夹里面可以放任意类型的文件，为了区分，我们再创建一个images的子文件夹用来存放图片。为了处理分辨率的问题，我们还需要在images文…"}, {"id": "6844903860184563720", "title": "Flutter学习篇(三)—— MobX的使用和原理", "desc": "MobX是前端一个很流行的函数响应式编程，让状态变得简单可扩展。背后的哲学是： 基于观察者的MVVM框架完成了数据到UI的双向绑定。Google2017年也发布了类似思想的MVVM框架ViewModel。MVVM是数据驱动更新的框架，可以很方便地把页面和逻辑抽开，在前端很受欢迎…"}, {"id": "6844903935174508552", "title": "【Flutter】番外篇之翻页动画效果", "desc": "前段时间学习Flutter动画时接触了Transform类，查找官方文档时无意间看到了时钟翻页动画觉得也挺好玩的，所以就自己动手使用动画和Transform来实现翻页特效。 开始前自己也思考过如果实现翻页动画，但实际操作时却发现思路不太正确最后只好作罢。最后还是参考了已有翻页实…"}, {"id": "6844903985426497543", "title": "在 Node.js 上运行 Flutter Web 应用和 API", "desc": "大量的跨平台应用开发框架，使你可以编写一次代码，然后在 Android，iOS 等多个平台上甚至在台式机上运行。你可能听说过一些流行的框架，例如 Ionic，Xamarin 和 React Native。另一个相对较新的框架是 Flutter。 在本文中，你将学到一些有关 Fl…"}, {"id": "6844903955814694920", "title": "Flutter 单元测试", "desc": "当 App 中的功能越来越多的时候，我们想要去手动测试一个功能的时候，会变的非常麻烦，这个时候就需要单元测试来帮助我们测试想要测的功能。 这里记录下前两种。 单元测试用来验证代码中的某一个方法或者某一块逻辑是否正确。写单元测试的步骤如下： 1. 添加依赖 2. 创建测试文件 这…"}, {"id": "6844903693003784206", "title": "五个你所不知道的Flutter开发细节", "desc": "在Flutter中，UI的构建是通过Widget的层层嵌套实现的，开发过程中不可避免地需要频繁修改Widget树，从中插入或者移除一些Widget。 在Dart中，当你不需要去改变一个变量的时候，应该使用final或者const，而不是使用var去声明一个变量。 一个final…"}, {"id": "6971697413526388743", "title": "flutter 定位widget位置、监听键盘弹出、处理键盘遮挡控件", "desc": "一、定位widget（应用场景：登录按钮被弹出的键盘遮挡，想要弹出键盘的时候整体页面上移） 1、初始化一个GlobalKey 2、要监听的控件(登录按钮) 3、获取该控件的属性(登录按钮) 二、获取键"}, {"id": "6844903985460019213", "title": "Flutter项目集成mqtt的过程记录", "desc": "2019/11/05 17:26 ： 修改证书验证内容，处理双向验证失败的问题。 首先来到 flutter package 这个 flutter 相关的库网站，然后搜了下 mqtt，找到 mqtt_client 这个库。 上面有提供以下没有安全认证的使用示例。 然后我就按这个示…"}, {"id": "6906673209383649293", "title": "蒲公英 · JELLY技术周刊 Vol.34: 芜湖～ Flutter", "desc": "你是否曾希望 CSS 能原生实现一个可吸附的滑动容器呢？本文将深入 CSS Scroll Snap 属性，带你了解滚动捕抓技术。 文章以美团外卖对用户端和商家端的技术选型为切入，为我们介绍了商家端为什么选择 Flutter，以及选型之后对包体积和动态化的一些思考。为了支持动态化…"}, {"id": "6844903603690274823", "title": "基于Google Flutter的开源中国客户端，支持Android与iOS", "desc": "基于Google Flutter的开源中国客户端，支持Android和iOS。"}, {"id": "6969510221395787806", "title": "Flutter 使用api 上传图片到阿里云OSS ", "desc": "\"不就是上传一张图片吗？能有多难？\" 在我需要通过api在flutter中上传我的博客图片到阿里云的时候，我轻视地想着。 然后时间不知不觉就跳到了两天后~~"}, {"id": "6844904079106277383", "title": "深入理解Flutter的Listener组件", "desc": "有过移动端开发经验的同学都知道，移动端的触摸事件是由手指按下、手指移动、手指抬起这些基本事件组成的。 在Flutter中，一切皆Widget。Widget本身并不具备识别触摸事件的功能。能识别触摸事件的Widget，必须经由Listener或GestureDetector组装起…"}, {"id": "6844904022445391885", "title": "Fuchsia系统可以使用Flutter编写程序了，来了解一下", "desc": "最近看到一个印度大佬编译了一套GUI程序，然后成功的在Fuchsia系统上面运行Flutter程序，包括官方的：Flutter Gallery，不得不佩服老外的技术热情。他使用的是Armadillo GUI，作为桥梁衔接Fuchsia底层和Flutter，然后调用底层的一些命令…"}, {"id": "6939398784237436936", "title": "Flutter2 的 Sound null safety 是个什么鬼？！", "desc": "2021年3月最大的猿圈事件莫过于Flutter Engage上，Flutter2的官宣了。 我从燃爆的Flutter2登场视频上感受到了一个由Flutter引领的大前端新纪元的开始。 目前的官网上有三个关于flutter2的链接. 现在你只需要写一份代码就可以支持几乎所有平台…"}, {"id": "6844904054875766797", "title": "Flutter列表滑动曝光埋点，支持SliverList、SliverGrid", "desc": "滑动曝光埋点用于滑动列表组件中的模块曝光，例如Flutter中的SliverList、SliverGrid。 当SliverList中的某一个行（或列）移动到ViewPort中，并且显示比例超过一定阈值时，我们把这个事件记为一次滑动曝光事件。 滑动曝光的核心难点是计算组件的露出…"}, {"id": "6844903920519610375", "title": "Flutter开发之JSON解析", "desc": "对于JSON格式的数据交互，想必大家不会陌生。JSON(全称JavaScript Object Notation, JS 对象简谱) 是一种轻量级的数据交换格式，JSON因为具有易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率等特性，通常被用在客户端与服务端…"}, {"id": "6857676407082844167", "title": "Flutter Fluro路由库的页面切换动画效果", "desc": "fluro的页面切换函数 Router.navigateTo 支持11种不同效果的切换动画，支持延时设置和自定义切换效果，下面将会对所有的效果展示出来，方便以后可以根据实际需求进行选择。 上一篇文章，已经介绍过Flutter的路由管理和Fluro的使用了，我们已经知道 Rout…"}, {"id": "6854573215335841800", "title": "【开发经验】Flutter组件的事件传递与数据控制", "desc": "写了接近两年的Flutter，发现数据与事件的传递是新手在学习时经常问的问题：有很多初学者错误的在非常早期就引入provider，BLOC等模式去管理数据，过量使用外部框架，造成项目混乱难以组织代码。其主要的原因就是因为忽视了基础的，最简单数据传递方式。 本文会列举基本的事件与…"}, {"id": "6977309304411914276", "title": "Flutter的渲染过程", "desc": "如果要搞清楚flutter的渲染流程，必须要知道flutter中最重要的三棵树 widget three element three 以及render tree。他们之间的关系，以及存在的意义。其实渲"}, {"id": "7001717872930062349", "title": "001 : flutter——初探：开发环境搭建与第一个flutter项目 Hello Flutter", "desc": "Flutter开发环境的搭建，包括： SDK的安装； AndroidStudio开发Flutter的使用； Flutter项目结构介绍； main.dart文件详解； Hello World编写"}, {"id": "6844904154389807118", "title": "Flutter 10天高仿大厂App及小技巧积累总结", "desc": "之前，也写过几篇关于 Flutter 的博文，最近，又花了一些时间学习研究 Flutter，完成了高仿大厂 App 项目 (项目使用的接口都是来自线上真实App抓包而来，可以做到和线上项目相同的效果)，也总结积累了一些小技巧和知识点，所以，在这里记录分享出来，也希望 Flutt…"}, {"id": "7000586567626522632", "title": "Flutter之ListView实现自动滑动到底部", "desc": "这是我参与8月更文挑战的第5天，活动详情查看：8月更文挑战 使用场景 在常见社交App中，发送消息或者接收到他人消息后，消息列表都会自动滑动到底部，不需要我们手动滑动，这样的用户体验好。 思路 Lis"}, {"id": "6860276475821178888", "title": "用前端最舒服的躺姿 \"搞定\" Flutter", "desc": "当下最火的跨端技术，当属于 Flutter ，应该没人质疑吧。一个新的技术的趋势，最明显的特征，就是它一定想把“前浪”拍死在沙滩上。这个前浪，就是\"react Native\",\"weex\"。目前随便在搜索引擎上 搜索\"Flutter reactNative\",就全是这两个技术的…"}, {"id": "6992092049335910436", "title": "flutter SliverAppBar｜8月更文挑战", "desc": "SliverAppBar AppBar 和 SliverAppBar 是Material Design中的 App Bar"}, {"id": "6844903971828531214", "title": "两个半月的业余时间用Flutter做了个app-技术篇", "desc": "1. 路由跳转 2. 循环widget 3. 宽高设置 4. 区分环境 5. flutter封装的组件 6. dio增加配置信息 7. ios证书设置指南 刚开始切换wifi还好使,后来渐渐这招失败次数也多了;意外发现重新连接下手机就可以了,不过最近发现这招也有不行的时候了,虽…"}, {"id": "6898529849590317069", "title": "给 Flutter 上 PR 究竟有多难", "desc": "先给大家做一个凡尔赛自我介绍。 各位好，鄙人是 Flutter Developer，匿名背景，Flutter 开源组织 (GitHub Flutter Team) 成员之一、flutter.cn 及 CFUG 主要协作之一。平常专业对 Flutter 萌新执行劝退，对 Flut…"}, {"id": "7002871701188902942", "title": "运行flutter doctor 一直卡在downloading dart sdk from flutter engine...", "desc": "运行flutterdoctor报错 一直downloading dart sdk from flutter engine..."}, {"id": "6981596013521797150", "title": "flutter中ListView做一个掘金列表", "desc": "本文已参与好文召集令活动，点击查看：后端、大前端双赛道投稿，2万元奖池等你挑战！ 1.ListView的简单介绍 2.ListView的属性值 3.ListTile 属性简介 4.ListView的基"}, {"id": "6990276828329934861", "title": "Flutter 利用SmartRefresher实现下拉刷新和上拉加载功能", "desc": "废话开篇：iOS下的 MJRefresh 作为原生开发的朋友肯定再熟悉不过了，利用UIScrollView 的偏移量来触发相应的加载事件。下面简单记录一下flutter 第三方 SmartRefres"}, {"id": "6989038127268495391", "title": "如何用flutter 封装一个仿iOS提示弹窗", "desc": "开篇废话：不知道大家对flutter 是否熟悉，其实作者也是刚接触一周左右，先说一下个人感受。flutter 它可以理解为最突出的一面就是单独的页面绘制引擎，用dart语言实现多端的统一绘制，同时，"}, {"id": "6993609856976420901", "title": "发现了一个 Flutter json 数据自动转 model 的极简方式  ｜8月更文挑战 ", "desc": "废话开篇：一般在网络数据请求的时候json数据会解析成model，这样方便开发是进行数据传递及赋值，但是平时大家都会在定义完model后通过一些第三方或者作为大牛的你独立开发的json转model工具"}, {"id": "6971554349528907784", "title": "Flutter 抖音点赞效果实现", "desc": "本篇我们将学习抖音点赞效果的实现。在这里可以学习贝塞尔曲线的使用，路径的测量，平移旋转透明度动画的使用"}, {"id": "6995098260402602015", "title": "关于 Flutter 网络图片加载与缓存使用过程总结 ｜8月更文挑战", "desc": "这是我参与8月更文挑战的第4天，活动详情查看：8月更文挑战 废话开篇：文章内容主要是在使用flutter插件过程中的一些总结。 添加插件库： 安装指令： 这里就遇到了一些问题，工程在引入网络缓存图片组"}, {"id": "6844904036194320392", "title": "六年码农生涯的 2019 总结：君子坐而论道，少年起而行之", "desc": "随着 2019 的过去，2020 迎来了第六年的码农生涯，过往如烟挥之即散，所以我习惯通过一些关键词来凝结这一年的收获，而 2019 我总结的关键词是：技术大会、焦虑、耐心、学习、竞争力。 2019 年参加了不少技术大会，对于技术大会可能会有一部分“过来人”感觉不屑一顾，因为大…"}, {"id": "6844904104469233671", "title": "Flutter MVP 封装", "desc": "在 Android 开发中经常会用到一些架构，从 MVC 到 MVVP、MVVM等，这些架构会大大的解耦我们代码的功能模块，让我们的代码在项目中后期更容易扩展和维护。 在Flutter中同样有 MVC、MVP、MVVM等架构。在Android实际开发中，也有把项目从 MVC切换…"}, {"id": "6854573219060383758", "title": "flutter开发之Dart[必读篇]💯", "desc": "任何保存在变量中的都是一个 对象 ， 并且所有的对象都是对应一个 类 的实例。 无论是数字，函数和 null 都是对象。所有对象继承自 Object 类。 尽管 Dart 是强类型的，但是 Dart 可以推断类型，所以类型注释是可选的。 如果要明确说明不需要任何类型， 需要使用…"}, {"id": "6874082988381241357", "title": "Flutter第三方插件汇总（持续更新）", "desc": "Animated Text Kit - flutter文字动效组件. Location - 这个插件 处理Android和iOS上的位置。它还提供位置更改时的回调 permission handler - Flutter的权限插件。此插件提供了一个跨平台（iOS，Android…"}, {"id": "7001001485152550942", "title": "[Flutter翻译]Flutter和Dart中的代码分析和提示功能", "desc": "我们在Flutter最佳实践视频中介绍的最佳实践之一是Flutter代码分析和Linting。我想开始一个小系列的不同的博客文章，在那里我们谈论这些最佳实践中的每一个，今天我们从第一个开始。代码分析和"}, {"id": "6880388303745449991", "title": "Flutter Navigator 2.0 全面解析", "desc": "随着最新版本的的发布，Flutter 1.22 中各个全新的功能映入了我们的眼帘，可以发现本次对路由相关 API 的改动最大，官方的设计文档中表示，由于传统的命令式并没有给开发者一种灵活的方式去直接管理路由栈，甚至觉得已经过时了，一点也不 Flutter。 而 Navigato…"}, {"id": "6844903945580593160", "title": "Flutter城市(省市区)选择器", "desc": "Flutter城市(省市区)选择器address_pickerpub:https://pub.flutter-io.cn/packages/address_pickergithub:https://g"}, {"id": "6968255574374875149", "title": "在 Flutter 中编写自定义小部件(第1部分)ー EllipsizedText", "desc": "声明式用户界面在 Flutter 是相当不错，易于使用，它是非常诱人的使用尽可能。但是很多时候，开发人员只是做得太过火了ーー用声明的方式编写所有东西，即使有时候任务可以以更强制性的方式更有效、更容易理"}, {"id": "6966018158205337636", "title": "Dart 集合操作插件 DartX", "desc": "最近没时间录视频，一直在做项目和技术研究，就翻译和写写文章和大家分享。 关于这篇文章，我只想说一切让我们少写代码，让代码简洁的方式都是好东西！ 也许这个组件 dartx 在某些人眼里不够成熟，但是"}, {"id": "6934628323712892941", "title": "一起源码 之 GetX(一) ：从官方demo开始", "desc": "Flutter是响应式编程架构，在Flutter开发中，经常遇到如何便捷的更新状态和如何方便快捷的传递上下文共享数据。 GetX提供了相应功能。 在上述代码中我们看到，我们使用了一个StatelessWidget，做到了UI更新，非常的神奇。 上面的代码和我们平时动态更新ui的…"}, {"id": "6888549791630884871", "title": "[Flutter翻译]Flutter - 用于快速和高效开发的Visual Studio代码扩展。", "desc": "扩展是一种快速完成工作的方法。很多扩展有助于减少重复性工作，减少模板代码等。还有一些扩展有助于辅助开发过程，甚至有助于更快更高效的开发。 如果你正在寻找键盘快捷键，你可以看看我的这篇文章Flutter--Visual Studio Code Shortcuts for Fast…"}, {"id": "6982715288827461663", "title": "Flutter 如何处理401 未授权的 Dio 拦截器", "desc": "在本文中，我将解释如何使用 flutter dio (4.0.0)进行网络调用，以及如何在您的 flutter 应用程序中使用刷新令牌和访问令牌来处理授权时处理 401。"}, {"id": "6953174333845930020", "title": "Flutter Navigator 2.0 路由管理", "desc": "为什么要用Navigator 2.0 1.0 API 中的 initialRoute 参数，即系统默认的初始页面，在应用运行后就不能再更改了 。 1.0的命令式 Navigator API 只提供给了"}, {"id": "6844904002757328903", "title": "flutter 里面的全局变量（给web开发者）", "desc": "在web里面，js有window对象，只要界面不刷新，是spa应用它就不会被干掉，在里面可以为所欲为，很好理解。 可是在dart里面，可没有这个东西，愁死我了。 可以看出，有InheritedWidget这个玩意。 其他的文章点开都是这么写，要么是状态管理之类的。 而Inher…"}, {"id": "6844904022068068360", "title": "高中生写的Fuchsia OS系统编译的文章，真是厉害了", "desc": "粉色 + 紫色 == Fuchsia (一个新的操作系统)。 欢迎来到Fuchsia中文社区！根据有关信息，Fuchsia使用了 C、C++、Python、GO、Dart、FIDL、Rust 等多种语言，从系统上来看，似乎Google抛弃了Java，可能是 Java 虚拟机运行…"}, {"id": "6844903782824804359", "title": "Flutter早知道 - Named Router可以传参了！", "desc": "在我们使用Flutter开发App时，路由是必须用到的。 Flutter提供了两种方式进行路由，分别是 Navigator.push() (例) 以及 Navigator.pushNamed() (例)。 优点：动态、自由度大，可以以不同的动画方式跳转到新页面，且可以传递参数到…"}, {"id": "6870286147541696525", "title": "为什么 Flutter 选择了 Dart 语言", "desc": "本文翻译自：https://medium.com/hackernoon/why-flutter-uses-dart-dd635a054ebf 很多语言学家认为人们说的自然语言会影响思考本身。这种想法同"}, {"id": "6844903988576403464", "title": "flutter好用的轮子推荐九-flutter可定制的上下滑出抽屉", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6992107931491631118", "title": "用flutter_staggered_grid_view实现分页瀑布流效果【flutter20个实例之四】", "desc": "GridView是一个可滚动的，2D数组控件可以用这个组件实现滚动效果，但是它渲染的高度是一样的。 如果要实现不同高度的滚动瀑布流，就要使用这个插件"}, {"id": "6992107447141793823", "title": "flutter安装遇到报错 Error: The Flutter directory is not a clone of the GitHub project", "desc": "问题是flutter目录下缺少 .git 目录 。解决办法手动生成，已经处理成功 在flutter根目录下手动创建一个 .git 文件夹 再次执行 flutter doctor"}, {"id": "6946160672321306655", "title": "Flutter Boost 混合开发框架初探", "desc": "众所周知，Flutter是一个由C++实现的Flutter Engine和由Dart实现的Framework组成的跨平台技术框架。其中，Flutter Engine负责线程管理、Dart VM状态管理以及Dart代码加载等工作，而Dart代码所实现的Framework则负责上层…"}, {"id": "6958838512963551263", "title": "ReactNative与flutter混编（iOS篇）", "desc": "最近由于公司产品进行优化，需要将之前RN项目中部分相对独立并且消耗性能的模块重写。经过讨论，最后选择了flutter重写该模块进行尝试，以便于后期使用flutter进一步开发公司项目。 当前的demo"}, {"id": "6844903821949288462", "title": "手把手教你在Flutter项目优雅的使用ORM数据库--下篇", "desc": "An orm database Flutter plugin. 之前发了一篇文章《手把手教你在Flutter项目优雅的使用ORM数据库》，很多人咨询使用也提了一些宝贵的意见，说不希望要写lua，这样不够优雅，也增加了学习成本。细想了一下，确实是，对flutter项目开发来讲，最…"}, {"id": "6850037271283007501", "title": "从0开始设计Flutter独立APP | 第三篇: 一劳永逸解决全局BuildContext问题", "desc": "全局BuildContext，几乎是所有Flutter开发者的一个痛点。这个痛点有多痛呢？我们来列举一下场景: 路由跳转、弹窗、媒体查询，全部依赖于BuildContext，如果在Service层（或其他非UI层）做这些操作，必须要逐层传递正确的BuildContext实例。 …"}, {"id": "6844904176355377160", "title": "玩玩Flutter Web —— 实现高德地图插件", "desc": "去年写了一个功能简单的高德地图插件给flutter_deer使用，当时支持了Android与iOS两端。前一阵子有一个issue问是否会支持Flutter Web，当时我有点懵，毕竟js我都不熟。。。不过先记下这个需求，等着有时间了去研究一下。 过了一个月，突然想起了这件事。就…"}, {"id": "6844904114665553933", "title": "[译]Flutter - 使用Provider实现状态管理", "desc": "这篇文章好的的地方在于它不仅讲了Flutter Provider如何管理State的，还讲述了一个Flutter App可以采用哪一种架构。这种架构是基于clean architecture和FilledStacks这两种架构原则的（这里可能理解或者表达有误，请指正）。但是文中…"}, {"id": "6844903943600865294", "title": "flutter Lottie 动画引导页的实现", "desc": "1. 在 pubspec.yaml 中添加依赖库 2. 在文件中添加引用库 3. 根据 API 调用 a. prepareAnimation 的固定参数是动画资源，不可缺少； b. repeatCount 可设置动画重复的频率；RepeatCount.nTimes(n) 重复 …"}, {"id": "6860362396687400968", "title": "实操flutter避免嵌套地狱的5种方法", "desc": "想入坑flutter的同学，都很担心嵌套地狱，但我实际使用flutter差不多1个月，发现如果用的好，是可以避免嵌套地狱的，我总结为5种方法。 flutter官方文档没有“高阶组件”的概念，我这里说的“高阶组件”指的是由基础组件搭建的内置组件，如果纯粹用基础组件搭建UI，那嵌套…"}, {"id": "6917091303679819789", "title": "Flutter裁剪素材组件 - 裁剪所有 Cut Anything", "desc": "考虑到需要支持视频和图片类型，所以不方便直接使用canvas进行素材的渲染。 这里计划采用canvas来绘制裁剪框和遮罩层，待裁剪的素材作为组件放入裁剪区域，并进行适配。 裁剪结果只需要给出裁剪区域（即告诉业务方改裁剪哪块区域），具体裁剪由业务方完成，实现解耦，组件不必理解素材…"}, {"id": "6925294752321519624", "title": "Flutter 调用 iOS 代码实践篇", "desc": "最近准备使用 Flutter 做点小东西，可能会涉及到与原生的交互，参考 使用平台通道编写平台特定的代码 这篇文章实践了一下，记录一下过程和其中遇到的问题。 按照文档，在想要创建工程的文件夹打开命令行，直接使用 flutter create -i swift -a kotlin…"}, {"id": "6948982555521581093", "title": "[Flutter翻译]开始使用Flutter Web之前应该知道的7件事", "desc": "入手Flutter Web，抢占先机! 今天我想告诉大家，在开始使用Flutter之前，我希望自己能知道的几点。URL路由、引导、平台相关编译、运行时检查、响应式UI和存储。 本文中使用的所有例子都是直接从我在GitHub上的Caladrius仓库中取出的（链接如下）。Cala…"}, {"id": "6997383937009909768", "title": "在MAC上安装配置flutter及启动项目踩坑记录", "desc": "需要使用flutter进行简单调试，在安装过程及配置环境中，踩到了许多坑，在此记录一下。 问题及解决方案： 1、按照官网的步骤安装创建项目后，则需要进行插件检测，使用flutt"}, {"id": "6844904167081771016", "title": "Flutter基础从-1到0.1（web小白的自述）", "desc": "这里不讲怎么安装flutter环境等前置操作（就提一些我安装的时候踩的坑），我直接讲自己开发的实际经历（其实也就开发了两到三个星期）。flutter是牛逼，但是生态环境是真的少，目前还是RN比较多人用。 flutter sdk最好不要安装1.17.0，因为我自己安装的时候执行命…"}, {"id": "6844903861203763213", "title": "【Flutter】修改flutter_boost，兼容iOS侧滑的一个解决方案", "desc": "起因：项目中使用了flutter_boost，发现侧滑时直接将flutter的整个VC给pop掉了，demo中flutter代码跳转到新的页面也是使用openPage的方式打开，因此没有这个问题，但是我们不希望每一个新的flutter都使用openPage方式打开（一是每次都新…"}, {"id": "6844903832774770701", "title": "Flutter 本地化l10n（多语言i18n）的支持", "desc": "首先说一下要用到的库主要用到3个库flutter_localizationsintlintl_translation设置App编写本地化类Lib/localizations.dart导出intl_me"}, {"id": "6847902219623202829", "title": "[Flutter翻译]Flutter: 使用Overlay显示浮动widget", "desc": "想象一下：你设计了你的迷人的表格。 你把它发给你的产品经理，他看了看说：\"那我得把整个国家的名字都打进去？你就不能在我输入的时候给我看看建议吗？\"然后你就想：\"嗯，他说得对！\"嗯，他是对的！\" 所以你决定实现一个 \"typeahead\"，一个 \"自动完成 \"或任何你想叫它的东西…"}, {"id": "6844903569326342151", "title": "Flutter 动效实战 —— 视差轮播效果", "desc": "本文通过一个简单的例子来演示如何在 Flutter 中实现基础的动画效果"}, {"id": "6941930977866285069", "title": "你真的了解StatelessWidget和StatefulWidget的区别吗？", "desc": "开发者在进行Flutter开发时，大部分工作基本上少不了与StatelessWidget和StatefulWidget打交道。大家是否真的了解StatelessWidget和StatefulWidget? 我阅读了很多网上的文章，大部分会讲解两者的使用上的区别，一部分文章有解释…"}, {"id": "6958959289490735117", "title": "Flutter BLoC 用户登录 1", "desc": "原文 前言 首先，由于这不是一个基本的教程，我们理所当然地认为这是一个路线的知识，我们也包含了一点点的 validation 与 formoz 包来创建可重用的模型; 这不是本教程的目的，以显示这将如"}, {"id": "6844903956469153799", "title": "Flutter 布局控件篇-->Flex、Expanded", "desc": "Flex 被称为弹性布局，这个在H5中也存在这个概念，H5中也有Flex布局。 所谓的弹性布局，就是允许子组件按照一定的比例来分配父容器的控件，他会自适应屏幕的宽度和高度，不是一个固定的数值。 Flex 组件可以沿着水平或垂直方向排列子组件。 因为Row和Column都继承自F…"}, {"id": "6844903711685230606", "title": "Flutter：手拉手带你极速构建漂亮的跨平台(iOS/Android)移动应用 ✿ 环境搭建", "desc": "上篇文章带大家认识了 Flutter ，想必大家已迫不及待的想练练手，所以要行动起来，现在这篇文章就带您搭建一个 Flutter 运行及开发环境。 文章详情可查阅我的博客 https://h.lishaoy.net ，欢迎大家访问。 想要在本地电脑上运行 Flutter ，需要…"}, {"id": "6844903753733111815", "title": "当Flutter遇到节流与防抖", "desc": "在最近由我为国内某航空开发的某空货管理App中，简单的使用了一下关于节流与防抖的思路对流程进行了优化。 函数节流是指一定时间内js方法只跑一次。比如人的眨眼睛，就是一定时间内眨一次。 而函数防抖是指频繁触发的情况下，只有足够的空闲时间，才执行代码一次。比如生活中的坐公交，就是一…"}, {"id": "6844903764994834440", "title": "手把手教你在Flutter项目优雅的使用ORM数据库", "desc": "Flutter现在开发上最大的槽点可能就是数据库使用了，Flutter现在只提供了sqflite插件，这表明开发者手动写sql代码，建表、建索引、transation、db线程控制等等繁琐的事情必然接踵而至，这种数据库使用方式是最低效的了。例如IOS平台有coredata、re…"}, {"id": "6966518855346683934", "title": "Flutter深入学习：Widget/Element/RenderObject详解", "desc": "Flutter知识体系中，Widget、Element以及RenderObject是比较重要的三个类族；里面的知识点十分多，今天侧重于给大家分享这三棵树是如何构建出来的。"}, {"id": "6844904021312929805", "title": "Flutter开发日记-如何实现一个照片选择器plugin", "desc": "我们使用 photo_manager ，获取相册和资源信息。 在photo_manager源代码基础上进行了业务层的封装。 抹平ios和安卓端调用差异。eg.请求相册权限 我拉了photo_manager的代码下来改（其他同学不需要可以直接新建一个plugin工程引用线上pho…"}, {"id": "6924212226920284173", "title": "【Flutter 3-2】Flutter进阶教程——路由Router和导航Navigator以及传值", "desc": "在移动开发中，我们管页面之间的跳转叫做路由。在iOS中指的就是ViewController之间的跳转，在Android中就是Activity之间的跳转。路由是在移动端开发中非常重要的概念，它负责管理着各个页面之间的跳转还有传值工作，是必不可缺少的控件。 为了方便我们管理跳转页面…"}, {"id": "6899683233760280589", "title": "Flutter&Bedrock框架——页面的局部刷新介绍", "desc": "当我点击上方的按钮以交换毗邻的两个方块的颜色时，通过log可以发现，页面和DoubleColorWidget 都执行了一遍build()方法。 页面简单的话，也许可以忽略，如果页面比较复杂，那么大量的无意义build()将会带来性能的损耗。 也可以为子widget写一个控制器，…"}, {"id": "6844903889829888014", "title": "Flutter关于TextField你能知道的一切", "desc": "Hello，大家好这里是一个苦逼的前Android开发，本来Android干的开开心心，但是受到一些影响转行了😂，不过我就是吃不起饭，找不到工作也不会放弃Android开发！，Flutter真香！！我个人自学Flutter以来受到了诸多大佬文章的启迪，所以也萌生了写一下分享文…"}, {"id": "6876240060787163150", "title": "Flutter 性能优化的利器 —— Tracing", "desc": "Tracing 顾名思义 —— 追踪每段耗时分布。 上面这张图是 Flutter Engine 初始化过程中的一部分流程，非常直观的反应了执行流程中每个阶段的耗时分布。 Tracing 是 Chrome 开发者工具中强大的性能分析工具之一，它能记录 Chrome 所有进程间的各…"}, {"id": "6844904008067317768", "title": "Flutter实战  从头撸一个「孤岛」APP（No.3、书单、搜索框、Dio初探）", "desc": "1. UI界面 使用：软件包提供了一个搜索小部件，用于从数据列表中选择一个选项。提供基于搜索文本的项目过滤。 2. 后台通信 那么我们怎么利用前文所提到的dio 去发送请求呢？既然是一个网络请求，那还是老样子，少不了是要封装的，那本章节的咱们先试试水，初探一下。 未完待续。。。"}, {"id": "6844904050731778055", "title": "Flutter还是Native？这些行业专家给你最权威的解读", "desc": "作者写文章不容易，觉得好看的话，点个赞，关注一下吧，谢谢大家。 我们曾做过多个跨平台项目，接触过多个不同类型的项目，每个项目都遇到各种各样的难题，一开始混合开发，后来性能问题，以及原生平台兼容性，以及一些意想不到的内存泄漏问题等问题不断出现。我们尝试过RN，尝试过Weex，也尝…"}, {"id": "6931906284946096136", "title": "Flutter For Web 踩坑日记", "desc": "前段时间用Flutter For Web撸了一个公司内部使用的项目，本篇文章就把开发过程中碰到的坑点记录一下。 Flutter For Web的开发需要将Flutter SDK升级至任意一个非Stable版本即可，升级完成后需要开启相关配置。 什么都没开启过的同学跟我上图的状态…"}, {"id": "6981725151797149726", "title": "[Flutter翻译]介绍StatsFl，Flutter的FPS监视器 - gskinner博客", "desc": "随着我们开始将Flutter推向更多的平台，如桌面和网络，快速和轻松地测量你的应用程序的性能变得越来越重要。虽然内置的性能监控器可以完成工作，但它在可读性方面还有很多不足之处。 为了帮助缓解这个问题，"}, {"id": "6844903986919637006", "title": "Flutter开发日记——Flutter布局Widget详解（上）", "desc": "由于设置了heightFactor和widthFactor，表示父控件的宽高最大应该是子控件的2.0倍。如果不设置heightFactor和widthFactor，则父控件则无限大，则子控件会在屏幕底部中点 由于设置了heightFactor和widthFactor，表示父控件…"}, {"id": "6991777134108737549", "title": "flutter 自定义验证码输入框实现 verification_code_custom", "desc": "#仓库地址：https://pub.dev/packages/verification_code_custom 码一个验证码的输入框 #实现思路 ##1.选用控件:TextField 这里选择使用4/"}, {"id": "6844904024538382344", "title": "从事编程那些年经历的跨平台开发工具框架演变历史", "desc": "先送上一首邓丽君的老歌《往事只能回味》献给大家。 从事编程那些年经历的跨平台开发工具框架演变历史，你想要的都在这里。Cordova，Xamarin，Titanium，NativeScript，React Native，Electron，uni-app，Flutter 我做了一个…"}, {"id": "6985368503557554207", "title": "给Flutter PopupMenuButton添加箭头和阴影颜色", "desc": "一、原始的PopupMenuButton无箭头，且无法修改阴影颜色， 阴影只能通过elevation去设置 二、如果需要自定义阴影颜色和增加箭头 需要修改RoundedRectangleBorder里"}, {"id": "6965140119485415461", "title": "Flutter框架分析- Parent Data", "desc": "本文介绍了ParentData的作用，分类，和关键流程，并通过实例分析了关键流程的各个步骤，最后介绍了其常用场景。"}, {"id": "6978864449419640845", "title": "flutter官网中使用外部包english_words报错", "desc": "最近在学习flutter，按照官网的教程进行操作，使用外部包(package)english_word时， 1、pubspec文件管理Flutter应用程序的assets(资源，如图片、package"}, {"id": "6935680674049294373", "title": "Flutter 2 正式出道（一）", "desc": "相信不少人昨晚熬夜奋战，观看了Flutter Engage大会，Flutter团队也正式官宣了Flutter 2。从Flutter 1.0正式版到Flutter 2差不多有两年多一些的时间。但在这么短的时间里，Flutter团队在765个贡献者的贡献下共关闭了24541个iss…"}, {"id": "6844904179983450119", "title": "flutter使用dio实现 文件下载并实现进度监听总结", "desc": "—— 执剑天涯，从你的点滴积累开始，所及之处，必精益求精，即是折腾每一天。"}, {"id": "6939040785710972958", "title": "[译] 在 Flutter 项目中使用 Lottie 构建原生 Splash 启动页｜技术点评", "desc": "我们当然可以直接使用 Dart 代码为 Flutter 应用程序添加动画启动效果，但是，Flutter 应用程序在 Android 和 iOS 中以 FlutterActivity 或 FlutterViewController 的形式启动，会让 Flutter 应用程序在实际…"}, {"id": "6844904102330105863", "title": "【Flutter】实战问题集锦（一）", "desc": "这就存在一个问题，在UI布局如果为Text设置Padding的时候会出现中英文文本显示高度不一致的情况。难怪设计师老是找我茬，总算知道问题所在了。 解决办法其实很简单在TextStyle中将height设为1就能可以了。 实际中会发现中文显示会超出实际高度，但这里我们是为了保持…"}, {"id": "6977146422994927630", "title": "Flutter实现蒙版式引导", "desc": "在本篇中会介绍如何实现蒙版式引导效果。在这里将会学到透明页面的实现，页面事件回调的监听，曲线的拟合，以及控件的封装"}, {"id": "6865857292144672782", "title": "Flutter 在阿里淘系的体系化建设和业务实践", "desc": "Flutter 这两年的热度不断提升，行业内投入建设 Flutter 的公司也越来越多，有很明显的上升趋势。 作为一个技术框架，Flutter 该有的功能都有了，但要把它应用到业务中去，还得解决工程问题、复用已有的技术积累、融入业务的工作流等，还要针对特定的业务场景做增强和扩展…"}, {"id": "6844904178863587336", "title": "使用 Flutter 绘制图表（一）柱状图📊", "desc": "本文讲解如何使用 Flutter （Google 开源的 UI 工具包，帮助开发者通过一套代码库高效构建多平台精美应用，支持移动、Web、桌面和嵌入式平台） 绘制一个带有动画效果的柱状图表，最终效果如下图。 要绘制这样的图表普通的 Widget 难以实现，这时就需要 Custo…"}, {"id": "7003141307593932808", "title": "Flutter实现一个边读边处理边发送文件的功能", "desc": "相信大家在开发 flutter 的过程中或多或少都会接触文件处理，读取文件并上传后端就是一个经典的场景。小林在开发这个功能的过程中就遇到了不少麻烦，尤其是大文件的处理，在这里给大家分享一下处理经验。 "}, {"id": "7005516973421363207", "title": "Flutter练习（二）— 两种方式moke本地json 数据", "desc": "前言 今天做仿掘金项目时调不通接口，看了下掘金现在用的接口和之前不一样（又没有接口文档），于是并想着直接moke掘金的数据进行页面的渲染吧"}, {"id": "6994732613772509215", "title": "Flutter TabBar 使用介绍", "desc": "这是我参与8月更文挑战的第10天，活动详情查看：8月更文挑战 Tab关键元素 TabController 这是Tab页的控制器，用于定义Tab标签和内容页的坐标，还可配置标签页的切换动画效果等。 Ta"}, {"id": "7004856160872300557", "title": "flutter工程化踩坑实录", "desc": "一.新建flutter 模块工程 工程结构如图所示： 它包含一个.android工程，一个.ios的工程，这两个工程可以通过在fluttercore上右键打开，可以用于调试dart代码 二.构建默认的"}, {"id": "6844904098643312648", "title": "Flutter 网络请求 Dio 封装", "desc": "在Flutter项目中使用网络请求的方式大致可分为两种，分别是Dart原生的网络请求 HttpClient类以及第三方开源的网络请求库。在Dart社区开源的第三方http请求库中Flutter中文网开源的Dio库人气最高。 下面我们先来比较下这两种网络请求方式，然后再看怎么基于…"}, {"id": "6989498770253676552", "title": "它来了！Flutter 应用内调试工具 UME 开源啦", "desc": "内置 10 个插件，支持自定义插件扩展，由字节跳动 Flutter Infra 团队出品的 Flutter 应用内调试工具平台 UME 开源。"}, {"id": "6995394394966720549", "title": "Flutter应用进行自动化测试", "desc": "开发过程中，我们都会有一个很重要的环节，那就是测试。Flutter开发也一样，我们当我们完成了应用的开发之后，需要对我们的软件进行测试。市面上也有很多可以用于测试的一些自动化的软件。"}, {"id": "6995851776763101221", "title": "Flutter | Slivers 系列", "desc": "可以将多个可滚动组件/普通组件进行统一，并不会有任何的冲突，并且还支持很多炫酷的效果，Slivers 指的是一个系列/族群，以 Sliver 开头的组件都必须配合CustonScrollView使用"}, {"id": "7002300701359472670", "title": "[Flutter翻译]GSoC '21：为Flutter创建一个桌面样本", "desc": "Google Summer of Code（GSoC）是一个由Google赞助的开源的暑期项目。在这个项目中，学生们在一个开源组织的指导下进行项目工作。 这是Dart团队第二次作为指导组织参加GSoC"}, {"id": "6844904022768353294", "title": "Flutter终于有可视化编辑页面了（Hot UI）", "desc": "12月12号的Flutter Interact大会上，Flutter发布了基于IDEA及AS的插件扩展的最新功能Hot UI,也就是可视化编程，你开源快速更改你的组件属性，然后同步在你的设备上运行起来，这个功能等了这么久终于出来了，真是大快人心啊。 打开http://plugi…"}, {"id": "6966737905695850504", "title": "今天聊：如何将 Web 代码渲染成 Flutter", "desc": "早期的 H5 Wap，到借助客户端能力通过离线包、prefetch、JSBridge 提升性能和扩展功能的 Hybrid 方案，再到前几年大火的以 Weex/ReactNative 为代表的的大前端融"}, {"id": "6989793701262262279", "title": "【Flutter 基础】视图布局（一）基本概念", "desc": "Flutter 布局机制的核心就是 widget。在Flutter中，几乎所有东西都是一个 widget。"}, {"id": "7002752142788263967", "title": "[Flutter翻译]用 Very Good CLI 生成 Flutter 插件", "desc": "使用Very Good CLI可以在几秒钟内生成一个新的联合插件 [Very Good CLI](使用Very Good CLI可以在几秒钟内生成一个新的联合插件)是Dart的一个开源命令行接口，它简"}, {"id": "7005105124007739399", "title": "Flutter练习（一）—Form表单校验实现登录功能", "desc": "前言 最近想搞个flutter项目，起初，照着 flutter_wechat抄了一下聊天工具，但是里面有很多细节点不是很了解，对于我这种刚接触flutter的小白，于是想仿掘金做一个博客"}, {"id": "6949901619689586719", "title": "Flutter 中如何优雅的实现多渠道打包（埋点统计系列）", "desc": "🔥🔥🔥 最新适配 Flutter 2.2 版本。这应该是你见过最详细的Flutter 多渠道打包了👏👏👏多渠道打包介绍多渠道打包的主要作用是满足产品的运营需求，统计渠道和活动效果。"}, {"id": "7002130263228547086", "title": "Flutter Dio源码分析(一)--Dio介绍", "desc": "文章系列 Flutter Dio源码分析(一)--Dio介绍 Flutter Dio源码分析(二)--HttpClient、Http、Dio对比 Flutter Dio源码分析(三)--深度剖析 Fl"}, {"id": "6950194810619691038", "title": "使用Flutter Widget开发游戏”是男人就坚持100秒“，一套代码横跨6端~", "desc": "前言之前使用Flutter里的游戏引擎Flare已经开发了一版这个游戏，原文地址：https://juejin.cn/post/6939065092965629983 。在文章里我说要用Widget再"}, {"id": "7000956030364581901", "title": "Flutter深入浅出组件篇---Padding、AnimatedPadding", "desc": "Padding介绍 ​ 在应用程序中有许多widget 时，这个时候画面常常会变得很拥挤，这个时候如果想要在widget之间来保留一些间距，那就用 Padding 为什么使用 Padding 而不使用"}, {"id": "6997701857132970014", "title": "阿波罗JDFlutter实战系列1：从0-1集成组件", "desc": "阿波罗JDFlutter实战系列1：从0-1集成组件 一、概述 本文主要汇总介绍基于Google Flutter封装的JDFlutter，用于组件开发的整体流程，快速准确的定位组件开发的有效信息，为新"}, {"id": "6995749112515657764", "title": "用flutter给图片加个好看的遮罩层【flutter20个实例之六】", "desc": "先看样式 图一是我业务中的样式，图二、三是下方源码展示样式（复制可直接运行，无额外组件引入） 二、讲解 1.结构拆分 我们先看下页面布局结构，首先肯定是有个GridView滚动组件来容纳内"}, {"id": "6844903943919632392", "title": "Flutter 系列文章：Flutter Drawer 控件介绍", "desc": "一个边缘侧滑控件，从Scaffold 的边缘水平滑动，以显示应用程序中的导航链接。 抽屉通常与Scaffold.drawer属性一起使用。抽屉的子项通常是ListView，其第一个子项是DrawerHeader ，它显示有关当前用户的状态信息。其余的抽屉儿童往往与构建ListT…"}, {"id": "6969783492502781982", "title": "flutter跨平台日记一：自家博客网站显示不出图片？搞个客户端吧！", "desc": "就在已经过去的不久前，我兴致勃勃地用 flutter 搭了一个自己的免费博客网站，一切都挺好，但是有个问题却出现了。 那就是跨域限制带来的图片无法访问。 而这个问题，掘金，简书都有自己的解决方案。"}, {"id": "6844903730018517005", "title": "了解Flutter Widget前，你需要先理解这些前置知识", "desc": "本篇梳理了Flutter的一些布局及相关术语，下篇将会进入Flutter Widget Container的详解，Container与本篇中提及的知识点结合比较紧，是充分理解Container的必要基础知识。"}, {"id": "6919669510534332430", "title": "Flutter中数字金额转大写", "desc": "来源https://www.jianshu.com/p/016a6d1a1d79项目中需要将数字金额转换成大写，Flutter没找到相关的工具，所以这里自己写了一个主要思路是将金额*100，然后四舍五"}, {"id": "6844903944649457671", "title": "flutter路由报错", "desc": "把home部分作为一个新的Widget拆出来就可以了。 我们经常会在应用中打开许多页面，当我们返回的时候，它会先后退到上一个打开的页面，然后一层一层后退，没错这就是一个堆栈。而在Flutter中，则是由Navigator来负责管理维护这些页面堆栈。 通常我们我们在构建应用的时候…"}, {"id": "6844903910662995975", "title": "Flutter 底部不规则导航制作", "desc": "1、main.dart文件2、bootom_appBar.dart3、each_view.dart4、效果展示"}, {"id": "6844903600016064525", "title": "Google Fuchsia微内核Zircon先睹为快", "desc": "日前，Google 发布了名为“the book”的 Fuchsia 官方文档。Fuchsia 是 Google 针对 IoT 和移动设备新推出的一种操作系统，它基于名为“Zircon”的全新微内核。"}, {"id": "6844903875321790472", "title": "Flutter的Event Loop、Future及Isolate", "desc": "本文主要介绍Flutter中Event Loop以及如何在Flutter中做parallel processing. Flutter中的Dart VM启动后，那么一个新的Thread就会被创建，并且只会有一个线程，它运行在自己的Isolate中。 MicroTask Queue…"}, {"id": "6844903858473271309", "title": "Flutter学习篇(二)—— Drawer和水纹按压效果", "desc": "笔者的Flutter练手项目代码都放在flutter_demo，有需要的可以star噢。看完觉得有帮助的话，可以动手点个赞👍。 这个效果就是安卓手机常见的按压水纹效果。 就是在Scaffold这个脚手架Widget增加一个drawer属性即可，具体我也不细讲，感兴趣可以看完整…"}, {"id": "6844903956318158862", "title": "Flutter 容器控件篇-->Container", "desc": "调节自身到足够小。 Container 唯一标识符，用于查找更新。 控制child的对齐方式，如果container或者container的父节点尺寸大于child的尺寸，这个属性设置会起作用，有很多种对齐方式。 decoration内部的空白区域，如果有child的话，chi…"}, {"id": "6844903730559582215", "title": "做了2个多月的设计和编码，我梳理了Flutter动态化的方案对比及最佳实现", "desc": "在端上为了提升App的灵活性， 快速解决万变的业务需求，开发者们探索了多种解决方案，如PhoneGap ，React Native ,Weex等，但在Flutter生态还没有好的解决方案。未来闲鱼都会基于Flutter 来跨端开发，如果突破发版周期，在不发版的情况下，完成业务需…"}, {"id": "6895684632944050184", "title": "【Flutter 1-7】Flutter教程Dart语言——变量", "desc": "变量仅存储对象的引用。 这里名为 name 的变量存储了一个 String 类型对象的引用，'Fulade' 则是该对象的值。 name 变量的类型被推断为 String，但是你可以为其指定类型。 如果一个对象的引用不局限于单一的类型，可以将其指定为 Object 或 dyna…"}, {"id": "6844903875908993032", "title": "Flutter: 好看的浮层", "desc": "This is the second part of my tutorial about BottomAppBar and FAB (part one is here). Today we will see how to reveal options when the FAB …"}, {"id": "6968969805042810916", "title": "[Flutter翻译]迈向Flutter Web的旅程第一部分：介绍", "desc": "2021年3月3日，在Flutter Engage活动期间，除了其他重要的公告外，有一个公告让我印象深刻，那就是Flutter Web现在已经稳定了。 作为一个移动开发者，我从来没有想象过自己会创建W"}, {"id": "6847902217031122958", "title": "Flutter 自定义组件实战之Cupertino（iOS）风格的复选框", "desc": "继上一篇Flutter自定义组件的视频短课（视频地址： https://www.bilibili.com/video/BV1ap4y1U7UB/ ）后，我们继续来聊自定义组件。视频中我为大家详解了Cupertino风格的单选框的实现，这次我们就说说Cupertino风格的复选框…"}, {"id": "6844903911564771342", "title": "Flutter中的Widget", "desc": "Widget是Flutter框架里核心类。在Flutter里最核心的是用widgets构建UI界面。widgets描述的UI界面的长相及当前的配置与状态。当widgets的状态改变后，widgets将重构它的描述，框架会与前一个描述做比对，对渲染树从前一个状态到当前的状态做出最…"}, {"id": "6844903875040772104", "title": "初略讲解Flutter的资源管理", "desc": "Flutter APP安装包中会包含代码和资源（assets）两部分。assets是会打包到程序安装包中的，可在运行时访问。常见类型的assets包括静态数据（如json文件）、配置文件以及图标和图片（JPEG、WebP、GIF、动画WebP/GIF、PNG、BMP、WBMP）…"}, {"id": "6844903874252242957", "title": "FutureBuilder源码分析", "desc": "如果没看过的可以跳转：Flutter FutureBuilder 异步UI神器. 首先看 FutureBuilder<T> 类。 也就是说 builder 是一个方法，从而在定义builder的时候就要实现这个方法。 后面用命名构造函数来调用私有构造函数返回一个 snapsho…"}, {"id": "6844903928400723976", "title": "Flutter 交互基础之 LongPressDraggable", "desc": "LongPressDraggable，它是Draggable的子类，使用方式基本和Draggable 一致，它和Draggable区别就是LongPressDraggable的手势识别需要长按才会触发。 hapticFeedbackOnStart 是否应在拖动开始时触发触觉的反…"}, {"id": "6844904082537185294", "title": "Flutter系列（四）——HelloWorld", "desc": "上一篇文章，详细的介绍了Flutter的环境搭建，搭建完成之后，自然迫不及待看看如何创建我们的第一个Demo。 可以看到，可以看见有四个选项。 这里，我们需要创建一个Flutter Application项目。 这里，我们首先可以看到三个比较重要的目录，分别是android，i…"}, {"id": "6894084080560766990", "title": "Flutter性能优化-WebView使用姿势", "desc": "​ Flutter从诞生到现在，已经成为了跨端开发的领跑者，国内外越来越多的公司走上了flutter探索之路，我们智云大前端团队从2018年就已经开始尝试使用flutter开发少量页面，经过一年时间的技术探索和沉淀，2019年前端组发起了智云健康app的全量flutter化（基…"}, {"id": "6988769822167285797", "title": "Flutter适配安卓刘海、水滴屏显示全屏", "desc": "配置Android 找到android/app/src/main/res/values目录,打开styles.xml 将shortEdges放到style标签内。 LaunchTheme指的是启动页的"}, {"id": "7001819221394980900", "title": "Flutter深入浅出组件篇---Align、AnimatedAlign", "desc": "Align介绍 Align 一般是用来确定子控件在父布局中的位置，比如居中、左上等多个对齐方式。 什么情况下使用Align? 当子组件需要设置位于父组件的某个位置时，需要用到Align Align构造"}, {"id": "6993623469497810951", "title": "flutter TextField 输入框组件", "desc": "这是我参与8月更文挑战的第7天，活动详情查看：8月更文挑战 TextField 顾名思义文本输入框，类似于iOS中的UITextField和Android中的EditText和Web中的TextInp"}, {"id": "6984264952320098318", "title": "你可能不知道的「Flutter」知识点，会持续更新...", "desc": "这篇文章是我在草稿箱里面捞起来，说起来有点历史了，先说说我和Flutter的一些“渊源”吧。最早接触Flutter是在2019年初..."}, {"id": "6955826124345573384", "title": "Flutter 动画：构建一个和 Medium 一样的鼓掌动画", "desc": "在这篇文章中，我们将从零开始探索 Flutter 动画。我们将通过在 Flutter 中模仿制作 Medium 的鼓掌动画，学习一些关于动画的核心概念。 正如标题所说，这篇文章将更多地关注动画，而不是"}, {"id": "6991778221821788168", "title": "解决flutter中webview视频流播放Android正常，ios下有声音没图像问题", "desc": "最近用flutter开发一个通过webview进行视频流播放的app，一开始用Android手机测试，一切都没有问题，但在ios上运行时，发现视频只有声音没有图像，于是开始查找各种资料，基本都是这么解"}, {"id": "6988366074752270350", "title": "Mac电脑M1 运行flutter doctor异常处理", "desc": "Flutter开发环境配置亲自踩坑处理：Mac电脑M1 运行Flutter doctor异常处理，Mac 电脑 M1 芯片"}, {"id": "6992845756247834661", "title": "Flutter 项目目录结构设计", "desc": "对于轻中量级的 Flutter 项目，基于项目实际的业务架构进行目录结构设计，可以提升代码的可读性。"}, {"id": "6990616194327773198", "title": "Flutter之改变Widget透明度", "desc": "简介 Opacity：改变child widget的透明度. opacity属性的值的范围在0.0到1.0之间。0代表完全透明，1代表完全不透明。 有时候也可以使用Opacity来实现Widget的隐"}, {"id": "6984671785992060942", "title": "在Flutter项目中开发IOS桌面组件(WidgetExtension)", "desc": "本文主要介绍了在Flutter项目中开发IOS桌面组件(WidgetExtension)的思路，包括共享数据，点击跳转到指定页码以及编辑更新Widget数据。"}, {"id": "6988371755517607966", "title": "Flutter简单实现手写瀑布流 第三篇", "desc": "呦呦呦，这不是瀑布流嘛，几个月没见，还是这么垃。下次就磕一下Paint的内容，按规范自己手写个Widget和Element。"}, {"id": "6844903776227328007", "title": "基于 Flutter 的CityPickers 城市选择器", "desc": "我就在本地简单的去模拟实现了一下. 发现代码逻辑部份比较简单. 所以就简单的封装成一个package. 发布到了Dart Pub上边, 欢迎大家扔板砖~ 最初设计的时候. 想着以Widget的方式, 扔给大家使用. 可是试了几种方式, 使用起来都比较麻烦. 后来借鉴了一下函数式…"}, {"id": "6913514329295814669", "title": "两天时间，用 Flutter 写出一个股票分析客户端", "desc": "用户体验与原生一致：2017 年 Google 发布 Flutter 到今天已经 3 年多了。它与其他跨平台框架最大的不同是可以直接编译成原生应用。这使得应用的体积接近原生应用，性能也几乎与原生应用一致。 缩短开发时间：随着 3 年多的发展，Flutter 生态日趋完善，并已在…"}, {"id": "6943013755315814436", "title": "[Flutter] UI调试小工具——颜色吸管", "desc": "作为客户端开发, 在应用交付之前, 一般都会有 UI 走查这一环节. 一方是对颜色不敏感的开发另一方是对颜色十分敏感的视觉是否经常出现下列对话: 看代码, 不失为一个办法. 但是如果你在其他的分支, 你需要先 stash 本地代码, 再切分支, 看代码, 找颜色... 这个时候…"}, {"id": "6999409058557984782", "title": "[Flutter翻译]Flutter和React Native--一场正面的竞赛？", "desc": "这篇文章的目的不是要比较两者的特点，确定哪一个更好，或陈述一个人的意见。今天，我们只是想看一下一些数字，以确保我们没有与行业脱节，并对React Native和Flutter的使用情况有一个知情的概述"}, {"id": "6990614280458469390", "title": "Flutter 重构：基于 PopupRoute 的极简弹窗", "desc": "这可能是颗粒度最好的 PopupRoute 弹窗封装。 核心： Flutter 需要自定义各式各样的弹窗视图，总是有些场景系统提供的无法满足需求，随使用弹出路由 PopupRoute 进行封装；核心是"}, {"id": "6940649658645495815", "title": "Flutter没有展示思维脑图的控件？用CustomPainter自己画！", "desc": "最近启动了一个计划，要使用Flutter开发一个展示所有Flutter Widgets的APP。前面写了爬虫可以从官网爬取并生成一个包含所有Widgets信息的JSON文件。 然后利用这个数据，我用XMind Zen绘制了一个Flutter Widgets Catalog的思维…"}, {"id": "6844903866706706439", "title": "Flutter完整开发实战详解(十五、全面理解State与Provider)", "desc": "本篇将带你深入理解 Flutter 中 State 的工作机制，并通过对状态管理框架 Provider 解析加深理解，看完这一篇你将更轻松的理解你的 “State 大后宫” 。 我们知道 Flutter 宇宙中万物皆 Widget ，而 Widget 是 @immutable …"}, {"id": "6938687202184396836", "title": "Flutter学习资源汇总", "desc": "Flutter的一些学习资源汇总，官方的中文网，最新出来的，资料齐全，视频、博客、文档、最新咨询都有。"}, {"id": "6844904130645852167", "title": "Flutter VS React Native VS Native，谁才是性能之王", "desc": "多年以前，当我们讨论什么是构建移动应用程序最流行的解决方案时，总会将原生开发和跨平台开发进行对比，也总会有人提出“跨平台应用程序速度慢”的刻板问题。对于跨平台技术及其应用开发，我们不能单一的从性能进行考虑，还应该从开发效率、公司业务场景等多方面进行评估。 总的来说，跨平台开发在…"}, {"id": "6984187054842183716", "title": "Flutter 自定义聊天气泡", "desc": "对话聊天应用程序显示聊天中的消息会在强烈的阴影背景下上升。现代聊天应用程序显示的聊天气泡的斜率取决于气泡在屏幕上的位置。在 flutter 应用中，有时需要使用聊天气泡。然而，将一个库用于一个特别无关"}, {"id": "6912349054265458701", "title": "Flutter 基础组件中文API大全", "desc": "Flutter开发有一段时间了，其间遇到的一个问题就是Flutter基础组件API的查询，官方文档上虽然有英文的解释，但是没有具体调用的示例。网上自己查询又东拼西凑的。 中文注释方面也是没有一家较完全的的。 所以我把这些都整理在这里，方便查阅。 实现基本设计视觉布局结构。支撑整…"}, {"id": "6888968883575717901", "title": "Flutter极致的业务封装📦——各类聊天气泡(一)", "desc": "真的有段时间没写博客了，因为过去的一段时间工作实在是太忙了😅，但忙也有忙的好处，在整个过程中自己的学习也非常快，在忙碌中充实自己，学习一些新的知识。因为刚刚实现了纯Flutter端的IM功能（太TM难了！🤣）在整个实现过程中，把自己对UI方面的一些理解写成blog。今天！给…"}, {"id": "6844903893504114701", "title": "使用Flutter开发一款电影APP", "desc": "一般的，在Flutter中管理路由有两种方式，一种是直接使用Navigator.of(context).push()，这种方式比较适合非常简单的应用，随着应用的不断发展，逻辑越来越多，推荐使用具名路由来管理应用，本文也是使用的这种方式。直接将路由挂在MaterialApp的on…"}, {"id": "6844904099666722823", "title": "Apple为什么不封杀 Flutter，以后会封杀吗", "desc": "Flutter是什么？Flutter是Google推出的一套开源跨平台UI框架，可以快速地在Android、iOS和Web平台上构建高质量的原生用户界面。在过去的两年时间里，Flutter的更新频率是相当的快，也有很多的公司开始使用它来进行跨平台应用开发，可以说，将Flutte…"}, {"id": "6844903969261617165", "title": "闲鱼又一企业级巨著《Flutter in action》开放下载", "desc": "目前，跨平台、高性能的渲染引擎逐渐成为大前端领域的一个热点。作为其中的明星产品， 自带光环的Flutter有很大的机会成为下一代主流的跨端解决方案。 闲鱼是国内最早使用Flutter的团队，也是Flutter业务线渗入最深的团队之一，闲鱼在Flutter商业演进的过程中踩了很多…"}, {"id": "6888119217922113544", "title": "Flutter教程开坑篇，由简至难教你胡辣汤的31种做法...", "desc": "那个年代的FLASH可以做出很多酷炫的UI，是当时首屈一指的“跨端”技术，当然那会儿的还没有“跨端”这个概念，我们都被叫做多媒体设计师....直到FLASH犯下几个致命的错误，又被乔帮主判处死刑... 可以看到Flutter的架构主要分为三层:Framework，Engine和…"}, {"id": "6844903949619691528", "title": "✨ ✨✨强大的flutter弹窗组件来了", "desc": "If your application has problems, please submit your code and effect to Issue. Pull request are also welcome."}, {"id": "6969086909402480647", "title": "flutter 简单实现浏览器H5粒子动画", "desc": "flutter 简单实现浏览器H5粒子动画 我们常见H5炫酷的粒子动画，H5有的，flutter都想拥有。"}, {"id": "6917081883201241101", "title": "Flutter 图片控件适配之路", "desc": "目前大部分应用都会使用大量的图片，图片成为当前应用带宽占比最大的一种资源。在我们接入 Flutter 的时候，发现 Flutter 的图片控件缓存完全由自己管理，同时还没有提供磁盘缓存（1.22版本），所以在性能以及体验上均比较差，所以必须对其进一步优化。 在目前很多 CDN …"}, {"id": "6981198117186043911", "title": "在 Flutter 使用 Sentry 收集错误", "desc": "这个 Sentry 是一个错误收集平台方案，个人项目是免费的。 现在针对 Flutter 已经很成熟，可以同时收集 Dart、Flutter、原生端的错误。 猫哥在企业中是自己搭建了 Sent"}, {"id": "6973572765022584846", "title": "【Flutter】Widget的key是干啥的", "desc": "之前入门一些Flutter应用的时候，总是会遇到一些key，但当时我没太在意，直到今天......."}, {"id": "6955828244016791566", "title": "7 个最能用于构造更整洁的 Flutter 应用的 Dart 小贴士和小技巧", "desc": "Dart 是一门针对客户端进行了优化的编程语言，专门用于快速地构建移动端、桌面端和服务端应用程序。Dart 由 Google 开发，并与 Google 的跨平台框架 Flutter 相互搭配。借助 F"}, {"id": "6976939714125234183", "title": "把掘金贴到Firefox需要几步？", "desc": "咔嚓 👉 biu～ 👉 完成 ✅ 通过手机相机随时随地捕获生活灵感，无缝流转至Mac，继续您的大作"}, {"id": "6998100716879347743", "title": "【Flutter 从 0 到 1】了解 Flutter 的生态", "desc": "这个专栏记录了我是如何从零基础开始学习 Flutter，以及在学习过程中踩过的坑，到最后输出一份属于自己的项目模板的过程。"}, {"id": "6844903784187953165", "title": "[译] Flutter 核心概念详解： Widget、State、Context 及 InheritedWidget", "desc": "本文涵盖了 Flutter 应用中有关 Widget、State、Context 及 InheritedWidget 的重要概念。因为 InheritedWidget 是最重要且文档缺乏的部件之一，故需特别关注。 Flutter 中的 Widget、State 及 Contex…"}, {"id": "6919777925173051405", "title": "为你的Flutter应用接入更完美的监测工具 —— Firebase 🔥", "desc": "又是很久没有写博客的一段时间🤪 ，主要原因是腾出了一些时间复习iOS原生开发的知识 📖 ，巩固自己的技术栈，以及开发基础。同样是年底，也做了一些个人总结和以后的发展规划花费了一些时间。今天终于写了 2021 年的第一篇博客。 在对Flutter的报错统计或者线上用户的行为统…"}, {"id": "6844904036076879880", "title": "老许，你要转Flutter不要？只要你开金口，面试题现在就给你送来", "desc": "Flutter是Google推出的一套开源跨平台UI框架，可以快速地在Android、iOS和Web平台上构建高质量的原生用户界面。在过去的一年里，Flutter的更新频率是相当的快，也有很多的公司开始使用它来进行跨平台应用开发，可以说，将Flutter称为2019年最流行的跨…"}, {"id": "6972473885803577357", "title": "Flutter项目实战：我是从这些方面去提高开发效率的(持续更新)", "desc": "前言 各位大佬，好久不见！ 不摸鱼的程序员不是好程序员，所以今天和大家分享一些提高Flutter开发效率的小技巧。当然，各位大佬肯定也有更好更多的方法，请不吝赐教，多多留言。"}, {"id": "6844903905864712206", "title": "Flutter实现用视频背景的登录页", "desc": "安装video_player,我安装的是最新的版本，请根据你自己的flutter版本去安装对应的版本，安卓可以直接使用虚拟机，IOS需要真机才可以播放。 使用Transform.scale对视频进行缩放，我们想要的效果就是不管视频是什么比率，都可以平铺无拉伸的显示。Center…"}, {"id": "6883102672044441613", "title": "【译】10 款质量最佳最受欢迎的 Flutter 工具库", "desc": "Flutter 是谷歌为实现一套代码编译至移动端、web 端及桌面端应用而推出的一套 UI 开发框架。 Flutter 是基于 Dart 编程语言来做开发的，同时 Flutter 的开放社区——Dart.dev也非常活跃，官方也在社区上提供技术支持，并且已经有大量的第三方工具包…"}, {"id": "6858050410436001800", "title": "Flutter Dojo设计之道——如何打造一个通用的Playground", "desc": "Dojo的设计之初，是为了能够演示Flutter中，多如牛毛的Widget，所以，一个通用的Demo演示界面，就显得非常有必要了，一是可以节省很多通用的代码，二是可以让Demo的演示，专注于Demo本身，而不需要考虑其它的东西。 所以，一个通用Playground，我希望包含下…"}, {"id": "6844903894347153421", "title": "flutter使用charts库定义图表功能", "desc": "不管是 web 端还是移动端，图表都是用来统计数据必不可少的工具，当前 flutter 在移动端的能力也日渐凸显，用 flutter 写一些统计内容就不需要在 iOS 和 Android 分别去实现图表统计，这也避免了一些 iOS 和 Android 在图表显示的差异，让两端的表"}, {"id": "6844904081702518791", "title": "闲鱼基于Flutter技术的架构演进和创新", "desc": "最近一段时间一直学习Flutter，也尝试写一下Demo，但是在用的时候。从一开始惊艳到了，觉得写起来很爽，各种UI效果实现起来很棒，而且由于渲染机制，还让双端甚至多端的UI保持一致以及几乎可以和Native先媲美的用户体验。但是慢慢就又发现了许多新的坑，新的问题，确实也很不爽…"}, {"id": "6844903889502732302", "title": "在Flutter中使用自定义Icon", "desc": "1. 前言 Flutter作为时下最流行的技术之一，凭借其出色的性能以及抹平多端的差异优势，早已引起大批技术爱好者的关注，甚至一些闲鱼，美团，腾讯等大公司均已投入生产使用。虽然目前其生态还没有完全成熟，但身靠背后的Google加持，其发展速度已经足够惊人，可以预见将来对Flut…"}, {"id": "6844904065567031310", "title": "Flutter + Rust 高性能的跨端尝试", "desc": "稍作配置，同一份代码横跨 Android & IOS，相比于 React Native 方案更加高性能。除此之外，得益于 Rust 跨平台加持，Rust 部分的代码可在种种场合复用。 这篇文章旨在记录作者尝试结合 Rust 和 Flutter 的过程，且仅为初步尝试。不会涉及诸…"}, {"id": "6951742146575597575", "title": "[Flutter翻译]Storybook + Flutter = Storybook_Flutter", "desc": "这篇文章是关于推广我的Flutter库，用于展示孤立的小部件和屏幕。就像React世界里的Storybook一样。实际上，它甚至被命名为storybook_flutter。为什么你需要它？首先，为了加"}, {"id": "6920102403643539469", "title": "Flutter 实现钉钉打卡效果", "desc": "整体布局用到了第三方依赖翻转卡片flip_card:^0.4.4https://pub.flutter-io.cn/packages/flip_card音频播放just_audio:^0.6.5htt"}, {"id": "6844903844766285838", "title": "Flutter基础（二）Flutter最新开发环境搭建和Hello World", "desc": "最近的Google I/O大会上，Flutter1.5 开始支持移动、Web、桌面和嵌入式设备，从不温不火的sky一直进化到如今热门的Flutter，Flutter的发展已经超出很多人的想象。我对跨平台技术一直不感冒，虽然也学了一些，但更多是为了工作而不是出于兴趣，因为我认为它…"}, {"id": "6969215801790316551", "title": "Flutter中如何避免多次build", "desc": "本篇内容主要解决了BottomNavigationBar点击切换时多次build的问题。在这里不仅仅介绍了StatefullWidget的生命周期以及它们各自的调用时机，而且还介绍了局部刷新等的实现"}, {"id": "6844903955403653127", "title": "Flutter状态管理之Provider的理解使用", "desc": "Flutter的代码，是响应式/声明式的。以前安卓/iOS的代码，是命令式的。 响应式的代码，基本都需要进行状态管理，也可以理解为数据共享。 界面、数据是变化的，就需要管理的，简单的直接在StatefulWidget进行管理就好，复杂的就是用Provider之类来管理。 . .…"}, {"id": "6854573206779478023", "title": "Flutter搭建开发环境和工具安装配置", "desc": "开始Flutter之前，必须先把开发Flutter所需的环境和工具等配置完成，本章讲下Mac系统下安装配置Flutter环境。 1.Flutter镜像安装，Flutter官方为中国开发者搭建了临时镜像，大家可以不用***就可以快速安装，建议安装到根目录下，方面查找和对应。 fl…"}, {"id": "6875938962238603277", "title": "Flutter 系列之 web 入门", "desc": "本文主要讲如何从一个 web 开发者如何转变到 Flutter 项目，本文不会讲如何安装 Flutter ，如何调试 IDE，如何配置环境，诸如此类的。这些网上一搜一堆，如果有同学有需要可以在网上自取哦～ Flutter 出来之后，大概在 v1.12.13 的这个版本的时候，我…"}, {"id": "6844904152854691853", "title": "Flutter 1.17版本发布，带来多个新特性", "desc": "多年以前，当我们讨论移动跨平台开发时，总会有人提出跨平台应用程序速度慢的刻板问题。现在，使用Flutter自带的渲染引擎我们完全可以开发出媲美原生应用的用户体验，同时一套代码即可同时运行在iOS、Android和浏览器等多个平台，也带来了应用开发效率的提升。 作为目前最流行的移…"}, {"id": "6844903907743924238", "title": "Flutter | 一个关于背景颜色引发的打脸惨案", "desc": "这不正好撞枪口上了么，刚写完 PopupMenuButton 的文章，这个逼必须得装。 那没办法了，只能找弹出页面的源码了。 然而，命运多舛，装逼的道路总是这么坎坷。不然我也不会写这篇文章了。 直接在上次的代码中加入了一个 Theme，并且设置颜色为红色。 这样就可以和整个AP…"}, {"id": "6844904165353734152", "title": "简单易用，FRefresh", "desc": "现在，开发者请集中注意力 🤭。 经过大脑 🧠 的一番飞速旋转，也许我们最终会发现这其中有诈 😧 ！嗯～这不是一个容易的事情啊。 每一个过程都需要我们进行大量的计算和逻辑判断。如果再想随着滑动距离对头部 Widget 作出相应调整，那事情就真是很复杂了。 FRefresh …"}, {"id": "6844903981748060174", "title": "Flutter路由轻量级框架FRouter", "desc": "最近对路由做了封装，写了一个轻量级框架，让你轻松地使用路由，不再那么麻烦。任何页面都可以用，真的是方便快捷。已经传到了github，欢迎朋友们给个star，感谢大家，希望能在帮助大家的同时，麻烦大家给个打赏买口水喝，谢谢大家。 1.是否为首页，如果是，就使用 MaterialA…"}, {"id": "6854573213377101832", "title": "Flutter开发之Flare动画", "desc": "Flutter的动画大体可以分为使用AnimationController 和Animation控制的基础动画、使用 Hero的转场动画和使用CustomPainter 的自定义动画三大类。除此之外，Flutter还支持矢量动画，是一种类似Android开发中的Lottie动画…"}, {"id": "6844903905499807752", "title": "Flutter开发之导航与路由管理", "desc": "所谓路由管理，就是管理页面之间如何跳转，也被称为导航管理。这和原生开发类似，无论是Android还是iOS，导航管理都是通过维护一个路由栈来实现的，路由入栈(push)操作对应打开一个新页面，路由出栈(pop)操作对应页面关闭操作。在Flutter开发中，实现页面跳转需要同时使…"}, {"id": "6988781972650721311", "title": "Flutter实现点击空白区域隐藏软键盘", "desc": "实现思路： 使用GestureDetector将最外层的MaterialApp包裹起来，监听onTap点击事件，使用FocusSocpe相关的api来控制软件的显示和隐藏。当键盘显示的时候，将键盘隐藏"}, {"id": "6844904018804752391", "title": "Flutter Sliver你要的瀑布流小姐姐", "desc": "今天看了Flutter Interact, 全程有个小姐姐翻译（同声翻译，好强力），于是我就边听边完成了这篇文章。 接着上一章Flutter Sliver一生之敌 (ExtendedList)，这章我们将编写一个瀑布流布局，来检验一下我们上一章对Sliver列表源码分析是否正确…"}, {"id": "6893319571881590797", "title": "Flutter Navigator2.0 完全指南与原理解析", "desc": "Flutter 1.22 后，大家可以发现，官方对路由相关 API 的改动很大，设计文档中表示，由于传统的命令式并没有给开发者一种灵活的方式去直接管理路由栈，甚至觉得已经过时了，一点也不 Flutter。 而 Navigator 2.0 引入了一套全新的声明式 API，全新的实…"}, {"id": "6844904166389710855", "title": "Flutter Toast、弹出提示、轻提示", "desc": "主流的三种APP反馈形式: toast、snackbar以及dialog. toast通常用于提示用户一些不那么重要的信息, 会弹出并显示文字一段时间. 时间一到就会消失. 相较于snackbar和dialog, 对屏幕的入侵较少. 身为开发人员怎能不掌握toast的基本使用?…"}, {"id": "6961980951924572196", "title": "企业级Flutter项目-走出第一步", "desc": "大多数时候你必须为你的应用程序的技术债务付款。如果你在 MVP 之后没有良好的体系结构，那么现在是时候停下来，重构一下，让你的未来变得更加容易。事实上，在没有架构的情况下编写较小的应用程序更容易---"}, {"id": "6844903882154328071", "title": "用Flutter构建漂亮的UI界面 - 基础组件篇", "desc": "1. 前言 Flutter作为时下最流行的技术之一，凭借其出色的性能以及抹平多端的差异优势，早已引起大批技术爱好者的关注，甚至一些闲鱼，美团，腾讯等大公司均已开始使用。虽然目前其生态还没有完全成熟，但身靠背后的Google加持，其发展速度已经足够惊人，可以预见将来对Flutte…"}, {"id": "6967184602297286686", "title": "Flutter 零成本搭建个人小博客", "desc": "给自己搭一个零成本的博客网页 基础薄弱！静不下心！技术浅尝辄止！五年多的经验却还如新手一般只会搬砖！！！ 既然**写博客**能沉淀自己的知识体系，成为面试的加分项。 那还不快去做"}, {"id": "6988002903701061646", "title": "Flutter 在音视频研发中的不断探索", "desc": "Flutter 简述 Flutter 是一个跨平台框架，以往的做法是将音频、视频和网络这些模块都下沉到 C++ 层或者 ARM 层，在其上封装成一个音视频的 SDK"}, {"id": "6988336881834393637", "title": "flutter改变图标和名称、启动图", "desc": "一、生成图标 打开图标工厂 上传我们的图标。 点击开始生成。 然后就可以预览ios和android： 我们点击下载所有图标： 下载解压后有ios和android文件夹： 二、修改ios图标 在你创建的"}, {"id": "6844903743566299149", "title": "使用VSCode开发Flutter", "desc": "还没有安装flutter的小伙伴可以先看Flutter Install或者Google，这里就不贴了。 命令面板 Quick fix或者快速修复(没错支持中文输入=。=) 或者使用快捷键cmd + . 很多时候VSCode开发体验都蛮好的，但是调试控制台真的难用，还不支持搜索。…"}, {"id": "6844903764357283853", "title": "Flutter之Navigator解读", "desc": "路由是对屏幕界面的抽象。例如，'/home'将带您进入首页, '/login'将您带到登陆页。 简单说每一个界面都对应相应的 Page. 我们可以把Router看成一个班级. 每一个学生都是注册在这个班级上的的人, 通过老师点名, 叫出这个学生, 或者通过老师通过不点名, 通过…"}, {"id": "6898690760892710926", "title": "在 Flutter 中使用iconfont...附一键生成Dart类的技巧", "desc": "可我们在实际开发中还是会要使用到自定义图标，那如何在Flutter项目中使用自定义的IconFont，这就是本文要教给大家的。 前往 https://www.iconfont.cn/ 挑选图标，并添加至购物车（莫慌，是免费的）。 请注意这个结构，不要写错了。通常情况下，在pub…"}, {"id": "6995104326104383524", "title": "Flutter&Dart-异步编程Future、Stream极速入门", "desc": "Dart是单线程模型，我们写的代码都运行在同一个线程中。如果做了耗时操作，会使应用程序阻塞。Dart中使用Future和Stream编写异步任务。 Future Future是一个不会马上完成的计算过"}, {"id": "6964309586832523272", "title": "移动端小白，30天掌握Flutter双端插件开发-上(Flutter篇)", "desc": "从来没接触移动端原生开发，花费30天时间完成flutter双端sdk插件开发。学习最快的方法还是要有个好老师，简单的问题，自己琢磨3天不如老师1句话。"}, {"id": "6980980330073161765", "title": "flutter版本管理工具fvm及GUI工具Sidekick", "desc": "fvm在本地下载安装多个版本flutter sdk；为项目指定flutter版本，并可快速切换版本。 Sidekick：一个主要为Flutter fvm提供GUI的应用程序。"}, {"id": "6998380471201742884", "title": "[Flutter翻译]宣布Flutter对可折叠设备的支持", "desc": "Flutter是当今发展最快的框架之一，当然也是构建惊人应用的强大工具包，这也是我们增加可折叠支持的原因。 今天早些时候，微软在谷歌的Flutter Engage上宣布了Flutter的可折叠支持预览"}, {"id": "7000960078259486757", "title": "Flutter SingleChildScrollView 滚动页面", "desc": "我尝试使用 SingleChildScrollView 创建滚动页面但出现错误，我该如何解决问题？结果想要的是固定的appbar 和一个可滚动的表单。错误：RenderFlex 子项具有非零 flex"}, {"id": "6992109307063959560", "title": "Flutter发布package问题总结", "desc": "首次是需要google账号进行绑定验证的，点击链接成功后，如果报这个错，证明是需要开启终端代理命令（需要翻墙）每个软件操作不一样。 记得在项目的根目录下的终端操作哈。"}, {"id": "6844904103999455240", "title": "趁手利器，FSuper", "desc": "现在，我需要向你隆重介绍，可能即将在你的 Flutter 编程之路中，令你爱不释手的 趁手利器 之一 —— F...Super。 FSuper 是 【阿里巴巴-飞猪-FliggyMobile 技术团队】 开发的 FWidgets 系列组件之一。是由 Github 2.8k+ s…"}, {"id": "6857696363241537544", "title": "[Flutter翻译]宣布 Flutter 1.20", "desc": "我们对Flutter的持续愿景是提供一个便携式工具包，用于构建令人惊叹的体验，无论您在哪里都可以在屏幕上绘制像素。每一次发布，我们都会继续努力，确保Flutter对我们支持的每个平台都是快速、美观、高效和开放的。在今天发布到我们稳定频道的Flutter 1.20中，Flutte…"}, {"id": "6948361208659443749", "title": "kraken上手体验", "desc": "阿里的kraken声称能直接用flutter渲染web形态的应用，不仅能实现动态化而且性能也非常不俗，这相当于一个小型浏览器了，于是立马体验了一下。 按官网的介绍运行先是一坨匪夷所思的报错: 什么error input '... chai:^2.9'，折腾半天才发现npm必须得…"}, {"id": "6952069411096248350", "title": "Flutter - flutter_bloc状态管理", "desc": "继上一篇写了Flutter - GetX状态管理，会发现其实Flutter的状态管理的框架还是比较多的，用的比较多的有flutter_bloc、MobX、GetX等，今天我就来谈一谈我学习Flutte"}, {"id": "6844904001679392782", "title": "Flutter填坑指南，总有一个遇得到，  持续填坑中...", "desc": "先打开任务管理器，结束掉所有dart.exe即可，如果依然提示就打开你的flutter安装文件夹，找到\\bin\\cache中的lockfile文件删除。之后重启项目。 // 如果返回false，则可能不会重新构建报头，即使委托的实例发生了变化。"}, {"id": "6866639191694917640", "title": "Flutter上线项目实战——即时通讯Protobuf", "desc": "Protobuf是google 的一种数据交换的格式，它独立于语言，独立于平台。 json优点就是较XML格式更加小巧，传输效率较xml提高了很多，可读性还不错。 xml优点就是可读性强，解析方便。 protobuf优点就是传输效率快（据说在数据量大的时候，传输效率比xml和j…"}, {"id": "6967981960559853599", "title": "Flutter Canvas学习之绘图篇", "desc": "上一篇讲了Flutter `CustomPaint` 组件相关的基本概念，这篇围绕`canvas`基础绘制能力展开。"}, {"id": "6844903731855785992", "title": "Hummingbird: 在Web上运行Flutter应用", "desc": "今天，我们在 Flutter Live 上宣布了一个消息：我们正尝试在 Web 上运行 Flutter。 这篇文章描述了我们应对挑战的方式，以及该技术的当前状态。 在文末，我们附上了协同工作和嵌入等问题的答案。 让我们快速回顾一下 Flutter 的架构。 Flutter 是一…"}, {"id": "6854573212404858893", "title": "[Flutter翻译]Flutter without Flutter", "desc": "这是一个实验。让我们在不使用Flutter框架的情况下，创建在移动设备上显示一些东西所需的最小代码。 Flutter是一个高级GUI框架，它使用dart:ui（Skia引擎的一个抽象）来实际显示一些东西，并与这些东西所显示的平台进行交互。当然，我们自己也可以直接使用这个低级别的…"}, {"id": "6974682961203429389", "title": "Flutter和Native邂逅的三板斧", "desc": "本文主要是关于Flutter和Native的通信和交互方面的知识，主要涉及消息传递、原生View嵌套和外接纹理这三个方面，本文分为以下几个点： Platform Channel PlatformVie"}, {"id": "6844904148966572039", "title": "Flutter监听路由返回", "desc": "我们通常有这样一个需求：点击修改用户信息需要跳转页面，修改完成以后返回之前的页面我们需要重新获取新的数据刷新修改后的数据。于是就找方法去实现，目前我用过的就是以下三种方法。 可以在返回页面的时候在pop中传入参数Navigator.pop(context, '数据传参')，.t…"}, {"id": "6922625442323103758", "title": "Flutter内存泄露检查工具实践", "desc": "随着Flutter技术在团队内部的不断普及，一些性能和内存泄露问题开始暴露出来，我们智云Flutter基建团队开始了Flutter性能监测工具和Flutter内存泄露检查工具的开发。 本文主要介绍一下基于上面的方案的Flutter内存泄露检查工具技术方案的具体实现。 Flutt…"}, {"id": "6844903744056852487", "title": "桌面上的Flutter：Electron又多了个对手", "desc": "从本质上看，Flutter 是一个独立的二进制可执行文件。它不仅改变了移动设备的玩法，在桌面设备上也同样不可小觑。一次编写，可在 Android、iOS、Windows、Mac 和 Linux 上进行原生部署，并通过 AngularDart 将所有的业务逻辑共享到 Web 上，…"}, {"id": "6844904162950397959", "title": "【淘系技术】AliFlutter 八场直播精华内容+PPT整理", "desc": "惊喜四月，「淘系技术」重磅推出 AliFlutter 系列直播，整整八场，线上直播观看人高达 2w+。 王康，花名正物，淘宝终端技术部无线技术专家，Flutter Member(kangwang1988)，AspectD作者。 负责了Flutter在闲鱼中的混合开发体系建设与业…"}, {"id": "6997199525383241759", "title": "[Flutter翻译]在安卓系统上，Flutter应用程序缺少的是原生的外观和感觉", "desc": "当我和其他人谈论Flutter框架时，我总是争论说，它实际上并不像原生的，如果开发者关心这样的东西，他们仍然需要投入额外的工作。 这里有一些你应该使用的调整，让你的Flutter应用看起来更像原生的。"}, {"id": "6844903843860316174", "title": "Flutter+Mobx实战，写一个App应用", "desc": "目前增加了路由跳转，可以带参数跳转页面。下拉可以自定义刷新样式，IOS点击Status Bar回到顶部，目前已经测试过。状态管理器使用Mobx,我自己觉得对于Redux使用起来会复杂一点，下面是提供的预览GIF图,卡顿现象是因为屏幕录制的帧率有点低。 项目地址：https://…"}, {"id": "6981338421029666847", "title": "Flutter x GraphQL", "desc": "Flutter x GraphQL DUBV 遵循 7月1日 - 4分钟阅读 作为一个前端开发员，我已经在很多使用REST API的项目上工作了很长时间，在与REST交互时，我注意到了一些低效率的问题"}, {"id": "6869291513508659213", "title": "[Flutter翻译]InAppWebView：Flutter中WebViews的真正威力", "desc": "什么是flutter_inappwebview ? 这是一个Flutter插件，它允许你将WebView小部件整合到你的Flutter应用中，使用无头WebViews，或者使用In-App浏览器。 与其他所有WebView插件相比，它的功能很丰富：有很多事件、方法和选项来控制W…"}, {"id": "6844903897912311821", "title": "Flutter | 求求你们了，切换 Widget 的时候加上动画吧", "desc": "如果是的话，那么今天所说的 Widget，绝对符合你的口味。 AnimatedSwitcher 了解一下。 其中必要参数就是一个 duration，那既然知道如何使用了，那就开撸。 其实这个例子在实际开发当中经常存在，肯定要删除一些东西的嘛，然后选中了以后批量删除。 因为前面官…"}, {"id": "6844904090636386311", "title": "Flutter 验证码输入框", "desc": "在 Flutter 做的一个项目中，要用到如下的一个验证码输入框，这个在原生应用中非常常见，但在Flutter 中资料比较少，就自己简单写个。 分析一下，这个需要自定义一个输入框，输入框自动获焦，并且输入一位密码的时候，输入框就填入一位，且光标自动移到下一位框中，这就需要单独绘…"}, {"id": "6951956959742394405", "title": "Flutter 实现 element UI 之路（Button 按钮）", "desc": "Flutter 实现element UI按钮，鼠标事件，移入移除的选中效果。简单按钮，圆形按钮，按钮组"}, {"id": "6844903791972581390", "title": "Flutter 三种方式实现页面切换后保持原页面状态", "desc": "在Flutter应用中，导航栏切换页面后默认情况下会丢失原页面状态，即每次进入页面时都会重新初始化状态，如果在initState中打印日志，会发现每次进入时都会输出，显然这样增加了额外的开销，并且带来了不好的用户体验。 在通过flutter create生成的项目模板中,我们先…"}, {"id": "6883291361206861831", "title": "[译]Flutter 性能优化：图片占位符、预缓存和禁用导航过渡动画", "desc": "感知性能是指用户感觉 app 有多快（译者注：感性性能是用户视角，而不是指标）。这篇文章介绍了三个提高感知性能的策略：图片占位符、图片预缓存和禁用导航过渡动画。 用户等待图片加载，在图片最终显示出来时，布局可能会跳来跳去。通过在布局中使用图片占位符，你可以避免这种跳动，来确保更…"}, {"id": "6844903917587791886", "title": "Flutter实现马蜂窝小红书自适应高度轮播图", "desc": "NotificationListener可以监听PageView的改变，比如滑动的距离，页面索引等，目前只使用的了索引。里面的一些方法挺有用的。 使用AnimatedContainer组件保证切换以后会有流程的过渡效果,表现的会平滑一些。 如果返回的只有图片信息没有宽高数据可以…"}, {"id": "6940478904071094279", "title": "Flutter启动流程分析", "desc": "函数中有用到Dart语法中的级联运算符(..),代表的含义是WidgetsFlutterBinding.ensureInitialized()生成的对象分别调用了scheduleAttachRootWidget和scheduleWarmUpFrame这两个方法。 概括起来很简单…"}, {"id": "6844903890291261447", "title": "Flutter 动画曲线Curves 效果一览", "desc": "网页上显示的GIF速度会有点慢，介意的话可以下载下来本地查看：链接:https://pan.baidu.com/s/1c7AACHhAmvhysl2k2XgQFA提取码:ppbe||||:------"}, {"id": "6919684792124440584", "title": "Flutter | 异常处理", "desc": "Dart 提供了 Exception 和 Error 类型，以及一些子类型。也可以自定义异常类型。此外，Dart 程序可以抛出任何 非null 对象，不仅限 Exception 和 Error 对象。 无论是否 try 住异常，finally 都会执行。如果 try 住异常，会…"}, {"id": "6847902217035317255", "title": "Flutter 应用开发之Bloc模式", "desc": "所谓响应式编程，指的是一种面向数据流和变化传播的编程范式。使用响应式编程范式，意味着可以在编程语言中更加方便地表达静态或动态的数据流，而相关的计算模型会自动将变化的值通过数据流进行传播。 响应式编程最初的目的是为了简化交互式用户界面的创建和实时系统动画的绘制而提出来的一种方法，…"}, {"id": "6844904104699887630", "title": "字节跳动为什么选用Flutter：并非跨平台终极之选，但它可能是不一样的未来", "desc": "Flutter 大火背后的原因是什么？为什么越来越多的企业和开发者会选择使用 Flutter？Flutter 会成为跨平台开发的终极之选吗？我认为“ Flutter 并非跨平台终极之选，最初选择 Flutter，不是因为它一定会成为未来终极之选，而是因为它有可能成为不一样的未来…"}, {"id": "6977275033320161293", "title": "flutter插件fluwx ios配置调起微信", "desc": "甲、安装Fluwx插件 乙、配置apple-app-site-association文件 丙、配置Associated Domains（苹果网站） 位置在乙项第1、2、3、4、5节点处 Capabil"}, {"id": "6979387546904199199", "title": "拒绝魔改，flutter多渠道构建版本", "desc": "用flutter开发项目一段时间后，发现切换环境实在太麻烦，每次都手动修改环境，随着参数的越来越多， 很容易就忘记修改哪个参数，导致环境切换出问题，所以就想到了android以前做是可以做多渠道的，所"}, {"id": "6844903935065620487", "title": "Flutter | 撸一个高大上的星级评分控件", "desc": "因为工作中有一个需求是展示游戏评分，而Flutter系统并没有提供现成的评分控件，网上也能找到相关的自定义评分控件的文章，总是有点不符合我自己的需求，所以就有接下来的这篇文章了。国际惯例，上图 首先我们实现一个静态的评分效果。 至此，一个静态的评分展示控件就已经写完了。看下效果"}, {"id": "6844903937968078856", "title": "Flutter 样式基础之 MediaQuery", "desc": "MediaQuery 用于查询解析给定数据的媒体信息（例如，window宽高/横竖屏/像素密度比 等信息）官方提供这个组件让开发者可以获取想要的数据。它主要用于不同尺寸大小设备的适配。 1. MediaQuery.removePadding 2. MediaQuery.remo…"}, {"id": "6974720155859288078", "title": "Flutter训练营(零)-浅谈Flutter框架原理及其生态圈", "desc": "近日，谷歌Fuchsia和华为鸿蒙都已出世，跨平台高性能的渲染引擎逐渐成为移动端、大前端领域的一个热点，作为其中的明星框架Flutter，经过近几年来的迅速发展，有极大的可能成为下一代跨端终端解决方案"}, {"id": "6844904112199303181", "title": "[译]Flutter是如何绘制文本的", "desc": "原文在这里。能看原文的推荐看原文。 这不是一次愉悦的旅行，但是我会带你领略Flutter文本绘制里从未有过的精彩。第一眼看起来非常的简单。只不过是几个字符，对不？但是越往深挖越有难度。 下载初始代码。 作为一个Flutter开发者，你应该已经对Flutter的stateless…"}, {"id": "6844903903834669070", "title": "Flutter | 超详细教你如何自定义一个 Stepper 步骤组件", "desc": "emmmm，没自己做过就说简单，确实有点「云程序员」。 那既然如此，没办法，只能把他拎到河边烤了，哦不对，只能自己写一个了。 首先我们应该了解一下原生 Stepper 是个什么样子，并且分析一下源码。 剩下没说的就可以见名知意，关于 onStepTapped 这种就是点击的回调…"}, {"id": "6844903943647002637", "title": "Flutter新版本 Web App 尝鲜", "desc": "随着Flutter的快速发展，现在Flutter生态也日渐壮大，偶然打开Flutter的官方文档发现已经支持了Web开发，于是便前去探探路，给大家分享点干货。 首先我们这里以默认Flutter创建的项目为例，也就是New一个Flutter Project,有的同学会发现目录下并…"}, {"id": "6844903985132879885", "title": "flutter-读写二进制文件到设备", "desc": "保存二进制文件到设备硬盘上。 我们保存一个图片到手机本地上，并读取展示图片到app上。 分别是字符串和二进制，而写入的时候分同步和异步，所以写入的有4种。\\ 新建一个http连接，使用dartimport 'dart:io';自带的哦。 读取比较简单一点，获取bytes，然后渲…"}, {"id": "6918693294083932173", "title": "Flutter 中的交织动画", "desc": "交织动画由一个动画序列或重叠的动画组成，而要制作交织的动画，我们需要使用多个或多组动画对象。我们应该使用同一个 AnimationController 控制所有动画，每个动画对象都应该指定某个点或锚点在一段时间内的运动，并且对于要执行的动画的每个属性，我们都应该创建一个补间（T…"}, {"id": "6844903853482049543", "title": "Dart基础知识", "desc": "这一篇我们不讲Flutter 的知识，来讲一讲Dart 的基础知识。 emmmm….很明显，现在知道 Dart 语言的人大部分都是因为 Flutter，这与它的目标成为下一代结构化Web开发语言好像有点偏差。(不过在Flutter 1.5 发布的时候发布了 Flutter fo…"}, {"id": "6844904047103705102", "title": "手把手教你用Spuernova生成flutter代码", "desc": "周末得空，逛了dribbble，发现了好多好看的设计，馋的不行。相信每个前端都有这样一个梦想：能把设计稿直接生成代码该多好，忽而想起了Flutter Interact上大佬们演示的插件，感觉有得搞🙃 生成的代码在安装完成后可以直接运行。用VSCode打开刚刚生成的项目，flu…"}, {"id": "6844904200019640327", "title": "[Flutter翻译]使用Flutter编写Flutter开发者的新工具", "desc": "今天，我们发布了新版本的Dart DevTools，这是我们的一套工具，用于Dart和Flutter代码的调试和性能分析。它已经使用Flutter从头开始重建。这个版本增加了几项改进，比如性能和内存页面的更新，以及一个全新的网络页面。 很多人都知道Flutter的热重载功能，它…"}, {"id": "6844903940820041735", "title": "Flutter 插件 webview_flutter 使用指北", "desc": "目前主流有两个插件，flutter_webview_plugin 和 webview_flutter。 flutter_webview_plugin 是一个第三方插件，文档会比较全，star 数也最多。但是使用过程中有两个主要问题："}, {"id": "6844903838273503240", "title": "Flutter 基础布局Widgets之Expanded详解", "desc": "Expanded是用于展开Row，Column或Flex的子child的Widget。 使用Expanded可以使[Row]，[Column]或[Flex]的子项扩展以填充主轴中的可用空间（例如，水平用[Row]或垂直用[Column]）。 如果扩展了多个子节点，则根据[fle…"}, {"id": "6975533515689426974", "title": "Provider 原理介绍与实战（上）", "desc": "这是我参与更文挑战的第18天，活动详情查看： 更文挑战 背景 整个Flutter都是Widget组成，单独页面数据共享很好解决，通过构造函数和回调就能解决；但是如果多页面数据同步就会异常的麻烦； Fl"}, {"id": "6844903655007584269", "title": "[译] 挑战 Flutter 之 YouTube（画中画）", "desc": "挑战 Flutter 尝试在 Flutter 中重新创建特定应用的 UI 或设计。 此挑战将尝试实现 YouTube 的主页和视频详情页（视频实际播放的页面），包括动画。 这个挑战将比我以前的挑战稍微复杂一些，但结果却更好。 让我们创建一个名为 youtube_flutter …"}, {"id": "6844903855528869901", "title": "Flutter 数据监听Widget 自动更新你的UI", "desc": "这里每一个圆形都是同一个数据。 Flutter为我们考虑到了。 看名字我们也就能看出来这个控件是干嘛的，监听值的构造器。 使内容 和 ValueListenable 保持一致的控件。 给定ValueListenable 一个泛型和一个构建器，它从泛型的具体值构建小部件，这个类将…"}, {"id": "6844903996923052040", "title": "flutter - sqlite数据库小白入门，看不懂打死我", "desc": "可以先看官方sqlite教程，我觉得写的还不错, 比其他中文版的文章教程好多了(压根看不下去)。（除了我这篇） 2. 新建表 默认开始是没有表的，如果直接新建表那么需要自己搞一个表那么需要判断表是否存在。 但是sqflite有onCreate钩子，首次创建数据库时，就会执行。 …"}, {"id": "6844903625823617031", "title": "小前端眼里的大前端：GMTC 2018 参会小结", "desc": "刚刚在北京落下帷幕的 GMTC 2018 应该算是近期国内前端圈子里最高规格（门票最贵）的活动之一了。那么这两天的分享有什么值得一提的地方呢？下面是一份小小的总结。 我们周三晚上从厦门出发飞抵北京，在鸟巢边上的会场里参与了周四和周五为期两天的密集技术分享。除了第一天早上所有参会…"}, {"id": "6980254952883290126", "title": "flutter: 相邻控件阴影被遮盖", "desc": "今天才发现flutter的阴影有被遮盖的问题! 比如有如下的几个控件, 第2个带有阴影: 可以看到第2个矩形的阴影可以展示在第1个矩形上但底部却被第3个矩形遮盖了, 所以阴影的绘制是在单个控件整体绘制"}, {"id": "6953527586181873677", "title": "[Flutter翻译]Flutter WebView JavaScript通信 - InAppWebView 5。", "desc": "在这个深入的教程中，我将解释如何使用我的flutter_inappwebview插件（在写这篇文章的时候，最新的版本是5.3.2）从Dart（Flutter WebView）到JavaScript进行"}, {"id": "6973925669612814344", "title": "在Flutter中创建对话框", "desc": "你可以在几乎所有的移动应用程序上看到对话框。大多数应用程序使用对话框来发出警告或促进中间操作，这是应用程序主要流程的一个替代方案。"}, {"id": "6844904057304252430", "title": "Flutter - 疫情实况，加油武汉", "desc": "分为个人防护、知识百科。"}, {"id": "6960491797034303518", "title": "Navigator2.0到底是怎么回事，它是如何支持deepLikn的？", "desc": "那么在Navigator 2.0里面，Flutter是如何解决这个问题的呢？可能最简单的方式就是把 _history 从私有的变成公有的。但是这样话 _history 又会变的很危险，我认为这对上线的"}, {"id": "6968786815448776718", "title": "Flutter  简单实现手写瀑布流  第一篇", "desc": "前前后后研究了近半个月，身为准大三渣渣，感觉要没时间可以花了。= =||。主要是看到别人实现了这样的效果，自己也想尝试一下，之后才发现差距，但迈步一步总比原地踏步好。"}, {"id": "6844904197599526925", "title": "在webview_flutter中封装JSBridge", "desc": "最近的业务需要使用Flutter开发App应用了，其中打算将部分已有的Web应用进行复用，因此需要研究一下Flutter的Hybird应用开发。本文主要整理在Flutter中使用Webview的教程和遇见的一些问题，最后给出了关于Flutter中对JSBridge的简单封装。 …"}, {"id": "6865846819554623502", "title": "Flutter Candies 糖果小助手", "desc": "去年的情人节，没有过节的孩纸，悄悄地创建了一个Flutter群。记得开始就我和死鱼(另一个UWP开发)2个人,慢慢地，慢慢地人渐渐多了，认识了越来越多喜欢写bug的小伙伴。 也许我们中的一些人不是专业出身，有的养过鱼的，有的工地干过，也有的卖东西，但是我们也许都有一个特点，就是…"}, {"id": "6892556367261859848", "title": "一个前端工程师用Flutter开发以太坊钱包", "desc": "这篇博客不涉及以太坊知识的科普，单纯记录了我在用Flutter开发钱包的过程中遇到的各种小细节问题。如果有开发钱包的各位同学，可以拿去直接用，不需要授权。 如图所示，有一个圆形容器CircleAvatar，设置背景色backgroundColor=Colors.white，ra…"}, {"id": "6844904094625169415", "title": "Flutter & Koa2 实战全面升级，试问谁不孤独？（小万字长文）", "desc": "是这样的，咱们把之前持续更新的移动到lsolated_island_app 这个分支。想要翻看的可以自行clone 《独》所有的开发现在master 分支。可能旧的文档地址找不到的情况，这个我后续更新一下 我觉得自己开发个小 app 也挺好玩的。 希望多多鼓励很关注，有不恰当的…"}, {"id": "6898662351957196808", "title": "【Flutter】实战问题集锦（三）", "desc": "开发中意外发现中文字符后面如果跟随英文字符会出现字符显示不全的问题，而且这个问题还不是ellipsis所导致。突然觉得这是个天坑，看了issue发现目前这个问题还没有正式修复。 开始自定义使用正则方式在中文字符后面添加\\u{200B}不可见的0长度字符，但在一些特殊场景下也会导…"}, {"id": "6898775045099749384", "title": "Flutter 全局颜色和全局字体样式", "desc": "经常和UI打交道的前端开发者都明白，任何产品的视觉语言都需要统一。而这无外乎2个规范：字体规范 &#x26; 色彩规范。字体样式一般需要5~10种，色彩规范就很多了，但一般至少也需要5种以上，比如： 当我们在网上找flutter全局样式的时候，一般都会告诉你MaterialAp…"}, {"id": "6981603770425671717", "title": "搭建一个摄像头应用程序 应用程序内部摄像头", "desc": "在许多应用程序中，我们需要用户通过点击图片上传图片。为此，我们可以使用设备的默认摄像头应用程序，但如果我们需要集成一个应用程序内的摄像头呢？"}, {"id": "6997315875590111262", "title": "Flutter空安全相关操作符", "desc": "这是我参与8月更文挑战的第17天，活动详情查看：8月更文挑战 健全的空安全已在 Dart 2.12 和 Flutter 2 中可用 需知 当你选择使用空安全时，代码中的类型将默认是非空的，意味着 除非"}, {"id": "6855129007889842190", "title": "Flutter IM方案探索——MQTT", "desc": "主角二号（MQTT）:MQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议），是一种基于发布/订阅（publish/subscribe）模式的\"轻量级\"通讯协议，该协议构建于TCP/IP协议上，由IBM在1999年发布。MQTT…"}, {"id": "6844904176162439182", "title": "Flutter Analysis Options", "desc": "无规则不成方圆，不管什么平台，写什么代码。每一种编程语言都有着自己的语法标准，代码规范，并且在不断更新改进，达到优化语言性能的目的。 俗话说代码不规范，维护两行泪,说的就是这个道理。我们应该遵守它们，避免代码看起来乱七八糟。 说是Flutter的规范，其实是Dart语言的代码规…"}, {"id": "6844903987322306568", "title": "flutter好用的轮子推荐八-flutter一个超酷动画的底部tab栏", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6996962460934602783", "title": "轻松完成 Flutter 网页解析功能 ｜8月更文挑战", "desc": "这是我参与8月更文挑战的第7天，活动详情查看：8月更文挑战 废话开篇：原生WebView是展示网页（无论是本地还是网页）的控件，当进行混合开发的时候其实也是用WebView 进行展示，但是网页内容的加"}, {"id": "6963810747285504036", "title": "Google I/O 2021 发布 Flutter 2.2", "desc": "在今天的 Google i/o 大会上，我们发布了 Flutter 2.2，这是我们最新发布的开源工具包，可以为单一平台上的任何设备构建漂亮的应用程序。Flutter 2.2 是 Flutter 目前"}, {"id": "6915288032237060104", "title": "技术杂谈 | Flutter 的性能分析、工程架构与细节处理", "desc": "无论如何，原生的运行效率毋庸置疑是最高的，但是从工程工作量的角度来对比的话，特别是快速试错和业务扩展阶段，Flutter 是目前为止比较推荐的利器。 任何跨端的技术都是基于一码多端的思维，解决工程效率的问题，之前很多的跨端技术，例如 React Native 等都是基于web的…"}, {"id": "6974558251811602468", "title": "用 Flutter 实现动画 Motion Design", "desc": "这篇文章讲的是如何在你的动画中加入运动特性、运动球、重力、贝塞尔曲线、多边形、不规则曲线，如果你正在找这方面资料，这个源码你可要好好消化了。这都是动画中的基础，前端就是要酷炫，开始吧。 最佳体"}, {"id": "6844903939268149262", "title": "Flutter布局——Flex、FittedBox、Stack、Container布局教程【超详细】", "desc": "Flutter中的Flex布局和Web的CSS中的Flex布局类似。 在Flutter 中用于控制Flex布局的有Row，Column，Expanded，Flexible，Spacer，Flex这些控件。 子元素children的排列方式由这两个属性决定textDirectio…"}, {"id": "6899122672177774606", "title": "时长一个月的flutter项目工作心得", "desc": "本篇文章主要是记录小编第一次开发flutter项目中的一些个人心得记录。 小编是前端开发出身，对flutter也是初步认识，所以内容会比较基础，当作是我跟大家唠唠嗑。 如果小伙伴们想学学flutter，建议是先把dart语法了解一遍，小编在一些flutetr群里经常看到有的小伙…"}, {"id": "6844903955927924750", "title": "当 Flutter 遇见 Web，会有怎样的秘密 ？", "desc": "腾讯 OED 的客户端团队在 2019 年上半年 ，就已经把 Flutter 落地到 企鹅辅导 的业务中了。今年我们又一起去上海参加了 2019 年谷歌开发者大会，遇见了更多的 Flutter 开发者，这次体验比第一次去的时候感觉熟悉了很多。希望未来有机会把他们邀请来深圳，进行…"}, {"id": "6963809968717824037", "title": "Flutter 如何获取设备的唯一码", "desc": "获取设备 id 是每一个 APP 都应该去做的，比如你访问唯一用户统计就需要。一般来说，制作一个移动应用程序是一个极其令人难以置信和测试的任务。有许多可用的框架，这些框架为创建移动应用程序提供了极好的"}, {"id": "6999537282730426382", "title": "发布Flutter packages到pub.dev", "desc": "1. 创建packages flutter create --template=package flutter_easy_use_tools 2. 实现功能 lib下创建src文件夹，src文件下的文"}, {"id": "6875983145745776654", "title": "惊天秘密！如何在 Flutter 项目中实现操作引导", "desc": "俗话说得好，产品有三宝，弹窗浮层加引导。 上图截图自我司 App 晓黑板中的口算模块，相信每个 App 开发在工作中都碰到这种场景，为了避免用户对新功能产生困惑，会对一些功能加一些引导操作。在原生开发中，例如 Android 开发中，我们可以使用 NewbieGuide 等开源…"}, {"id": "6844904073481682952", "title": "Flutter应用集成极光推送", "desc": "在移动应用开发中，消息推送可以说是一项非常重要的功能，它能够起到提醒或者唤醒用户的作用，同时也是产品运营人员更高效地实现运营目标的重要手段，比如将新上架一个商品或者最新的一条新闻推送给用户。 事实上，消息推送是一个横跨业务服务器、第三方推送服务托管厂商、操作系统长连接推送服务、…"}, {"id": "6960598647314743333", "title": "[Flutter]从Obx一个报错初探其原理", "desc": "本文简单分析了日渐流行的Get框架的Obx原理，以及发生错误时的处理方法。 ============================="}, {"id": "6844903794656952328", "title": "Flutter 什么功能都有的Image", "desc": "Pub上面关于Image的插件挺多的，但是为啥我还是想要做一个呢，主要是感觉pub上的不够自定义化。 extended_image跟官方的用法一模一样，但是增加了许多实用的功能。"}, {"id": "6844903648305102861", "title": "Flutter 底部导航——BottomNavigationBar | 掘金技术征文", "desc": "Google推出flutter这样一个新的高性能跨平台（Android，ios）快速开发框架之后，被业界许多开发者所关注。我在接触了flutter之后发现这个确实是一个好东西，好东西当然要和大家分享，对吧。 今天要跟大家分享的是底部导航功能的实现。我认为flutter的就是在传…"}, {"id": "6961966683573452808", "title": "Flutter 如何判断 Widget 位于前台", "desc": "在项目中我们的 banner第三方控件实现的。 当页面切换到后台时 banner 仍自动播放，但我们用 AnimationController 实现的动画却停止了，于是我开始寻找原因。"}, {"id": "6844903975230111758", "title": "flutter不完全指南系列--（二）dart详解（前端角度的两万字解析）", "desc": "这部分内容量很多，文字加代码接近三万了。所以强烈建议收藏保存。 这篇文章涵盖了flutter会遇到的绝大部分关于dart的知识点，由于dart是参考了大量java和c++及部分JavaScript语言，所以纯前端学起来刚开始还是有一点吃力的，这篇文章就是为了解决这个痛点，站在一…"}, {"id": "6892719484697346055", "title": "如何高效上手Flutter开发？", "desc": "Flutter是考察一名工程师技术广度及对新技术敏感度的重要依据，Flutter作为目前最火热的混合开发框架之一，受到越来越多开发者追捧。在本篇文章中将向大家分享作为初学者该如何高效快速的学习Flutter？ Flutter 是由Google 开发的一个跨平台UI开发工具包；叫…"}, {"id": "6981336189580083214", "title": "阿里技术分享：闲鱼IM基于Flutter的移动端跨端改造实践", "desc": "本文总结了阿里闲鱼技术团队使用Flutter在对闲鱼IM进行移动端跨端改造过程中的技术实践等，文中对比了传统Native与现在大热的Flutter跨端方案在一些主要技术实现上的差异，以及针对Flutt"}, {"id": "6987407622303383560", "title": "Flutter渲染之绘制启动及layout", "desc": "RenderObject 之前讲过三棵树的绘制，它们最后都是为RenderObject树服务的，RenderObject是确定节点位置、大小，处理子父位置关系的类，当构建过程完成之后，就生成了一棵Re"}, {"id": "6844904080179986440", "title": "Flutter Web 跨域问题解决方案", "desc": "很明显，浏览器给限制跨域了。怎么解决呢？ 然后在Web页面打开对应的开关即可。 配置Nginx，配置太多这里就不说了，网上很多。 很早前我还看到过这个，不知干啥的，现在用到了，才知道原来如此，虽然star不多，但却是Dart官方的，用于本地调试接口使用，还是很靠谱的。 当然了，…"}, {"id": "6932665578897440782", "title": "Flutter 使用 Riverpod+Retrofit 构建MVVM开发模式", "desc": "最近，在使用 Flutter 做一个图片分享的应用，自己创建出一套 Flutter 版的 MVVM 开发模式，觉得还挺好用，所以在此分享出来。 在介绍这套 MVVM 开发模式之前，我们首先需要了解 riverpod 和 retrofit 是什么。 下面我们来分别了解他们是什么。…"}, {"id": "6979522822632669192", "title": "【Flutter 基础】 视图布局（二）List Widget", "desc": "列表的使用都有对应的场景，只要熟悉了列表的渲染特征后，碰见相应的场景自然就不用纠结到底使用哪一个更合适了。"}, {"id": "6931667326714527757", "title": "Flutter与原生H5混合开发", "desc": "Dart不仅可以与原生JS互调，也可以拿来写原生网页应用。"}, {"id": "6844903808867254279", "title": "Flutter：TabController简单协调TabBar与TabView", "desc": "运行之后查看结果，每次切换 tab 控制台都会打印相应的值，但有个问题，点击选项卡切换时打印了2次，似乎执行了两遍，滑动切换时正常输出一次。 以上解决了点击执行两次代码块的问题，但试试滑动的时候，indexIsChanging一直都是false，也就是说滑动切换无法执行我们的代…"}, {"id": "6844903901406167053", "title": "Flutter之英雄联盟", "desc": "要说我最喜欢的游戏，那必须是英雄联盟。太多太多的回忆！今天我们一起使用Flutter来开发一款英雄资料卡。上图是APP的部分截图，APP的整体设计看上去还是很清爽的。首页使用Tab展示英雄的六大分类，点击英雄的条目会跳转到英雄的详情页面。 我们先从项目的目录结构讲起吧，对APP…"}, {"id": "6844904139038654472", "title": "从零开始的 Flutter 动画", "desc": "动画本质是在一段时间内不断改变屏幕上显示的内容，从而产生视觉暂留现象。 「补间动画」：补间动画是一种预先定义物体运动的起点和终点，物体的运动方式，运动时间，时间曲线，然后从起点过渡到终点的动画。 「基于物理的动画」：基于物理的动画是一种模拟现实世界运动的动画，通过建立运动模型来…"}, {"id": "6844903796334673933", "title": "[译] Flutter 异步编程：Future、Isolate 和事件循环", "desc": "本文介绍了 Flutter 中不同的代码执行模式：单线程、多线程、同步和异步。 我最近收到了一些与 Future、async、await、Isolate 以及并行执行概念相关的一些问题。 由于这些问题，一些人在处理代码的执行顺序方面遇到了麻烦。 我认为通过一篇文章来解释异步、并…"}, {"id": "6844904033514192909", "title": "Flutter Provider使用指南", "desc": "使用一种语言编写各种应用的时候，横亘在开发者面前的第一个问题就是如何进行状态管理。在前端领域，我们习惯使用框架或者各种辅助库来进行状态管理。例如，开发者经常使用react自带的context,或者mobx/redux等工具来管理组件间状态。在大热的跨端框架flutter中，笔者…"}, {"id": "6997576068097900557", "title": "根据页面需求想思路之CustomScrollView", "desc": "关于Flutter中CustomScrollView+SliverAppBar+SliverList 需求背景： 图1为正常状态下，滑动状态下为图二。 对于iOS或者android项目开发老哥来说这种"}, {"id": "6960155886664810533", "title": "最近大受关注的Flutter-环境搭建", "desc": "Flutter正式发布在17年，可以说是非常新的一个技术，但是由于Google投入了大量人力，以及双端高度一致的表现，使得该项技术关注度迅速超过React Native。"}, {"id": "6844903941365301255", "title": "Flutter1.9升级体验总结（帮大家填坑了）", "desc": "谢谢合作。 今天是一年一度的中秋节，首先在这里祝愿大家中秋团员，阖家欢乐。希望大家吃好喝好玩好。感谢大家这么长时间一来对本公众号的大力支持。同时也非常感谢提出宝贵意见的小伙伴们。认识这么多可爱的小伙伴真的我的荣幸。节日之余，除了吃好喝好之外，别忘了停止学习，来这里有最新干货等着…"}, {"id": "6973822604280856606", "title": "【Flutter 基础】脱离 AS Ide 使用命令行创建虚拟机", "desc": "执行命令后，默认创建的虚拟机是全 API 支持，但是屏幕宽度为 320px 且 dpr 为 1。当然也可以创建自定义的硬件配置。"}, {"id": "6844903860591394830", "title": "[译] 在 flutter 中高效地使用 BLoC 模式", "desc": "朋友们，我有好长一段时间没有写过 flutter 相关的文章了。在完成了两篇关于 BLoC 模式的文章之后，我花了一些时间，分析了社区对于这种模式的使用情况，在回答了一些关于 BLoC 模式实现的一些问题之后，我发现大家对于 BLoC 模式存在很多疑惑。所以，我构思了一套方法，…"}, {"id": "6844903998579818503", "title": "Flutter实战  从头撸一个「孤岛」APP（No.1、项目初始化、屏幕适配）", "desc": "《Flutter 实战》作者杜文（网名wendux） ：这本书很适合新手初步了解Flutter的各个部件。这将不同于我们的HTML Flutter 咸鱼团队技术博客阿里巴巴咸鱼团队：众所周知，闲鱼等APP就是国内应用Flutter技术开发的，他们对Flutter这个大家庭的贡献…"}, {"id": "6846687590779715598", "title": "Flutter(Flare) 最有趣用户交互动画没有之一", "desc": "2019年12月12日，Flutter 在 Flutter Interact '19 上发布了如何使用 Rive 和 Flutter 制作动态可交互的动画经验分享，我看了之后，觉得非常有趣，因此，写了3个小 demo，把它写成文章记录分享给大家。 此篇文章到此结束，下篇文章计划…"}, {"id": "6966740670375526437", "title": "[Flutter翻译]使用Flutter WEB实现桌面GUI（第一部分：介绍）", "desc": "网站链接：https://www.fluttergui.com/ Github Repo: https://github.com/achreffaidi/FlutterGUI 为什么是FlutterG"}, {"id": "6981649315328426014", "title": "【Flutter 基础】Hello World", "desc": "在说完 环境及配置 和 开发环境/创建虚拟机 之后那我们就可以来看看它的真正面目，是时候揭开它的神秘面纱了。"}, {"id": "6978464337933369380", "title": "Flutter图片组件Image", "desc": "“这是我参与更文挑战的第9天，活动详情查看： 更文挑战” 1.图片 Image 2.image.network是远程网络图片 3设置圆形容器Container的两种方式 4设置圆形图片第1种方式 5."}, {"id": "6974363413942108197", "title": "Flutter训练营(四)-渲染机制", "desc": "前面提过，目前大前端的趋势是移动端（阿里圆心），在移动互联网的浪潮下，我们开发的应用要想取胜，开发效率和使用体验可以说是同等重要。但是，使用原生的方式来开发 App，就要求我们必须针对 iOS"}, {"id": "6993258467888726030", "title": "在flutter中使用hooks的简单使用", "desc": "flutter中的生命周期管理相对没有Vue、react这种前端框架强，只有init、dispose、didUpdateWidget,没有类似vue中watch这种，或是react hooks。"}, {"id": "6992431860747862047", "title": "Flutter Dart中的日期相关api", "desc": "这是我参与8月更文挑战的第 1 天，活动详情查看：8月更文挑战。为应掘金的八月更文挑战， 在日常的项目开发中经常会遇到时间戳的"}, {"id": "6995473750300819492", "title": "flutter中的rebuild一些理解", "desc": "在flutter中滥用statefulWidget将导致不可知的一些问题，其中一个问题就是会导致不停的rebuild整个页面，设想一下，你要是只需要点击一个按钮，更新一个按钮，却在点击这个按钮的时候，"}, {"id": "6968655659373953061", "title": "Flutter自定义View的实现", "desc": "在这一篇中我们将介绍自定义view的实现。包括通用的步骤，画笔的相关属性介绍与使用，画布的常用方法及使用，以及Path的绘制，测量以及结合起来实现动画效果"}, {"id": "6844903846334955534", "title": "Flutter 状态管理之 Provider", "desc": "OK，那废话不多说。下面具体看看在 Flutter 中如何使用 Provider 做状态管理。 我将通过一个小 demo 来展示如何使用 Provider 做状态管理。分别使用单个 Provider 和 MultiProvider 实现（第一种将两个数据放在同一个类中，第二种是…"}, {"id": "6844904110597259272", "title": "Flutter 多渠道打包实践", "desc": "不同的环境对应的要求也不一样，这样就要求根据需求打出不同的包以便于开发、测试方便的使用。 由于国内存在着有众多的应用市场，在不同的应用市场可能有不同的统计需求，为此开发人员需要为每个应用市场发布一个安装包，在安装包中添加不同的标识，以此区分各个渠道，方便统计app在应用市场的各…"}, {"id": "6967134993348821023", "title": "Flutter自定义Banner的实现", "desc": "Flutter中banner也是常用的组件。本文主要介绍了banner组件的封装思路以及实现方法，并提供了完整的实现代码与效果截图"}, {"id": "6920792575087476750", "title": "Flutter静态代码检查", "desc": "一般情况下, 在工程文件下配有分析脚本的情况下, 可以直接使用flutter analyze命令进行静态检查, 这和开发工具Android Studio自带的检查插件的效果是一样的, 最终结果会显示在AS下方的Dart Analysis Tab下. 检查器会根据项目根目录下的分…"}, {"id": "6876685354385014798", "title": "100 行代码实现 Flutter 自定义 TabBar", "desc": "Flutter 的确很强大，但美中不足的是生态还有待完善，没有出现像前端的 Antd 或 Element 那样全能的基础 UI 库。 由此带来的直接影响是开发效率提不上去，需要耗费大量的时间精力在基础组件的封装上。 官方的 TabBar 不满足需求，又没有合适的轮子，只好自己造…"}, {"id": "6992958874747666462", "title": "Flutter 彩边圆角 Container 的实现", "desc": "Flutter 实现彩边圆角 Container，在 Flutter 中，如果想要为 `Container` 的四个边分别设置不同的颜色，方法很简单；但是实现圆角彩边就比较困难了。"}, {"id": "6967993169115873316", "title": "Flutter Web初尝试以及一些问题解决", "desc": "Flutter 2在3月份发布以后，开放了移动端、Web端、桌面端的发布能力，之前一直使用Flutter开发移动应用，没有敢用Flutter做Web项目，近期有时间自己调研了一下，也遇到了一些问题，在"}, {"id": "6844904179014582286", "title": "Flutter状态管理：Provider4 入门教程（一）", "desc": "很久之前，在我们的QQ群里有位朋友一直想让我出个[Provider](https://github.com/rrousselGit/provider)教程，但是我一直没有允诺。因为我觉得如果写入门级的教程，已经有官方文档了，已经有人写了，如果要深入一些呢，我又不会。但最近不太一…"}, {"id": "6980333687879516174", "title": "flutter 库/package: enhance_stepper 封装记录", "desc": "enhance_stepper Package 介绍 使用package可以创建可轻松共享的模块化代码。一个最小的package包括 一个pubspec.yaml文件：声明了package的名称、版本"}, {"id": "6997238068012908557", "title": "flutter常见问题【3】：Flutter 使用Android studio 打包生成apk", "desc": "1.打开 terminal 命令行模式 如果左下侧没有 terminal 命令行窗口，可以在项目根目录上右击=》Open in Terminal 2.执行以下某一条命令（我用的第一个条） F:\\APP"}, {"id": "6982889287813431332", "title": "Flutter app启动flutter端源码分析", "desc": "原由：最近想明白，app是怎么启动flutter端的第一个路由？ 相关类： materialApp、widgetsApp, navigator类。 一般情况下：我们在main() 方法直接返回 mat"}, {"id": "6844903687496663047", "title": "Flutter从入门到寄几玩儿", "desc": "毕竟前端出生，找(qi)到(shi)了(bing)感(mei)觉(ru)后(men)，其实就是一个UI框架，只不过他的引擎基于C++,底层基于Skia渲染，DartVM虚拟机以及Text and so on... 2018年6月21日Google发布Flutter首个relea…"}, {"id": "6958606009149423647", "title": "Flutter 添加APP启动 Story View", "desc": "原文 前言 在当前的快速市场中，一些社交渠道已经全面爆发，成为各个年龄段聚会的热门话题。漫步在数字环境中，你会注意到新的网络媒体应用程序，比如 Instagram，在过去的一年里热得像火一样。 当你听"}, {"id": "6844904163495657485", "title": "flutter InheritedWidget机制", "desc": "InheritedWidget继承自ProxyWidget，在ProxyWidget中createElement调用的时候，创建了一个InheritedElement对象。 InheritedElement继承自ProxyElement，ProxyElement继承自Compo…"}, {"id": "6919283892680097799", "title": "Flutter-pubspec.yaml配置文件", "desc": "pubspec.yaml是flutter框架项目中的核心配置文件。类似于node的package.json配置文件。配置项包括：name：此处是在import：package引包的时候，的名字假如na"}, {"id": "6860026035098877959", "title": "[Web翻译]Flutter和AngularDart之间的代码共享", "desc": "作为一个开发者，我们认为维护多个代码库做同一件事是很痛苦的，这就是为什么Jetbrains提出了Kotlin Multiplatform项目，Google提出了Flutter，Facebook提出了React Native。Kotlin Multiplatform旨在解决业务逻…"}, {"id": "6844903764470530056", "title": "为前端工程师准备的 Flutter 入门指南", "desc": "如果你恰好是一名前端工程师，且对 Flutter 抱有兴趣，那么真的是太好了，这篇文章完全就是为你准备的。写惯了 HTML、CSS 与 JavaScript,要不要来是试试 Dart？"}, {"id": "6850418107899609095", "title": "Flutter 新闻客户端 - 15 strapi 数据建模 graphql 条件查询排序", "desc": "本节目标portainer容器管理工具数据库设计过程数据库设计目标、规范、习惯graphql条件查询、排序flutter代码实现视频https://www.bilibili.com/video/BV1"}, {"id": "6855129005813989383", "title": "移动端跨平台技术之下的变与不变", "desc": "加上 Web 标准更迭慢，新特性兼容性差（如Push API过去许多年了，仍然无法放心使用），Web 基础能力难以满足 Native 端的需求。因此，在传统 Web App 的基础上，展开了更多的探索： PWA 标准化似乎走不通，即便走通了能够真正放心用起来可能也是数年之后了。…"}, {"id": "6922617065060712456", "title": "Flutter 基础控件 Button Widget", "desc": "BackButton是一个material风格的返回按钮，本身是一个IconButton，点击时默认执行Navigator.maybePop即如果路由栈有上一页则返回到上一页。 CloseButton是一个material风格的关闭按钮，本身是一个IconButton，点击时默…"}, {"id": "6844903810595291149", "title": "两分钟带你快速掌握Flutter的路由与导航", "desc": "要在Flutter中切换屏幕，我们可以访问路由以绘制新的Widget。 管理多个屏幕有两个核心概念和类：Route 和 Navigator。Route是应用程序的“屏幕”或“页面”的抽象（可以认为是Activity）， Navigator是管理Route的Widget。Navi…"}, {"id": "6844904058688405518", "title": "Flutter自制插件之r_router无需context路由插件", "desc": "1.开始使用. 4. 无需context的展示对话框方法"}, {"id": "6844904009728425998", "title": "Flutter UI架构启动过程-11", "desc": "上一篇文章中我们介绍了android系统调用Engine:Run方法的过程，最终调用到FlutterUI层中的main()函数，FlutterUI框架开始初始化，FlutterEngine初始化过程中已经把Window对象初始化完成并且和Engine相关连，FlutterEng…"}, {"id": "6844903908943331336", "title": "【Flutter】主题、国际化", "desc": "结合之前介绍的Redux全局状态管理框架一起使用效果最佳。 Flutter官方提供Material和Cupertino视觉组件分别高保真Android和iOS系统UI。这里使用Material Components来介绍主题的使用和切换功能。 MaterialApp支持对the…"}, {"id": "6844903637165031432", "title": "CNoder 应用迁移记 | 掘金技术征文", "desc": "converter 参数相当于在使用 react+redux 技术栈里面的使用 connect 函数包裹组件时的 mapAction 和 mapState 参数,将返回值作为 builder 参数对应的回调函数第二个入参 vm."}, {"id": "6844903956234141704", "title": "Flutter 容器控件篇-->MaterialApp", "desc": "Flutter 控件中的 MaterialApp 作为App的顶层主页入口，一般是用来配置主题、语言、页面跳转等... 初始路由，当用户进入程序时，自动打开对应的路由。"}, {"id": "6922427177925345293", "title": "Flutter学习笔记—接口抽象、隐式接口、泛型", "desc": "接口抽象注：省略函数体即可定义抽象方法，不需要加关键字；抽象类不能实例化对象，但是它可以被继承，继承之后，子类要全部实现抽象方法。隐式接口泛型"}, {"id": "6844903917453590536", "title": "Flutter中InheritedWidget的原理", "desc": "Flutter的响应式开发与React类似，数据都是自顶向下的。 假设有祖先组点A，中间经过结点B, C，然后到结点D，D需要从A中获取数据f，那按照自顶向下数据流转，f需要依次传递给B及C，最后才到C。这样开发极为不灵活，成本也比较高。所有Flutter需要有跨结点(只能是祖…"}, {"id": "6844903882422747150", "title": "【译】Bringing Flutter to the Web", "desc": "用来构建漂亮、定制化应用的跨平台的 UI 框架 Flutter 现在已经支持 Web 开发了。我们很高兴推出了一个预览版的 SDK 可以让开发者直接使用 Flutter UI 和业务逻辑代码构建 web 应用在浏览器中运行起来。 自从去年第一个公测版本推出之后，开发者使用 Fl…"}, {"id": "6844904049486069774", "title": "搭建 Flutter 环境", "desc": "今年计划学习的新技术栈一个是 vue.js，等 3.0版本发布以后准备尝试一下。 另一个就是flutter。今天看了一下官方文档，按照文档在本机上把环境跑起来了。这里记录一下搭建环境的步骤，也算是学习过程的一个记录。 这篇文章基本按照 https://flutter.dev/d…"}, {"id": "6844904194797764622", "title": "Flutter 新闻客户端 - 01 需求分析、使用蓝湖标注工具、项目目录构建", "desc": "B站视频https://www.bilibili.com/video/BV1J7411N7KF本节目标需求分析使用蓝湖平台作为标注工具构建Flutter项目1需求说明1.1样式表颜色组件图标1.2整理"}, {"id": "6844903670622978061", "title": "Fluwx:让在Flutter中使用微信SDK成为可能", "desc": "之前有了解的小伙伴可能已经看过Fluwx的一篇文章，不过那个时候Fluwx还是不太成熟。现在Fluwx的主体功能已经过成了。如果你正在或想开发一个Flutter项目但苦于无法使用微信分享、登录，那么Fluwx可能正是你所要寻找的。 尽管Fluwx旨在减化工作量，但在使用Fluw…"}, {"id": "6896752276409417735", "title": "flutter 学习 插件（1）", "desc": "VisualStudioCode（简称VSCode/VSC）是Microsoft为Windows，Linux和macOS开发的源代码编辑器。它支持调试，嵌入式Git控件，语法突出显示，智能代码补全，代"}, {"id": "6844904066770812936", "title": "Flutter 实现视频全屏播放逻辑及解析", "desc": "退出全屏时移除 DecorView 中的 Surface，切换 List Item 中的 Surface 给 Player Core ，同步状态。 当然，不同的播放内核可能还需要做一些额外操作，但是这一切在 Flutter 中就变得极为简单。 如下图所示是 Flutter 中实…"}, {"id": "6997761606251724836", "title": "Flutter之异常和错误", "desc": "Flutter异常治理的相关经验，希望帮助同学快速定位问题，并解决问题。dart和flutter work方法异常问题治理相关"}, {"id": "6959734558468096008", "title": "Flutter | 动画", "desc": "简介 在任何系统的 UI 框架中，动画的实现原理都是相同的，即：在一段时间内，快速地多次改变 UI 外观；由于人眼会产生视觉停留，所以最终看到的就是一个连续的动画；"}, {"id": "6968787097515884557", "title": "Flutter简单实现手写瀑布流 第二篇", "desc": "该部分为Flutter简单实现手写瀑布流，RenderObject的实现。封面为加载好图片后，快速滑动的帧数图。"}, {"id": "6966740664709021709", "title": "[Flutter翻译]使用Flutter WEB实现桌面GUI（第2部分：Dock）", "desc": "如果你已经读完了之前的文章《使用Flutter WEB实现桌面GUI（第一部分：介绍）》，我正试图说明我在使用Flutter WEB实现FlutterGUI时所遇到的一些主要困难。 在这一部分，我们将"}, {"id": "6844904037117083655", "title": "Flutter路由项目实战之fluro", "desc": "handler就是每个路由的规则，编写handler就是配置路由规则，比如我们要传递参数，参数的值是什么，这些都需要在Handler中完成。"}, {"id": "6886643071069634567", "title": "Flutter相册选择image_picker", "desc": "flutter相册选择图片视频，在app应用中，用到媒体文件的场景还是很多的，在使用率很高的社交软件微信中，"}, {"id": "6881516244374290445", "title": "Fluttify一周一插件 之 腾讯地图 Flutter插件", "desc": "GitHub地址 https://github.com/fluttify-project/tmap_map_fluttify ；更多详细信息与插件支持请关注fluttify-project . 显示基础地图提供创建、获取、销毁相关能力的介绍，适合初级开发者使用。 地图插件提供了…"}, {"id": "6963833618666340383", "title": "【Flutter 基础】环境及配置", "desc": "Flutter 是谷歌的移动 UI 框架，可以快速在 iOS 和 Android 上构建高质量的原生用户界面。 本文可用于快速了解环境及配置以及搭建 Flutter 开发环境。"}, {"id": "6981368741653119013", "title": "Flutter框架分析（七）-relayoutBoundary", "desc": "本文首先介绍了RelayoutBoundary的作用，然后结合源码分析了RelayoutBoundary的作用原理"}, {"id": "6850418115156082701", "title": "Flutter如何优雅的使用typedef回调方法", "desc": "在移动开发中，都避免不了回调方法callBack()，在Flutter编程中也不例外，会用到回调方法，且最开始dart的语法糖把本菜鸡搞得晕头转向，今天就探究一下，callBack()在Flutter的几种实现形式和原理。 废话不多说，直接进入正题，首先在心中默念一句：Flut…"}, {"id": "6844904195443654663", "title": "用 Flutter 实现探探卡片布局", "desc": "前几天写了一个 Fluter 插件 tcard，用来实现类似于探探卡片的布局。效果如下，本文讲解如何使用 Stack 控件实现这个布局。 Stack 是一个有多子项的控件，它会将自己的子项相对于自身边缘进行定位，后面的子项会覆盖前面的子项。通常用来实现将一个控件覆盖于另一个控件…"}, {"id": "6844904114485198856", "title": "Flutter处理Webview与H5通信的常见方式", "desc": "目前，移动跨平台开发作为移动开发的重要组成部分，是移动开发者必须掌握的技能，也是自我提升的重要手段。作为Google推出的跨平台技术方案，Flutter具有诸多的优势，已经或正在被广大开发者应用在移动应用开发中。在过去的2019年，我看到越来越多的公司和个人开始使用Flutte…"}, {"id": "6863236259335766024", "title": "Flutter 数据库篇 —— 本地数据存储和状态管理的优雅结合", "desc": "最近由于业务需求，我开始研究Flutter中的本地数据存储,要做好本地的数据存储最重要的就是对数据库的要有基本的了解，建库、建表、增删改查，都是数据库基本操作，各位在开始前一定要对数据库有一定的了解，不然会看的云里雾里😅 。 其实单论数据库本地的存储，粗略一想会觉得～很简单啊…"}, {"id": "6997237204124696606", "title": "实现点击\"换一批\"来切换内容，flutter之CustomScrollView【flutter20个实例之八】", "desc": "一、老套路，先看样式 左图是我业务中的样式，右图是下方源码展示样式（复制可直接运行，无额外组件引入） 二、讲解 1.涉及组件 首先，没有一个单一组件来实现这个效果 实现这个效果涉及以下组件： 2.首先"}, {"id": "6844903893646704654", "title": "widget state界面刷新原理揭秘", "desc": "widget是fltter界面开发中的基础控件，如同ios中的uiview这种地位，所谓万物皆widget。 widget有分为statelessWidget和statefulWidget，这两者是什么区别呢。一句话就是说statelesswidget用来展示无状态的视图，而s…"}, {"id": "6931668058570227719", "title": "写了个Plus版合成大西瓜", "desc": "我一直想做个小游戏，正好年前合成大西瓜火了，所以趁着这次年假，自己在家写了个plus版的合成大西瓜，前后花了大概三天三夜的时间（没错，一直写到大年三十的晚上～），现在写下这篇文章记录下这个过程。 里面的图片素材可以自己裁剪更换，很方便。 所以这次，我选择继续使用Flutter+…"}, {"id": "6844904158844157959", "title": "Flutter基础：Flutter中的div——Container", "desc": "将Container比做成Flutter中的div并不恰当，但这并不妨碍前端同学用Container做为起点来学习Flutter。Flutter官方的文档阅读起来不是很直观，对于习惯了看前端类有直观示例的文档的同学来说不是很友好，故简单的总结了一下，从Container的基础用…"}, {"id": "6844903937972109325", "title": "Flutter 样式基础之 Theme 主题", "desc": "Theme 类将主题应用于子控件，Theme（主题）它描述了应用程序的颜色和排版选择。Theme有两种：全局Theme和局部Theme。全局Theme是由应用程序根MaterialApp创建的Theme；而局部Theme是在应用程序某个区域范围中用于覆盖全局主题。 ThemeD…"}, {"id": "6844903587479289863", "title": "[译] 为 JavaScript 程序员准备的 Flutter 指南", "desc": "Flutter 是一款用同一套代码构建高性能、高保真的 iOS 及安卓应用的跨平台移动端应用 SDK。 文本希望能快速为 JavaScript 开发者们提供一个简练的入门指南，我会试着以 JS 与 npm 生态系统来类比 Flutter / Dart 与 Pub 包库。 我在 …"}, {"id": "6996094628642422821", "title": "5分钟完成 Flutter 本地数据库存储功能 ｜8月更文挑战", "desc": "这是我参与8月更文挑战的第6天，活动详情查看：8月更文挑战 废话开篇：APP下使用本地数据库一般多用于缓存搜索历史记录、新闻列表，目的是在无网络的情况下可以缓存一屏数据，虽然没有网络的情况下大部分功能"}, {"id": "6975590148029284382", "title": "🎺 Flutter 一款新的、优雅地状态管理库：Oboe", "desc": "Oboe 优雅地状态管理库 Oboe 从名字到使用方式，处处都显露着优雅，它的说明仅仅需要两张截图： 特性 Oboe 不需要顶部包裹. Oboe 使用 memo 来拦截不必要的更新"}, {"id": "6952429497035522079", "title": "Flutter Navigator 2.0原理详解", "desc": "Navigator 2.0作为新一代的路由提供了申明式的API，更加符合Flutter的风格。Navigator 2.0向前兼容，新增了一些新的API，使用的方式和Navigator 1.0相比有较大"}, {"id": "6844903933312237575", "title": "Flutter | 一个超级酷炫的登录页是怎样炼成的", "desc": "下面就来一步一步的分析是如何做出来的。 需求了解了，下面就是一步一步的实现效果。 1. 点击「注册」弹出 Dialog 设置一个 backgroundColor 就ok了。 2. 弹出 Dialog 后延迟一段时间弹出 Dialog 里的内容 所以如果不使用 ScrollVie…"}, {"id": "6844904057216188429", "title": "战疫情——flutter App", "desc": "本项目使用flutter开发,主要内容为疫情地图、实时疫情、同行程查询、辟谣、以及收集平台疫情通道，以达到实时掌握最新疫情，完成紧急辟谣,同行程车次查询等目的。 下载链接. 欢迎Star..... 交流学习。 大家好，我是小伍。 在掘金也混了一段时间，没发过什么文章，一直潜水学…"}, {"id": "6961399282872107015", "title": "手把手教你用Flutter搭建属于自己的个人博客", "desc": "Flutter 2.0以来已经稳定支持web的开发，现在来教大家使用Flutter搭建一个个人的博客网站"}, {"id": "6893486629030199303", "title": "胡辣汤教程02，一篇文章全面掌握Flutter里的各种补间动画", "desc": "1. A到B，明确告知信息的关联性，直观的感受从哪儿来到哪儿去。 2. 提醒关注，需要用户注意到一些关键信息的时候。比如用跳跃的按钮来吸引点击。 3. 愉悦感，这个不用多说，loading动画啦，精美点赞动画等等。 由于视觉有残留的特性，大脑会对前后的视觉信号自动关联上。小时候…"}, {"id": "6844903945022734343", "title": "Dio 3.0发布，支持Flutter Web 和 Http/2.0", "desc": "Flutter 一周前发布了1.9 版本，其中最大特性是将Flutter Web合入了主分支。而今天，Dio 也正式发布了3.0.0，该版本最大的特性是支持Flutter Web 和 Http/2.0。 开发者只需要将Flutter升级到1.9或更新的dev版本，然后将Dio升…"}, {"id": "6940084865169621028", "title": "你知道Flutter中总共有多少个Widgets吗？", "desc": "在Chrome中打开flutter.dev官网，按F12打开开发者工具，输入下面这段代码。可以将当前页面所有的Widget目录卡片的名称输出 1、使用Flutter开发一个全平台的Flutter Widgets Catalog APP，并且开源。在这个APP中可以通过图形化的方…"}, {"id": "6891085344381337613", "title": "Flutter 2020 开源项目推荐 第一弹", "desc": "视频https://www.bilibili.com/video/BV13D4y1R71r/关注点目录文件结构是否符合官方的包管理规范，组件拆分页面、组件、通用、业务工具类设计通讯、持久化、安全、字符"}, {"id": "6994257741812334622", "title": "Flutter中的自定义View的基本流程和相关知识", "desc": "这是我参与8月更文挑战的第9天，活动详情查看：8月更文挑战 前言 我们都知道官方有很多的Widget供我们使用，但它提供的再多，也无法满足产品和UI的需求， 当然，谷歌官方也肯定想到了这一点，所以在f"}, {"id": "6911595933113253902", "title": "写给前端的原生开发基础入门", "desc": "跨平台的 Hybrid 混合式开发技术栈，一直是一项非常受业界欢迎的技术。然而，许多投身其中的前端开发者往往只熟悉其中的 JS 部分，对于整个应用中基础性的原生部分了解非常有限，这是十分可惜的。 作为一名前端开发者，我在过去的一年中都在开发 Hybrid 应用框架（参见我的 Q…"}, {"id": "6871905809886871565", "title": "Flutter——另类设计，提升页面开发效率，简化跳转以及传值", "desc": "在大佬的静默中,四周浮现起热烈的掌声...... ...... 深夜，天桥下的我辗转反侧、难以入眠...... ‘ 难道，真的可以？ ’...... 经过反复推敲打磨后，这个‘轮子’还确实有点儿圆，‘滚’起来还挺顺溜。 此种跳转方式的缺点就是页面传值需要map形式，不方便的同时…"}, {"id": "6844903862692741128", "title": "[译] Flutter 布局备忘录", "desc": "现在我将展示给你我总结的一系列 Flutter 布局代码片段。我会尽量保证代码简短易懂，并且会给出效果图。 但是我们仍旧需要循序渐进 —— 模版目录将会随之逐步深入。我将会将更多的篇幅集中于 Flutter 部件的应用，而不是单纯陈列组件（Flutter Gallery 在这一…"}, {"id": "6976069994270588941", "title": "Flutter | Key 的原理和使用", "desc": "概述 在几乎所有的 widget 中，都有一个参数 key ，那么这个 key 的作用是什么，在什么时候才需要使用到 key ？ 没有 key 会出现什么问题？ 我们直接看一个计数器的例子： 运行效果"}, {"id": "6844904185540902919", "title": "Flutter Scheme 使用(浏览器打开App，App内打开另一个App)", "desc": "我们都知道苹果手机中的APP都有一个沙盒，APP就是一个信息孤岛，相互是不可以进行通信的。但是iOS的APP可以注册自己的URL Scheme，URL Scheme是为方便app之间互相调用而设计的。我们可以通过系统的OpenURL来打开该app，并可以传递一些参数。 例如：你…"}, {"id": "6844903841742192648", "title": "Flutter完整开发实战详解(十三、全面深入触摸和滑动原理)", "desc": "本篇将带你深入了解 Flutter 中的手势事件传递、事件分发、事件冲突竞争，滑动流畅等等的原理，帮你构建一个完整的 Flutter 闭环手势知识体系，这也许是目前最全面的手势事件和滑动源码的深入文章了。 Flutter 中默认情况下，以 Android 为例，所有的事件都是起…"}, {"id": "6844903981571899406", "title": "Flutter与原生通讯 - Flutter Plugin", "desc": "Flutter优势主要体现在UI上--高性能且跨平台表现一致。但是针对平台(Android、IOS)的实现，如：获取电量、判断WiFi使用、调起WebView加载网页等，得调用特定平台的API包。Flutter Plugin就是为调用平台API而生。 下文中所提及到的\"平台\"指…"}, {"id": "6992459238995918856", "title": "Flutter框架分析（八）-Platform Channel", "desc": "本文主要介绍了Platform Channel的主要类型，并分析了其在Android端和Flutter端的主要结构。最后通过方法的调用过程，分析了消息的具体传递流程。"}, {"id": "6844903796317880327", "title": "一个前端码农的 Flutter 实战经验", "desc": "在Dart 中，子类不会继承父类的命名构造函数。如果不显式提供子类的构造函数，系统就提供默认的构造函数。同时，写法也变得更简洁； 在Flutter 中，一切UI 都基于Widget，在上图中，Container 便是一个Widget，靠style 来设置样式（也可以使用Them…"}, {"id": "6911336882513117192", "title": "【摸鱼研究所】 让你的屏幕下个雪呗 （后篇）", "desc": "1. 开始随机掉落 其实就是把之前我们设置的所有常数系数，全部变为随机数. 2. 积雪呢"}, {"id": "6844903956649361416", "title": "Flutter 基础控件篇-->图片(Image)、图标(Icon)", "desc": "Flutter 中，我们可以通过Image组件来加载并显示照片，Image的数据源可以是asset、内存、文件和网络。也可以使用Icon字体图标，来显示不同的图片 可以用来实现加载各种照片。 如AssetImage是实现了从Asset中加载图片的ImageProvider，而N…"}, {"id": "6935773318448431140", "title": " Flutter 2 正式出道（二）", "desc": "书接上文。 我们知道，其实很Flutter开发者并没有打算用Flutter开发全新应用程序的想法，但他们可以把Flutter添加到既存的Android和iOS项目中。这个特性，我们把它叫作Add-to-App，它是在两个移动平台上重用Flutter 代码，但同时仍保留现有原生代…"}, {"id": "6863405916457598990", "title": "[Web翻译]Hummingbird与AngularDart", "desc": "更新（2019年5月10日）： Hummingbird现在是Flutter for Web。它已经推出，我们现在可以在这里使用它的技术预览。 Hummingbird在12月4日的flutter发布会上宣布。这个项目将允许我们把flutter应用编译成成熟的Progressive…"}, {"id": "6844903957463040008", "title": "Flutter 滚动控件篇-->GridView、CustomScrollView", "desc": "这里说一下GridView，他和ListView的不同之处在于，GridView可以构建一个二维网格列表。 可以看到，GridView的大部分属性都和ListView一样，并且他们的含义也都相同。如果不知道的话，请点击：Flutter 滚动控件篇-->ListView 这里只说…"}, {"id": "6934971468094652447", "title": "flutter 渲染管道是如何优化的", "desc": "这是我们现在最关心的几个阶段。 单击方法查看对应源码，其实都很相似。 当要重新设计RenderObject时，可以重写sizeByParent。 当表达式返回true时，_relayoutBoundary 为它本身，并且size(RenderBox)是固定的，除非重新布局，这是…"}, {"id": "6844904194197946375", "title": "一个web前端开发者学习Flutter 的历程（一）", "desc": "打开Flutter中文网，并选择你自己的系统。（笔者这里用的是mac，所以会按照mac来一步一步往下走） What?这是个啥玩意。。。去哪里修改。。。不多废话，直接上具体做法： 修改.bash_profile文件，把这两行复制进去，然后保存就行了。（记住这个文件的位置） 什么鬼…"}, {"id": "6882378499638689800", "title": "【Flutter 1-4】Windows下VSCode配置Flutter开发环境", "desc": "Visual Studio Code（简称VS Code）是一个由微软开发，同时支持Windows 、 Linux和macOS等操作系统的免费代码编辑器，它支持测试，并内置了Git 版本控制功能，同时也具有开发环境功能，例如代码补全（类似于 IntelliSense）、代码片段…"}, {"id": "6844904064908525582", "title": "Flutter个人小知识点记录", "desc": "'alertDialogLabel' was called on null. 在项目级别build.gradle将类路径更改为com.android.tools.build:gradle:3.3.1。 在应用程序级别build.gradle将您的compileSdkVersio…"}, {"id": "6949804877602095140", "title": "依赖状态的状态管理", "desc": "现在问题来了, 如果我们的model的创建**依赖BuildContext**应该怎么办? 我们**需要创建管理状态的对象,但这个对象本身依赖状态才能获取**!"}, {"id": "6844903830069461006", "title": "Flutter自己实现一个ProgressHUD", "desc": "1. 显示和隐藏渐变 2. 通过BuildContext获得Element树的ProgressHUD 3. 创建HUD 4. 环形进度"}, {"id": "6844903873501462541", "title": "Flutter JSON 解析懒人攻略", "desc": "1. pubspec.yaml 添加依赖 2. 添加引用 3. [可选] 使用 Code Snippets 4. (通过Code Snippets) 建立以下模型 5. 服务端和本地字段不同名的处理 比如服务端叫 user_id，本地想叫 userId. 6. 有些字段不想被解…"}, {"id": "6844903912927920141", "title": "【Flutter】了解插件(Plugins)功能", "desc": "在开发Flutter应用过程中会涉及到平台相关接口调用，例如数据库操作、相机调用、外部浏览器跳转等业务场景。其实Flutter自身并不支持直接在平台上实现这些，但在实际开发中我们会发现Pub.dev上会提供需要支持这些功能的package。事实上这些packages是为Flut…"}, {"id": "6948665582828912670", "title": "Flutter动画的使用", "desc": "动画能提高用户的使用体验，使APP更流畅。那么在Flutter中如何实现动画以及选择使用什么样的动画呢？ lottie-flutter借鉴自Lottie，使用方法很也很简单。 CustomPainter是系统提供的一个能够绘制内容的底层API。 隐性动画的Widget是Impl…"}, {"id": "6903115659959271438", "title": "从TodoList入门Flutter开发", "desc": "学习了近三周的 Flutter ，想着总结一下，但无奈 Flutter 知识点太多，从 Dart 语言到 Flutter 布局，基础Widget，列表，异步，网络编程及周边生态，有很多点可以细讲，以我现在的知识储备实在不想误人子弟，本文将会从一个Todolist小例子带你入门F…"}, {"id": "6844904004837703694", "title": "Flutter 动画及示例", "desc": "“介于两者之间”的简称。在补间动画中，定义了开始点和结束点、时间线以及定义转换时间和速度的曲线。然后由框架计算如何从开始点过渡到结束点。 在基于物理的动画中，运动被模拟为与真实世界的行为相似。例如，当你掷球时，它在何处落地，取决于抛球速度有多快、球有多重、距离地面有多远。 类似…"}, {"id": "6844903887351054343", "title": "初略讲解Flutter的Widget、StatelessWidget和StatefulWidget", "desc": "在前面的章节介绍中，我们知道Flutter中几乎所有的对象都是一个Widget（组件），与原生开发中的“控件”不同的是，Flutter中的Widget的概念更广泛，它不仅可以代表UI元素，也可以代表一些功能性的组件，如：用于手势检测的GestureDetector组件、用于应用…"}, {"id": "6844903887065841678", "title": "Flutter拖动列表类ReorderableListView的使用 | JsShou", "desc": "最近由于公司变动业务变动，我开始进行 flutter 业务开发。flutter 是最近两年新起的技术，最重要的功能是跨端开发，能够整合 Android 和 iOS，一端两用，最近连 web 也开始支持编译了。由于之前的业务都是通过 iOS 和 Android 开发的，目前我们公司"}, {"id": "6844903862789373960", "title": "Flutter 局部路由实现", "desc": "Flutter是借鉴React的开发思想实现的，在子组件的插槽上，React有this.props.children，Vue有<slot></slot>。 当然Flutter也有类似的Widget，那就是Navigator，不过是以router的形式实现（像<router-vi…"}, {"id": "6844903843960979470", "title": "跟上时代潮流，一起实践Flutter开发", "desc": "上一篇文章我们初体验了Flutter，了解了如何创建项目与热加载。本文我们通过完成一个列表的例子来进一步感受Flutter的使用效果。通过阅读本文你讲了解如下内容： 打开Android Studio，File->New->New Flutter Project… 选择 Flut…"}, {"id": "6955827325254500360", "title": "使用 Flutter 构建一个名言名句应用程序", "desc": "引言 在过去的 8 个月里，我一直在探索 Flutter。今天我将带着大家开始一段旅程，制作一个属于自己的简单而又漂亮的应用，并同时学会进行 API 请求。 目录 TOC 让我们开始…… 初步设置 在"}, {"id": "6844903889502732295", "title": "Flutter网格型布局 - GridView篇", "desc": "1. 前言 Flutter作为时下最流行的技术之一，凭借其出色的性能以及抹平多端的差异优势，早已引起大批技术爱好者的关注，甚至一些闲鱼，美团，腾讯等大公司均已投入生产使用。虽然目前其生态还没有完全成熟，但身靠背后的Google加持，其发展速度已经足够惊人，可以预见将来对Flut…"}, {"id": "6957710081953792013", "title": "Flutter 产物分析与减包方案", "desc": "在混合开发场景下，Flutter 的包增量略大一直是被大家诟病的一点，并且 Google 官方明确表示了 Flutter 不会支持动态化，并且目前 Flutter SDK 官方还没有提供一套定制方案。"}, {"id": "6993561190202867743", "title": "Flutter-带动画的指示器anim_indicator", "desc": "一个切换时带有动画效果的指示器。pub地址：https://pub.dev/packages/anim_indicator"}, {"id": "6844904015994552333", "title": "Flutter Sliver一生之敌 (ExtendedList)", "desc": "接着上一章Flutter Sliver一生之敌 (ScrollView)，我们这章将沿着ListView/GridView => SliverList/SliverGrid => RenderSliverList/RenderSliverGrid的线路，梳理列表计算的最终一公里…"}, {"id": "6854573216015499271", "title": "Flutter FocusNode 焦点那点事-(一)", "desc": "这东西构造方法可以传一些参数, 常用的无非就是 node, canRequestFocus, 之类的. 嗯, 点评一下, 嗯 很整齐, 那么... 当你有 10 个的时候怎么办呢? 想想就很美 好的, 算你基础扎实, 这样写自然是可以的. 这里就和我开始说的对上了, 很多按钮也…"}, {"id": "6983913852362571784", "title": "[Flutter翻译]如何用Flutter 2.2.3创建Chrome扩展插件", "desc": "如何用 Flutter 2.2.3 创建 Google Chrome 扩展程序 我们将学习如何用Flutter创建一个Google Chrome扩展。本文中的Flutter版本是Flutter 2.2"}, {"id": "6844904049003724807", "title": "Flutter 入门路线图", "desc": "本文是为那些渴望开始学习 flutter 的人们而准备的，这是一个适合初学者从所有必要资源中逐步学习的路线图。 Flutter 是 Google 的 UI 工具包，可通过单个代码库为移动设备，web 和桌面系统构建漂亮的，本机编译的应用程序。 Flutter 的热加载功能可帮助…"}, {"id": "6981650834404687879", "title": "Flutter - 手写体widgets之wired_elements", "desc": "今天带大家一起看看wired_elements，它是一系列具有手绘外观的基本 UI 元素。可用于快速建立交互型产品设计稿、自己blog的UI，也可以just for fun。"}, {"id": "6985034695108984839", "title": "flutter教程", "desc": "1:Java环境的安装 JAVA环境下载地址： https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133"}, {"id": "6844903842992095240", "title": "Flutter状态管理 - 初探与总结", "desc": "最近由于Flutter的大火，加上部门可能会开始尝试在客户端内落地Flutter的项目，因此最近稍微研究了一下Flutter的一些业务技术。 正好最近看了很多关于Flutter状态管理的文章，结合我自己对各个方案的一些想法以及大佬们的一些想法，对各个方案进行了一下总结。 flu…"}, {"id": "6885505119446630413", "title": "详解：Flutter内存泄漏解决方案", "desc": "众所周知，内存的高低是评判一款app的性能优劣的重要的指标之一。如何更简单的帮助开发者分析、暴露且解决内存泄漏问题，几乎是每一个平台或框架、开发者亟需的一个的\"标配\"的feature。但是对于flutter社区，缺少一款用得顺手的内存泄漏工具。 对于使用flutter而言，因使…"}, {"id": "6937254156776243231", "title": "飞猪Flutter技术演进及业务改造的实践与思考总结", "desc": "本文结合飞猪近半年来在 Flutter 技术实践中的突破和探索，重点介绍跨端标准容器建设、组件库的沉淀、性能优化的经验，以及面对存量业务做 Flutter 改造的新思路。 2013 年，随着阿里巴巴 All in Mobile，阿里旅行也有了独立的 App。最初业务比较简单，P…"}, {"id": "6946477749309538334", "title": "Flutter终极大杀器，一个它顶四个库！", "desc": "每次新建Flutter项目，是我最痛苦的时间，每次去pub仓库找库，再复制粘贴到 pubspec.yaml ，再执行 flutter pub get 。这套操作往往需要重复十几次。毕竟Flutter大到路由，状态管理，小到工具类，国际化都需要库来支持，等找齐这些东西，终于可以准…"}, {"id": "6844903902563794958", "title": "Dart构造函数介绍", "desc": "因为Flutter和Dart语言非常容易上手，很多学习Flutter的同学，一般都会直接写Flutter页面，对Dart语言也是一知半解，包括我自己。 Dart语言和很多现代语言都很类似，但是其构造函数，其灵活性，还是比我了解的其它语言要多的，所以在写构造函数的时候，要么莫名其…"}, {"id": "6844904119191207944", "title": "干一个Flutter组件：动动小手磨出一个资源多选插件（1）——基础构建篇", "desc": "Flutter曾经有非常好用的多选组件，例如Sh1d0w的multi_image_picker，但他们都有或多或少的问题，例如不支持GIF选择，不支持视频或音频选择，定制程度不够高、依赖原生组件、不是纯Dart组件等。 随着Flutter的不断发展，越来越多的packages涌…"}, {"id": "6844904061632774157", "title": "Flutter 实现类似美团外卖店铺页面滑动效果", "desc": "我这边是把放活动的地方放在了TabBar上方。至于为什么，哈哈，我怕麻烦，因为美团外卖的放活动的组件和下方商品的组件一并点菜、评价、商家页面的切换而消失，但是这玩意儿又随商品页面的上滑而消失，算上主滑动组件，我们得做让从商品列表组件上的滑动穿透两级，实在是麻烦。所以我便把活动的…"}, {"id": "6844904130708766728", "title": "Flutter 统一弹窗管理的思考与实现", "desc": "在项目开发中经常会碰到有时要根据业务后台接口显示一些提示框或者引导框什么的，有时这些弹框要多次显示或只显示一次，并且它们内部也有一定的优先级，还要保证一个一个的显示，不能重叠。还有一些操作完成后，进入到了指定的页面才显示这个操作之后的提示或引导弹窗。特别是在 Flutter 中…"}, {"id": "6951963265622605838", "title": "Flutter 实现 element UI 之路（Radio 单选框）", "desc": "Button 按钮地址: https://juejin.cn/post/6951956959742394405Radio 单选框: https://juejin.cn/post/69519632656"}, {"id": "6844903853985366030", "title": "Flutter 高效自学笔记（一）", "desc": "学就行了，哪那么多废话。 入门教程质量非常高，基本没有阻碍，而且把 VSCode 和 Android Studio 都讲了。 性能不行的同学可以选择 VSCode。 也可以使用 Privoxy + ss 给 Android Studio 设置代理。 如果不会翻墙，就不用学编程了…"}, {"id": "6844903908087693319", "title": "在 Flutter 中使用 WebView", "desc": "以「微信」举例，我们在微信内阅读公众号的时候就是第一种情况，但是微信同时也提供了 Open with Browser 这一选项，这就是第二种情况了。 想实现第一种效果，我们需要使用一个名为 WebView 的东西，先来看看在 Android 中如何实现一个 WebView 吧。…"}, {"id": "6872526285654982663", "title": "Flutter 快速上手，秒变大前端", "desc": "近两年Flutter的热度不断提升，无论在阿里还是外部公司，参与Flutter生态建设的人越来越多。Flutter作为跨端的UI框架，未来也有很大的可能像Rax一样作为集团内营销活动页面搭建的DSL。所以目前学习Flutter，参与Flutter生态建设是一件时髦且有价值的事情…"}, {"id": "6938229167569764359", "title": "超详细，Flutter2.0构建Web应用的实际体验｜技术点评", "desc": "接触Flutter开发的时间并不长，最早关注到Flutter，就是听说它可以跨端开发iOS，Android，Web端。直到上周看了Flutter2.0的发布，才知道，原来跨web端才刚刚stable呀... 这样每次新建Flutter项目时，都是支持web端构建的，会默认多出一…"}, {"id": "6991658805821964296", "title": "【Flutter 基础】 视图布局（二）List Widget", "desc": "列表的使用都有对应的场景，只要熟悉了列表的渲染特征后，碰见相应的场景自然就不用纠结到底使用哪一个更合适了。"}, {"id": "6844903654802063373", "title": "Flutter原理与美团的实践", "desc": "Flutter是Google开发的一套全新的跨平台、开源UI框架，支持iOS、Android系统开发，并且是未来新操作系统Fuchsia的默认开发套件。自从2017年5月发布第一个版本以来，目前Flutter已经发布了近60个版本，并且在2018年5月发布了第一个“Ready …"}, {"id": "6994088899349856263", "title": "Flutter 使用Webview进行混合开发", "desc": "前言 开发过程中我们会遇到App嵌套网页的使用场景，我们在App中跳转到H5网页有时候网页中会有跳转到App的需求，也就是App与网页的相互通信。"}, {"id": "6944970009152061476", "title": "Web前端工程师Flutter快速入门，大佬勿入！", "desc": "2021年3月4日，Flutter重磅发布了其2.0版。将Flutter一套代码横跨6端的体验全部带到了stable。大帅从去年年底开始接触并学习Flutter，刚开始还不是特别喜欢Flutter的开发体验。这次2.0发布后，我决心要成为Flutter的布道者。那么同样身为前端…"}, {"id": "6901250081438056456", "title": "超多图手摸手，这次一定帮你搞定Win10下的Flutter开发环境", "desc": "以上所有软件，我已经为大家上传到了115网盘中。请大家给个赞赞吧！ 将flutter_windows_1.22.4-stable.zip解压缩，会得到一个名为flutter的文件夹。将此文件夹移动到C:\\flutter。如图所示 接着会自动打开一个命令提示符，我们输入flutt…"}, {"id": "6993500236345769998", "title": "Dart的基础语法", "desc": "Dart的基础语法总结：变量/常量、数据类型、集合、函数、运算符、流程控制、类、枚举、泛型、库的使用"}, {"id": "6999079592602533901", "title": "Flutter深入浅出组件篇---Scaffold", "desc": "Scaffold介绍 ​ Scaffold 我们通常俗称为脚手架，在前面的文章中我们说到，Material 组件（MDC）帮助开发者实现 Material Design，Scaffold 实现了基本的"}, {"id": "6863353616473063437", "title": "【Flutter学习总结】从0到1，到开发四个Flutter项目，为期10个月，分享学习总结", "desc": "适用于新手入门Flutter的学习手册及开发规范。本说明书围绕着：Flutter技术落地使用、环境配置及日常开发踩坑总结、项目结构规划及实例说明、代码规范、插件使用规范、现有公共组件和待改进等七个方面 ​ Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构…"}, {"id": "6994328452149018661", "title": "半天内如何封装一个 Flutter 导航栏上下联动功能？ ｜8月更文挑战", "desc": "这是我参与8月更文挑战的第2天，活动详情查看：8月更文挑战 废话开篇：导航栏经常是app内常用的UI功能模块，不管是独立封装还是引用第三方最好还是要有一些个人的开发心得，这样会提高个人的思考能力，今天"}, {"id": "6981444843894079502", "title": "Flutter 入门与实战（二十四）：使用 Dio的 Patch请求完成详情编辑", "desc": "本篇介绍了详情数据的获取，实体对象的部分修改来展示 Dio的 patch 请求。可以看到，Dio 提供的一系列 Restful 请求的方式基本相同，可以做到更好的封装。"}, {"id": "6991315581857169415", "title": "一文让你看懂dart中的类｜8月更文挑战", "desc": "dart是一门面向对象的语言 定义一个类 实现一个简单的类 使用类之前进行实例化 dart中的构造函数 使用构造函数初始化值 简写dart中的构造函数 命名构造函数。 命名构造函数也可以初始化值 将类"}, {"id": "6968657797391056909", "title": "【Flutter 基础】更新&升级", "desc": "当你想跃跃欲试的时候，请稍等一下，不要着急。这里是直接从 Flutter github 上克隆的代码，所以操作会涉及到 git。"}, {"id": "6993997190918045710", "title": "flutter Platform介绍", "desc": "这是我参与8月更文挑战的第8天，活动详情查看：8月更文挑战 #Platform 在dart：io中,提供与Platform类的API奇偶校验，但使用实例属性而不是静态属性。这种差异允许在测试中使用这些"}, {"id": "6986471097596117022", "title": "【Flutter 基础】State x Widget", "desc": "StatelessWidget 和 StatefulWidget 虽然都是 Widget 的抽象类。但是他们之间还是有区别的，它们分别用于实现不同场景下使用的 Widget 组件"}, {"id": "7002396397332856846", "title": "Flutter url_launcher 报错 canLaunch will return false（Android）的解决办法", "desc": "这是我参与8月更文挑战的第7天，活动详情查看：8月更文挑战 1. Flutter url_launcher 报错 canLaunch will return false（Android） 检查 <项目"}, {"id": "6979699843354591269", "title": "Flutter 设计 使您的主题同质化", "desc": "这篇文章是告诉你如何通过 ThemeData 来全局管理 Flutter 的界面样式。有一次我项目做完，已经通过了评审，然后产品和我说要调下样式，刷的一下，给我了一个新的 sketch 设计稿，我的内"}, {"id": "6844903831235461133", "title": "Flutter完整开发实战详解(十一、全面深入理解Stream)", "desc": "作为系列文章的第十一篇，本篇将非常全面带你了解 Flutter 中最关键的设计之一，深入原理帮助你理解 Stream 全家桶，这也许是目前 Flutter 中最全面的 Stream 分析了。 Stream 在 Flutter 是属于非常关键的概念，在 Flutter 中，状态管…"}, {"id": "6844903968582156295", "title": "首发 | 闲鱼公开多年 Flutter 实践经验", "desc": "阿里妹导读：Flutter从诞生到现在，已经成为了跨端开发的领跑者。闲鱼应用在flutter能够以模块形式存在前，进行了很长时间的混合app架构的探索，对原生工程进行较多改动，在官方推出flutter模块模式后，我们进行了大量调研，最终推出了一套开箱即用的混合工程脚手架flut…"}, {"id": "6861865147557183495", "title": "Flutter中的千变万化——Flare动画", "desc": "在我们的日常开发中，为了给我们的产品塑造更好的形象，产出更好的用户体验，动画🖼 是不可或缺的一环。一个好的动画可以让交互更加的简洁，让用户更好理解我们的意图。所以如何添加动画，添加怎样的动画一直都是俺们程序员的难题🔧 ，其实在我之前的有关绘制的博客、有关贝塞尔曲线的博客中已…"}, {"id": "6929406021525831687", "title": "构建一个可以线上运营的 Flutter 应用", "desc": "当我们决定在项目中采用一项技术时，我们最关心的是这项技术能不能在真正的给商业活动带来价值。 初步调研时，可以做一个可以跑起来的应用，来验证关键目标的可行性。正如我在两天时间，用 Flutter 写出一个股票分析客户端所做的，验证技术本身的开发效率，跨平台兼容性等。 经过初步调研…"}, {"id": "6969724857722339364", "title": "Flutter 5个必备的桌面插件包将包含在你的下一个版本中", "desc": "看到这张图，也许你和我一样向往着宁静的生活。 今天推荐文章中，感觉 字体、动画、下拉 插件还是很有用的，估计你都用上了。"}, {"id": "6910004411217477640", "title": "flutter开发指南 for 前端开发工程师", "desc": "那么它是一个组件吗？ 是的。 调用setState告诉Flutter框架，某个状态发生了变化导致应用程序重新运行build方法，以便应用程序可以反映出来更改。"}, {"id": "6989998182956531725", "title": "Flutter BottomAppBar 自定义路径 + 贝塞尔曲线实现闲鱼底部导航", "desc": "网上已经有不少文章展示如何使用 CircularNotchedRectangle 或 AutomaticNotchedShape 实现带凹陷效果的 BottomAppBar，但是都没有提到如何自定义 "}, {"id": "6988765647027044360", "title": "Flutter获取IOS bundle id和Android应用包名", "desc": "使用Flutter集成三方SDK，有时候需要在SDK平台上填写IOS和Android的一些信息。 IOS bundle id 打开ios/Runner.xcodeproj/project.pbxpro"}, {"id": "6935418081372012581", "title": "一起源码 之 GetX(二) ：GetxController和GetX控件", "desc": "GetX(一)中我们使用了官方demo，我们贴出的源码是简单改动过的。 而改动的部分主要是将CountModel由GetxController的子类，更换为了普通对象。 下面我们一块学习一下GetxController源码。 1. GetxController的实现 由上图可知…"}, {"id": "6844903789053345800", "title": "Flutter交互实战－即刻App探索页下拉＆拖拽效果", "desc": "套用App开发伎俩，实现上面的交互无非就是控件布局和手势识别。当然Flutter开发也是这些套路，只不过万物皆是Widget，在Flutter中常用的基本布局有Column、Row、Stack等，手势识别有Listener、GestureDetector、RawGestureD…"}, {"id": "6937495201225130015", "title": "2021 关于 Flutter v2 我整理了16个重要特性", "desc": "HTML renderer: HTML 渲染器: Uses a combination of HTML elements, CSS, Canvas elements, and SVG elements. This renderer has a smaller download …"}, {"id": "6968977455700770852", "title": "[Flutter翻译]通往Flutter Web的旅程第二部分：用Fluro进行路由选择", "desc": "如果你是直接来到这个页面，请确保你在开始这个页面之前，先浏览一下《走向Flutter Web Part:1》。 现在你可能想知道🧐为什么我们需要再次处理路由？ 试着在网络上刷新项目中的任何一个屏幕，你"}, {"id": "6981733464416632862", "title": "Flutter 滚动组件内容更新时自动定位到底端的方法", "desc": "在使用Flutter的ListView等滚动组件做历史记录或日志记录时，需要在更新内容后立即定位到内容底部(默认是在顶部的)。"}, {"id": "6868587574940663816", "title": "在原生项目中集成Flutter 最新版", "desc": "使用Flutter从零开始开发App是一件轻松惬意的事情，但对于一些成熟的产品来说，完全摒弃原有App的历史沉淀，全面转向Flutter是不现实的。因此使用Flutter去统一Android、iOS技术栈，把它作为已有原生App的扩展能力，通过有序推进来提升移动终端的开发效率。…"}, {"id": "6844904049683202061", "title": "Flutter路由框架Fluro简介", "desc": "在Flutter应用开发过程中，除了使用Flutter官方提供的路由外，还可以使用一些第三方路由框架来实现页面管理和导航，如Fluro、Frouter等。 Fluro作为一款优秀的Flutter企业级路由框架，Fluro的使用比官方提供的路由框架要复杂一些，但是却非常适合中大型…"}, {"id": "6844904023921803278", "title": "实时渲染不是梦：通过共享内存优化Flutter外接纹理的渲染性能", "desc": "咳咳，看了咸鱼这篇《万万没想到——flutter这样外接纹理》的文章，我们了解到flutter提供一种机制，可以将native的纹理共享给flutter来进行渲染。但是，由于flutter获取native纹理的数据类型是CVPixelBuffer，导致native纹理需要经过G…"}, {"id": "6844903775321194503", "title": "Flutter 跑马灯", "desc": "本文介绍2种跑马灯效果的实现：连贯式，非连贯式。效果如下图 实现思路：写一个无限长度的列表（ListView），通过一个定时任务（Timer）每隔一定时间滑动一定距离（ScrollController）。这里面比较tricky的是滑动距离的设置，你不能直接设置一个和时间成正比的…"}, {"id": "6922318964504657934", "title": "大前端之flutter开篇", "desc": "什么是flutter？flutter怎么实现跨平台能力的？flutter是Google主导开发的帮助开发者在移动、web和桌面多个平台实现跨平台、高质量原生应用程序的开源UI工具包，在2018年12月正式发布了1.0版本，也标志着flutter在移动端是为生产环境的应用做好了准…"}, {"id": "6854573219987341326", "title": "Flutter Dojo的设计之道", "desc": "认识Flutter是在18年，移动端开发日趋成熟的情况下，很多开发者都在寻求跨平台开发的终极法门，在经过了webview、RN的痛苦之后，Flutter的出现，给跨平台开发带来了一线曙光。自此，便开始了Flutter的学习之路，布道师之路，修仙之路。 Flutter的学习曲线很…"}, {"id": "6860823943440728072", "title": "Flutter 动态化在最右 App 中的实践", "desc": "1、写在前面 Flutter自诞生便备受关注，其高效的自渲染技术注定要在性能和体验上优于在这之前的跨端方案，美中不足的是目前Flutter不具备像Hybrid、RN、Weex等拥有的动态更新能力，官方"}, {"id": "6860394812395388935", "title": "【译】Flutter架构综述", "desc": "本文旨在对Flutter的架构进行高层次的概述，包括构成其设计的核心原则和概念。 Flutter是一个跨平台的UI工具包，它的设计目的是允许跨iOS和Android等操作系统的代码重用，同时也允许应用程序直接与底层平台服务对接。其目标是让开发者能够交付在不同平台上感觉自然的高性…"}, {"id": "6844903788654886919", "title": "简单谈谈dart中几种Map的不同", "desc": "本文已授权在公众号OpenFlutter上发表。 Dart有几种内置集合(Collections)，比如Set,List以及Map。了解他们在实现上的优点与缺点有助于你去如何使用他们。 Map是一个关联容器，将键映射到值。 键是唯一的，可以指向一个且只能指向一个值，但值是可以重…"}, {"id": "6844903961237913614", "title": "原生转flutter快速入门", "desc": "本文是给第一次接触flutter的原生开发iOS/android同学快速入门的攻略，高手请绕路，轻拍哈。 对于原生开发的同学，对于flutter会比较感兴趣，也许会从网上零星获得一些学习资源，但是比较零散，不构成学习路径，可能也会踩一些坑，为了避免少走弯路，又能快速的入门flu…"}, {"id": "6844903984268836877", "title": "flutter好用的轮子推荐六-超好用的全局toast", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6972656704286621732", "title": "[Flutter翻译]为什么我不是一次而是三次重构了我的Flutter应用", "desc": "在这篇文章中，我将向你指出我在开发Flutter应用程序时犯的几个错误，以及我不得不重写三次的原因，以最终对结果感到满意。请注意，这是我的个人经验，以及我对所用软件包和方法的个人看法。 两年前，我的一"}, {"id": "6882638010526105608", "title": "Flutter开发实战总结(插件篇)", "desc": "年初由于业务需要，转战Flutter，由于时间有限，基本处于边学边写的状态，也踩了不少坑。此处做下总结，主要是插件使用方面，后续会更新其他内容~ 上面有一个知识点用WillPopScope包裹最外层，设置onWillPop为false可以禁止设备返回键，有些业务场景可以用到。"}, {"id": "6844903655632535559", "title": "[译] 深入 Flutter 之手势", "desc": "Flutter 提供了一些非常棒的预制组件，用于处理触摸事件，如 in InkWell 和 InkResponse。用这些组件包裹住你的组件，它们就能够响应触摸事件了。除此之外，它还会向你的组件添加 Material 风格的飞溅效果。例如，当从组件的边界延伸出来时，InkRes…"}, {"id": "6844903686678790158", "title": "Flutter最佳入门方式——写一个计算器", "desc": "Flutter的入门文档给予了我很大的启发，它并没有把API文档或者是整个框架的内容直接展现给初学者，而是通过一个简单的计数器例子，从基础的组件到手势的监听，再到状态的改变，将Flutter最核心的思想展现的淋漓尽致。 我见过许多初学者，喜欢先将入门文档、API文档和教学视频一…"}, {"id": "6844903849996582926", "title": "Flutter SafeArea - 异形屏适配利器", "desc": "可以看到问题已经被解决。 可以看到SafeArea通过MediaQuery来检测屏幕尺寸，使应用程序的大小能与屏幕适配。 然后返回了一个Padding Widget 来包裹住我们编写的页面。这样我们的页面就不会被异形屏幕给遮挡住了。"}, {"id": "6845166891556667406", "title": "MXFlutter：基于JS的Flutter框架，用JS也能写出Flutter应用", "desc": "MXFlutter 是一套基于 JavaScript 的 Flutter 框架，可以用极其类似 Dart 的开发方式，通过编写 JavaScript 代码，来开发 Flutter 应用，或者使用 mxjsbuilder 编译器，把现有Flutter 工程编译为JS，运行在 mx…"}, {"id": "6844904183343120391", "title": "全新技能，FDottedLine", "desc": "对于一个 Flutter 开发者而言，要实现下图中的虚线效果可不是一个容易的事情 🤔。 由于官方没有准备有关于虚线的 Widget 供开发者们食用。 很多时候，开发者们不得不自己手动绘制或是使用一些特别的方式去实现，但过程总是不那么容易的。 现在， FDottedLine 要…"}, {"id": "6850037259928862727", "title": "Flutter状态管理：Provider4 入门教程（三）", "desc": "实在是抱歉，最近项目太忙，所以更新的太慢了。废话不多说，我们开始吧。 其实我本来是没有计划说说Selector的，但有朋友想让我介绍一下，所以先从Selector开始。 总得来说，Selector和Consumer是等价的，也是通过Provider.of获取数据的，不同的是，S…"}, {"id": "6854573218485927949", "title": "前端技术框架选型，跨端框架盘点", "desc": "一年前我们打算做一个跨端产品，希望一套代码，同时发布Android/IOS/Windows/Mac/Web五端，以减少开发成本及测试成本和维护成本，基于此，对市面上一些技术栈进行对比研究。 最终我们选择Flutter作为技术栈，现在回顾一下，依然觉得Flutter是最好的跨平台…"}, {"id": "6844903825480876039", "title": "一波Flutter酷炫特效来袭，持续更新", "desc": "实现UI和交互是大前端开发者的必备技能，也是掌握Flutter开发的重点；在下学习Flutter之际，实现了几种客户端上常见的酷炫UI特效，虽说是用Flutter造原生的轮子，但Flutter跨平台的特性是原生不能比拟的，更何况还有不弱的性能表现。本文主要是介绍Flutter特…"}, {"id": "6909347448636997646", "title": "明天平安夜，来聊一下flutter开发框架mvvm+provider", "desc": "InheritedWidget 能实现全局的状态更新，无法解决局部的问题。"}, {"id": "6877732301896155143", "title": "惊天秘密！如何在 Flutter 项目中实现操作引导", "desc": "俗话说得好，产品有三宝，弹窗浮层加引导。 上图截图自我司 App 晓黑板中的口算模块，相信每个 App 开发在工作中都碰到这种场景，为了避免用户对新功能产生困惑，会对一些功能加一些引导操作。在原生开发中，例如 Android 开发中，我们可以使用 NewbieGuide 等开源…"}, {"id": "6979887099071692813", "title": "Flutter - 如何编写规范可靠的代码", "desc": "早在1979年，在贝尔实验室发表的UNIX第七版中出现了 lint，这是一个用于 C 语言静态分析的小工具，静态分析允许我们在执行代码之前发现问题， 以此来帮助开发者写出更可靠更规范的程序。"}, {"id": "6844903981852917773", "title": "flutter好用的轮子推荐三-超强轮播图Swiper", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6844904048060006407", "title": "一个高自由度的Flutter 视频播放器", "desc": "一个简单易用的而且可高度自定义的播放器。 闲话不多说我们直接上“干货”。 A：之所以强调高度自由是因为播放器上面的能见的元素你都可以去更改，同时提供很多的回调可以进行自定义处理。主要还是体现在了自定义这个方面。（你可以拿它去仿 blibli ，腾讯播放器等等） A：最能体现自由…"}, {"id": "6844904004175003662", "title": "flutter好用的轮子推荐十八-flutter液体效果的页面切换组件", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6844903730140151815", "title": "我想学 Flutter，但是我不知道应该如何开始？", "desc": "过了一段时间，我觉得做一样的答复变得很累。 因此，我决定写下这篇文章。 网上的很多文章或 GitHub 的仓库都有很多学习资源，我也将会放上其中一些资源链接。 但这篇文章会有所不同。 我想握住你的手，带领你一步步走近 Flutterverse，然后让你自己飞翔。 Flutter…"}, {"id": "6955755478177726494", "title": "kraken: js执行时机", "desc": "我们想知道js生成节点如何与dart控件对应的；要运行js文本那js引擎必须准备好，它是如何初始化的；同时外部传入的`assets/bundle.js`是什么时机读取并传给引擎执行的"}, {"id": "6844903655259242509", "title": "[译] 挑战 Flutter 之 Twitter", "desc": "挑战 Flutter 将尝试在 Flutter 中重新创建特定应用的 UI 或设计。 此挑战将尝试实现安卓版 Twitter 的主页。请注意，重点将放在 UI 上，而不是实际从后端服务器获取数据。 Twitter 有四个由底部导航栏控制的主要页面。 BottomNavigati…"}, {"id": "6992879147680792607", "title": "Flutter 滑动列表组件 ListView&&GridView", "desc": "这是我参与8月更文挑战的第5天，活动详情查看：8月更文挑战 相关文章：Flutter listview下拉刷新 上拉加载更多 (juejin.cn) #前言： 今天就来介绍下Flutter中的列表组件"}, {"id": "6844904067542548487", "title": "Flutter EasyLoading - 让全局Toast/Loading更简单", "desc": "Flutter是Google在2017年推出的一套开源跨平台UI框架，可以快速地在iOS、Android和Web平台上构建高质量的原生用户界面。Flutter发布至今，不可谓不说是大受追捧，吸引了大批App原生开发者、Web开发者前赴后继的投入其怀抱，也正由于Flutter是跨…"}, {"id": "6844903902182113288", "title": "Flutter基础（十一）网络请求（Dio）与JSON数据解析", "desc": "在Android开发中如果我们想要请求网络，可以使用HttpClent、HttpURLConnection，但在项目中一般都会使用OkHttp和Retrofit。在Flutter也是如此，系统提供了HttpClient，但在项目中一般会使用第三方库，比如http和Dio，如果你…"}, {"id": "6844903645184524301", "title": "Flutter入门——山寨掘金（一）| 掘金技术征文", "desc": "之前发了一篇文章——《用Flutter山寨一下掘金》，由于是自己学习Flutter时的练手项目，文中完全没有写过程，只将源码上传到了GitHub。现受掘金邀请，将文章写成入门教程，让对Flutter感兴趣的小伙伴都能看懂。 我把项目分成四个小节，按照改版后的掘金app重新写成了…"}, {"id": "6904834325800615949", "title": "Flutter 父组件调用子组件方法", "desc": "重点是这句：GlobalKey<_SonState>sonKey=GlobalKey();"}, {"id": "6844903893370060807", "title": "flutter之玩转蓝牙插件flutter_blue 0.6.0+1-第一篇", "desc": "FlutterBlue是一款flutter对蓝牙插件,旨在提供来自两个平台（iOS和Android）的最大功能。 使用FlutterBlue实例，您可以扫描并连接到附近的设备（BluetoothDevice）。一旦连接到设备，BluetoothDevice对象就可以发现服务（B…"}, {"id": "6971806540147884039", "title": "[Flutter翻译]Flutter 2.2: 用Flutter创建你的第一个通用Windows程序（UWP）", "desc": "通用Windows程序（UWP）是可以在所有微软设备上运行的应用程序，从你可能正在阅读这篇文章的Windows笔记本，到你客厅里的Xbox，甚至是Hololens（可能没有人有）。 Flutter是谷"}, {"id": "6844904202414587917", "title": "如何使用 FutureBuilder and StreamBuilder 优雅的构建高质量项目", "desc": "本篇文章将介绍从 setState 开始，到 futureBuilder 、 streamBuilder 来优雅的构建你的高质量项目，而不引发 setState 带来的副作用，如对文章感兴趣，请 点击查看源码。 这就是通过 setState() 来更新数据，是不是很简单，通常情…"}, {"id": "6957977017157419045", "title": "Fluttter Webview与Vue结合的案例", "desc": "tip: 用Flutter实现通用框架功能，然后把业务功能用Vue去实现，可以解决公司移动开发资源紧张，但是每个业务组都备有H5开发的场景。 而H5开发又不需要管理麻烦的app上架，原生硬件调用等移动"}, {"id": "6942671728984195080", "title": "关于Flutter打包，你需要知道的基础配置和包体积优化策略？", "desc": "Hi~ 豆皮粉们！最近在学什么，变厉害了没？今回就请大家来读读由字节跳动的“saucxs” 精心制作的《Flutter打包的基础配置和包体积优化策略》，涨涨跨端领域的知识，在你的前端“全栈”化的大路上走上一小步。 读者朋友们，你们有没有遇到过快乐地用 flutter 项目开发完…"}, {"id": "6844904182676209677", "title": "Flutter状态管理：Provider4 入门教程（二）", "desc": "在Flutter状态管理：Provider4 入门教程（一）中，我们对状态管理以及Provider有了初步的了解，也学习了ChangeNotifierProvider以及Consumer的使用，但由于时间有限，讲到Consumer就关卖了个关子，连广告都忘打了，现在我们正式书接…"}, {"id": "6920150012773007374", "title": "【MJPEG】Flutte开发全景相机", "desc": "手机是通过wifi连接的全景相机，可以捕获到相机的实时预览，并且在手机中呈全景展示，移动相机的时候，画面会实时变化，在手机上拖动的时候，可以展示不同的方向的画面。 相机的请求主要操作一共分为2类，Commands/Execute和Commands/Status，2个接口都属于P…"}, {"id": "6844903889087496206", "title": "利用flutter_downloader插件在Flutter中实现文件下载", "desc": "之前有做一个工具集的微信小程序「开挂Lite」，但是由于小程序自身限制，没有办法实现下载文件的功能，只能把下载链接解析出来。而且受限于微信平台，小程序的审核是一件很麻烦的事情，因此有了将其APP化的想法。 自从去年Flutter横空出世后，我便一直关注它的发展，时隔一年后重新拾…"}, {"id": "6844903878383632397", "title": "一统江湖？——Flutter for All Screens初体验", "desc": "2018年2月27日，Google发布了Flutter的第一个Beta版本，由于自己是一个Google粉，所以很快就下载尝鲜了，之后还在简书上发过一篇博客《你好，Flutter》，是我的第一篇阅读量过10w的文章。在学习flutter期间也做过一些零散的笔记，但由于当时觉悟不高…"}, {"id": "6844904020847362056", "title": "flutter好用的轮子推荐二十一-flutter制作刮刮卡效果", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6923854569596256263", "title": "使用 Flutter 的 Container 控件构建优美的用户界面", "desc": "当我们使用 Flutter 构建绝佳的 UI 界面的时候，Container 扮演着重要的角色。我真的极度喜欢在任何地方添加 Container 控件，而这也是因为它确实能够在快速简单地创建 UI 界面上帮上我大忙。 要生成一个简简单单的正方形或矩形，我们可以创造一个 Cont…"}, {"id": "6990319489183121444", "title": "BLoc模式在React中使用-业务逻辑组件的独立使用", "desc": "使你的业务逻辑独立于UI组件 最初，业务逻辑组件（BLoC）模式是由谷歌引入的，作为处理Flutter应用程序中状态的解决方案。它允许你通过将业务逻辑与UI组件分离来减少UI组件的工作负荷。 随着时间"}, {"id": "6844903844535779342", "title": "Dart语言——45分钟快速入门（上）", "desc": "Dart可基于AOT（Ahead Of Time）编译，即编译成平台的本地代码，运行性能高。 Dart可以更轻松地创建以60fps运行的流畅动画和转场。Dart在没有锁的情况下进行对象分配和垃圾回收 通常来说一门语言要么使用AOT编译，编译慢，开发效率低，或者使用JIT编译，在…"}, {"id": "6844903812029743118", "title": "Flutter自定义实现神奇动效的卡片切换视图", "desc": "这一段时间，Flutter的势头是越来越猛了，作为一个Android程序猿，我自然也是想要赶紧尝试一把。在学习到动画的这部分后，为了加深对Flutter动画实现的理解，我决定把之前写的一个卡片切换效果的开源小项目，用Flutter“翻译”一遍。 首先，关于卡片的层叠效果，在原A…"}, {"id": "6844903764785102861", "title": "bugly的flutter版已完成，欢迎使用", "desc": "目前支持Android（更新统计、原生异常上报、flutter异常上报）、iOS（统计、原生异常上报、flutter异常上报）项目地址：https://github.com/crazecoder/fl"}, {"id": "6992760735965118501", "title": "Flutter Dio请求日志", "desc": "客户端实时查看 dio请求日志 dio_log 基于dio的网络请求日志 依赖方式分2种 1. dio_log : ^2.0.0-nullsafety.0 2.源码依赖"}, {"id": "6844904103877820429", "title": "趁手利器，FSuper", "desc": "现在，我需要向你隆重介绍，可能即将在你的 Flutter 编程之路中，令你爱不释手的 趁手利器 之一 —— F...Super。 技术团队】 开发的 FWidgets 系列组件之一。是由 Github 2.8k+ star 项目 《SuperTextView》 作者 CoorC…"}, {"id": "6844904089474580487", "title": "FLUI 0.9 版本发布，新增动态渲染模块 Dynamic", "desc": "FLUI 发布了 0.9 版本，新增了动态渲染模块 Dynamic，新增悬浮列表头组件，另外针对文档完善了 API 列表并且修复了若干问题。 Dynamic 模块允许我们加载下发或者缓存的 JSON 来完成渲染。 DSL 设计上语义接近 Flutter 原始组件，仅仅是针对每个…"}, {"id": "6844903907206889480", "title": "Flutter学习篇(四)—— 尺寸解惑", "desc": "大概意思就是指没有限定视图的高度，宽度。典型的场景如下： Vertical viewport was given unbounded height. 注意红色部分，如果Column的child的constraint是unbounded的话，就无法给出真实大小。而对于ListVi…"}, {"id": "6961070021908889636", "title": "Flutter开发：如何引入第三方库并安装使用", "desc": "在Flutter开发过程中，会使用到各种各样的好用的插件和第三方库，对于刚入行的新手来说，掌握正确的Flutter项目引入第三方库是必备技能。"}, {"id": "6844903957358198798", "title": "Flutter 滚动控件篇-->滚动监听及控制(ScrollController)", "desc": "在前面的滚动控件篇的文章中，我们提到了controller属性，他接收一个ScrollController对象。ScrollController的主要作用是控制滚动位置和监听滚动事件。 ScrollController控制滚动位置和监听滚动事件。 jumpTo(double o…"}, {"id": "6844903974517260301", "title": "flutter不完全指南系列--（一）flutter特点及学习建议", "desc": "现在flutter至少可以跨5种平台（ MacOS, Windows、 Linux、 Android、 iOS）， 甚至可以在，甚至支持嵌入式开发（niubility！）。甚至可以在谷歌最新的操作系统 Fuchsia上运行 。 到目前为止， Flutter算是支持平台最多的框架…"}, {"id": "6844903903662866446", "title": "Flutter开发系列教程之网络请求", "desc": "Http网络请求是一门开发语言里比较常用和重要的功能，主要用于资源访问、接口数据请求和提交、上传下载文件等等操作，Http请求方式主要有：GET、POST、HEAD、PUT、DELETE、TRACE、CONNECT、OPTIONS。本文主要GET和POST这两种常用请求在Flu…"}, {"id": "6844903907840229389", "title": "我为什么认为Flutter是移动应用程序开发的未来？", "desc": "几年前，我使用Java和Objective-C在Android和iOS开发中有一些涉足。在实际工作中我花了将近一个月时间，我决定继续学习深挖。但是我发现很难深入。 在最近，我了解到Flutter，并决定再为移动应用程序开发提供支持。我立刻爱上了它，因为它使开发多平台应用程序变得…"}, {"id": "6933201564794355726", "title": "Dart中async和async*有什么区别？", "desc": "在Dart中两个关键字，长得很像async和async*，可能还有的朋友还不知道他们两个有什么区别。现在简单介绍一下。 async返回Future. async*返回Stream. async不必多言，有了解的都知道这是异步调用。 当一个函数被标记成async的时候，意味这个方…"}, {"id": "6844903864869584903", "title": "使用flutter打造炫酷的list", "desc": "使用了flutter一段时间，越来越喜欢flutter了，flutter比我们想象中的强大。这篇文章介绍了怎么使用flutter来展示一个很漂亮的list，先看下效果图。 样式还是很漂亮的，下面我们一步一步完成这个小项目。 appBar需要透明的背景这样才能将后面的图片展示出来…"}, {"id": "6844904128699695118", "title": "Flutter使用JsBridge与WebView交互", "desc": "近期把原先的navite app用flutter重写，原先app里面有大量通过JsBridge与web交互的逻辑，换到flutter这边之后发现没用现成可用的第三方库，然后自己写了一个bridge_webview_flutter。"}, {"id": "6844903705569918984", "title": "Flutter：手拉手带你极速构建漂亮的跨平台(iOS/Android)移动应用 ✿ 初识", "desc": "最近，学习了一些 Flutter 相关的知识，做了如下的小移动应用，当然是一套代码即可在 iOS 平台运行,也可以在 Android 运行。 文章详情可查阅我的博客：https://h.lishaoy.net ，欢迎大家访问。 Flutter 是谷歌的移动UI框架，可以快速在i…"}, {"id": "6844903862709518344", "title": "Flutter  App打包为桌面端程序", "desc": "到目前为止，Flutter虽没有在桌面端发力，但仍然提供了直接将Flutter App项目打包到桌面端的途径。在我们看来，这更像一种实验性质的尝试。无论如何，我还是相信Flutter在跨平台UI方面的优秀表现，现在就让我们来体验一下Flutter在桌面上的表现吧。 直接使用 f…"}, {"id": "6956147964415131661", "title": "Flutter - 上下文弹出菜单", "desc": "最近需要实现一个小需求包含如下功能点：1. 点击某个区域，高亮此区域，其他地方灰度显示；2. 高亮的同时，底部弹出菜单按钮；3. 点击菜单按钮执行相应操作，点击灰度地方高亮和底部弹出菜单消失。如下图所"}, {"id": "6992502707961462798", "title": "Flutter构建块-Widget完整介绍和指南", "desc": "Flutter小部件的生命周期，小部件树和元素树。 照片：Artur ShamsutdinovonUnsplash 目录。 ⦿什么是widget？ 🎯⦿Widget生命周期 🧬⦿Widget、元素和渲"}, {"id": "6844904153945210894", "title": "撸一个Flutter Apple Id 登录插件", "desc": "Flutter Apple Sign In相关插件pub搜了一下还是蛮多的，但是还是忍不住要再撸一个，顺便可以再熟悉下flutter plugin和 platform view 的用法(调用系统的苹果登录按钮需要用到)，这个自定义button widget,调用方法拿回调则不用…"}, {"id": "6990259024965042206", "title": "flutter 总结: 通过 GlobalKey 获取界面任意元素坐标尺寸", "desc": "最初： 需求开发中遇到要获取屏幕任意元素坐标尺寸的功能，最终实现如下： 1. example： 2. extension 封装："}, {"id": "6844903906800041998", "title": "写给前端工程师的 Flutter 教程", "desc": "最爱折腾的就是前端工程师了，从 jQuery 折腾到 AngularJs，再折腾到 Vue、React。 最爱跨端的也是前端工程师，从 phonegap，折腾到 React Native，这不又折腾到了 Flutter。 低成本地为用户带来更优秀的用户体验。 目前来说Flutt…"}, {"id": "6971685046180642824", "title": "Flutter Engine编译过程及问题记录", "desc": "主要记录了，Flutter Engine编译过程中的步骤、遇到的一般问题。主要过程参考网上资料并进行了验证"}, {"id": "6844904000538542094", "title": "探讨一下flutter不同界面之间的通信", "desc": "Scoped_model是一个dart第三方库，提供了让您能够轻松地将数据模型从父Widget传递到它的后代的功能。此外，它还会在模型更新时重新渲染使用该模型的所有子项。，而且无论该widget是不是有状态的都可以进行更新，再一次build Scoped model使用了观察者…"}, {"id": "6952816204641730597", "title": "【BMP】RGB字节数据流转BMP图片格式", "desc": "前段时间有**Flutter**相机实时预览的需求，使用的web API,传输的是`Motion JPEG`数据格式，前些天又需要拓展另一品牌的相机，这个相机传输的是`RGB`数据格式。"}, {"id": "6844903790324219918", "title": "[译]Flutter: Widget Size and Position", "desc": "我遇到过很多人问，如何在屏幕上获取Widgets 的 size 和 position 的问题。在某些情况下，我们会发现我们总是会有一些原因需要去实现这个功能。但是 Widget本身是没有 size 和 position。为了实现这一点，我们必须获得与Widget上下文相关联的R…"}, {"id": "6844903923484983303", "title": "你应该知道的Flutter", "desc": "公司有团队最近在做一个语音房app，ui层面使用flutter实现，在第一版完成之际做了一次分享。做一下会议笔记，备忘。 由于是第一次做flutter项目，加上团队小伙伴开发经验不是很足，在满足需求的同时，对其他之外的事情考虑的比较少，每个人在创建dart文件的时候考虑的比较少…"}, {"id": "6949090910328061983", "title": "sparrow : Flutter 微服务架构开发实践", "desc": "​1、为什么要实践 Flutter在讲Flutter之前我们先来讲一下跨平台技术，大概从2010年至今市面上先后出现了Hybrid、React Native、Weex、Flutter等相关的跨平台技术"}, {"id": "6881846793173205006", "title": "Flutter Widget 之ValueListenableBuilder", "desc": "想象一下你有这样一些数据，它们贯穿于你的应用程序，你希望当这些数据发哼变化时，你的应用程序也能随时随地进行更新。这听起来像是变成的噩梦，找出数据发生变化的地方，并在多处手动地进行用户界面的更新。但是如"}, {"id": "6862568687338323975", "title": "[Flutter翻译]Flutter Web：使用命名路线导航URL", "desc": "命名路由可以用来在Flutter移动应用内部的页面之间导航，但它们也适用于Flutter Web应用中的URL。这篇文章解释了如何将命名路由添加到您的应用程序中，以及如何自定义它们，以在路由内部进行模式匹配。 通过在MaterialApp类中定义命名路线，可以将其添加到您的应用…"}, {"id": "6844903937254883335", "title": "Flutter 安卓平台源码剖析", "desc": "做技术，只有弄懂了原理，才能遇事不慌，手中无码，心中有码。这篇文章主要研究Flutter 在安卓平台上的启动流程源码。 可以看到FlutterActivity继承自Activity，并实现了三个接口，FlutterActivity的生命周期方法，均由一个代理类FlutterAc…"}, {"id": "6844904061536305159", "title": "Flutter路由栈和生命周期解析", "desc": "年前由于业务调整开始接触学习Flutter，自己重写了业务线的功能型App。其中遇到不少坑，这次主要总结下路由栈以及生命周期的内容，后续再慢慢补充~ 路由（Routes）是什么？路由是屏幕或应用程序页面的抽象。 Flutter 使我们能够优雅地管理路由主要依赖的是 Naviga…"}, {"id": "6907021296379854861", "title": "【Flutter 2-1】Flutter手把手教程UI布局和Widget——文本和样式 Text Widget", "desc": "description: Text是我们日常开发中最常见的控件了，几乎所有的文字显示我们都会用到Text控件。 Text我们重点介绍下面几个参数:data、style、textAlign、maxLines、overflow。 1. 最简单的示例 2. 放大和缩小 textSca…"}, {"id": "6844903991231381518", "title": "flutter好用的轮子推荐十一-flutter文字动效组件", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6844903576108531719", "title": "[译] 用 Flutter 开发你的第一个应用程序", "desc": "一周前，Flutter 在巴塞罗那的 MWC 上发布了第一版公测版本。本文的主要目的是向你展示如何用 Flutter 开发第一个功能齐全的应用程序。 这篇文章会介绍 Flutter 的安装过程和工作原理，所以会比平时长一点。 我们将开发一个向用户显示从 JSONPlacehol…"}, {"id": "6966568391582842894", "title": "Flutter中JSON序列化与反序列化", "desc": "最近在自学flutter项目，想不到起步就碰到了一个小麻烦，由于没有接触过dart语法，所以很自然以一个前端的心态去调试写demo 。 在vue和react开发中，我已经习惯了在控制台中打印出对象和数"}, {"id": "6856708844761350152", "title": "Flutter CustomPainter基础——成为Flutter梵高的第一步", "desc": "绘制，无论对前端还是客户端，都是一个老生常谈的话题。作为一个开发，我们很多时候并不能完全的依赖美工切图，给图。我们需要自己的工具和方法——绘制（Paint）🖼。不知道有没有很多同学和我一样，刚开始接触绘制相关的代码部分时会有一些抵触或者说是恐惧，总觉得这一块非常的复杂、难写。…"}, {"id": "6844903942720077831", "title": "Dart 语言标准流与文件操作", "desc": "stdin除了可以使用readLineSync读一行字符串，还可以使用readByteSync读取一个字节。 除了writeAsString方法外，还可以使用writeAsBytes写入一个字节列表。需要注意的是，这两个方法都是异步执行的，返回值都是Future，如果有必要，也…"}, {"id": "6844903775837093895", "title": "《聚焦Flutter.1》Flutter开发环境配置(MacOS篇)", "desc": "MacOS系统下，下载、安装和配置Flutter开发环境。 1. 下载 Flutter; 2. 配置环境； ...."}, {"id": "6979850908305719326", "title": "Flutter 环境安装", "desc": "冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲冲"}, {"id": "6909001354996350990", "title": "在Windows上搭建Flutter开发环境", "desc": "1. 计算机依赖 2. flutter的sdk安装 要全局都能运行flutter命令, 应该设置环境变量. 3. Android studio安装 (2) 安装; 启动Android Studio，然后执行“Android Studio安装向导”。这将安装最新的Android …"}, {"id": "6850037279575146503", "title": "[Flutter翻译]发布您的Flutter桌面应用程序", "desc": "所以你建立了你的第一个Flutter应用，并在iOS设备的AppStore和Android设备的Google Play上发布。然后，你想接触更多的受众和目标网络，所以你用静态主机发布了它。但你仍然想要更多。如果你想要移动设备的性能，但又想要web的响应速度，那么桌面版就是答案。…"}, {"id": "6857440683330895886", "title": "Flutter Dojo设计之道——骚气的闪屏动画是如何实现的", "desc": "闪屏，实际上有两个作用。 宣传。通过Logo、广告等形式，在启动时，展示要宣传的广告等内容。 后台初始化。借助这个时间做一些后台操作，初始化一些SDK或者代码。 Flutter Dojo的闪屏动画，参考了著名大厂——P站的App闪屏，相信大家应该都不陌生。 动画其实比较简单，只…"}, {"id": "6844903934138515469", "title": "flutter防止widget rebuild终极解决办法", "desc": "比如使用StreamBuilder这个可以包裹你的组件，然后用流来触发StreamBuilder内部rebuild,通过StreamBuilder来隔绝外面的组件，这样写有个小缺点，我要额外写个流，还要关闭流，很啰嗦。 用过react的人都知道，react的类组件有个很重要的生…"}, {"id": "6844903759642886152", "title": "[译]Flutter 响应式编程：Steams 和 BLoC 实践范例", "desc": "在了解 BLoC, Reactive Programming 和 Streams 概念后，我又花了些时间继续研究，现在非常高兴能够与大家分享一些我经常使用并且很有用的模式(至少我是这么认为的)。这些模式为我节约了大量的开发时间，并且让代码更加易读和调试。 文中涉及的完整代码可在…"}, {"id": "6924490695063371790", "title": "Flutter | 基础Widget", "desc": "在 Fluter 中，几乎所有的都是一个 widget ，与原生开发不同的是，widget 的范围更加广阔，他不仅可以表示 UI 元素，也可以表示一些功能的组件，如手势检测的 widget，用于主题数据传递的 Theme 等等。所以，在大多数时候，可以认为 widget 就是一…"}, {"id": "6844904179320750087", "title": "[译]Flutter - 掌握ListView", "desc": "原文在这里。 如果你了解Android或者iOS的开发，你会喜欢Flutter ListView的简洁。本文中，我们就是用几个简单的例子来实现一些很常用的情景。 首先，来看看ListView的几种类型。之后介绍如何处理每个item的style。最后，如何添加和删除item。 我…"}, {"id": "6960619460919033863", "title": "Flutter 开发实战——自定义省略后缀", "desc": "当文本过长，Flutter自定义省略后缀样式。 不限于系统给出哪几种省略样式，你想要什么样的后缀就设置什么样的后缀。"}, {"id": "6844903919336816647", "title": "初略讲解Flutter的Wrap和Flow（流式布局）", "desc": "可以看到，右边溢出部分报错，这是因为Row默认只有一行，如果超出屏幕不会折行，我们把超出屏幕显示范围会自动折行的布局称为流式布局。Flutter中通过Wrap和Flow来支持流式布局，将上例中的Row换成Wrap后溢出部分则会自动折行，下面我们分别介绍一下Wrap和Flow。 …"}, {"id": "6844903927440228360", "title": "flutter的进阶之路之常用组件", "desc": "1. 重要概念 2. 容器组件 容器组件Container包含一个子widget，自身具备alignment、padding等属性，方便布局过程中摆放child。 3. 图片组件 4. 文本组件 文本组件Text负责显示文本和定义显示样式。 富文本组件RichText使用多个不…"}, {"id": "6854573222525042701", "title": "聊一聊对跨平台容器生态的理解", "desc": "自己接触跨平台容器也有快一年的时间了，站在前人的肩膀上，结合着自己的理解，聊一聊对跨平台容器生态的看法，不当之处多多指正。 效率：解决在多应用、多平台、多容器上开发效率的问题，一码多端，业务快跑。 性能：解决的是业务的性能和体验问题。 WebView渲染：依赖WebView进行…"}, {"id": "6844903967177048077", "title": "Flutter快坑我：图解环境搭建（windows）", "desc": "将压缩包解压，然后把其中的 flutter 目录整个放在你预想的 Flutter SDK 安装目录中（比如 D:\\flutter；请勿将该目录放在一些需要额外操作权限的目录，比如 C:\\Program Files\\）。 1. 在用户变量 一栏中，检查是否有 Path 这个条目：…"}, {"id": "6844903920079257613", "title": "flutter开发之——Dart中的函数", "desc": "Dart是一个真正的面向对象语言，方法也是对象并且具有一种类型Function。 这意味着，方法可以赋值给变量，也可以当做其他方法的参数。 也可以把Dart类的实例当做方法来调用。大家可以通过阅读lambda表达式与Kotlin高阶函数与Kotlin中的函数类似对比学习。首先通…"}, {"id": "6844903942183190542", "title": "Dart 语言异步之Stream详解", "desc": "Stream和 Future都是Dart中异步编程的核心内容，在之前的文章中已经详细叙述了关于Future的知识，请查看 Dart 异步编程详解之一文全懂，本篇文章则主要基于 Dart2.5 介绍Stream的知识。 Stream是Dart语言中的所谓异步数据序列的东西，简单理…"}, {"id": "6844903926429384711", "title": "Flutter关于一个登录页之夜间模式", "desc": "说起夜间模式其实并没有什么神奇之处，只不过是资源得替换罢了，最简单得我们可以设置一个变量isDark用来判断是否是夜间模式，如果是则加载夜间资源如果不是则加载日间资源。 不过具体实现起来我们就需要小小得开动下脑筋了 非常简单，InheritedWidget得特殊性在于它作为一个…"}, {"id": "6844903860226506760", "title": "【Flutter】如何写一个Flutter自动打包成iOS代码模块的脚本", "desc": "将flutter编译后的产物打包到一个新的子模块中，并在其中实现对应的接口和交互逻辑。 无论是从使用方便的角度还是对代码的侵入程度来看，采用方案2都是顺理成章的。 1、flutter build ios。 2、进入对应flutter项目的../ios(或者.ios)/Flutt…"}, {"id": "6844903893827059720", "title": "Flutter  bot_toast是怎样炼成的", "desc": "1. 炼成原材料 2. Overlay 从字面意思看就是覆盖,而Overlay也确实具有如此能力。我们可以通过Overlay.of(context).insert(OverlayEntry(builder: (_)=>Text(\"i miss you\")))方法插入一个Widg…"}, {"id": "6844903956955545607", "title": "Flutter 布局控件篇-->Stack、Positioned", "desc": "Flutter 中的层叠布局，相当于Web中的绝对定位，也是相当重要的一部分。 他允许子组件可以根据距父容器四个角的位置来确定自身的位置。绝对定位允许子组件堆叠起来（按照代码中声明的顺序）。 Flutter 中使用Stack和Positioned这两个组件来配合实现绝对定位。S…"}, {"id": "6844903742286872583", "title": "Flutter之屏幕截图/组件截图", "desc": "继续更新Flutter系列，本篇记录如何在Flutter中进行截图，在Flutter中万物皆组件，不但高斯模糊是套一层组件，截图也是套一层组件，所以屏幕截图和组件截图其实是一个意思。虽然Flutter的这种嵌套UI很繁琐，但是用习惯了反而会感觉结构很清晰，不用担心布局相关代码的…"}, {"id": "6844903959937679374", "title": "探索Flutter Image显示Webp逻辑", "desc": "最近探索了一下新增Flutter的Image widget对webp做一个stopAnimation的拓展的Api，顺便了解一下Image整个结构和对一些多帧图片的处理。 我们先看看Image的一个类图结构。 ImageProvider 提供加载图片的入口，不同的图片资源加载方…"}, {"id": "6868181968710959111", "title": "Flutter学习八之滑动组件ListView和GridView的使用", "desc": "通过分析页面得知，这应该是一个ListView嵌套一个GridView来实现的，在Android中RecycleView还没出来之前，我们如果要实现这样的一个布局，常用的方法其实也是一个ListView嵌套GridView来实现。 通过ListView构建的列表组件，需要传入一…"}, {"id": "7007711028767096869", "title": "Flutter网络图片本地缓存的实现", "desc": "一、问题 Flutter原有的图片缓存机制，是通过PaintingBinding.instance!.imageCache来管理缓存的，这个缓存缓存到的是内存中，每次重新打开APP或者缓存被清理都会再"}, {"id": "7007605231802384414", "title": "GetX系列教程---新闻案例", "desc": "前言 在前面的文章中我们对GetX的基础知识进行了讲解，包括状态管理、路由管理、依赖管理、国际化等。 今天我们来将一个小案例用于结合前面学习的知识做一个总结，这个案例主要是讲解网络数据请求、模型处理、"}, {"id": "7007997663190712350", "title": "[Flutter笔记]Flutter Android的APM", "desc": "/ 公司 运营状态 开源状态 Matrix 腾讯 ✅ ✅ Booster 滴滴 ✅ ✅ xCrash 爱奇艺 ✅ ✅ ArgusAPM 360 ❌ ✅ Emmagee 网易 ❌ ✅ U-Meng 阿里"}, {"id": "7007966038989996046", "title": "Flutter GetX系列教程---GetUtils", "desc": "GetUtils介绍 GetUtils 是getx为我们提供一些常用的工具类库，包括值是否为空、是否是数字、是否是视频、图片、音频、PPT、Word、APK、邮箱、手机号码、日期、MD5、SHA1等等"}, {"id": "7007724838496239630", "title": "Flutter官方推荐插件开发辅助工具-Pigeon", "desc": "工具插件：pigeon 推荐必看的官方例子：pigeon_plugin_example 其他pigeon写法的例子： ① pigeon/example ② pigeons 通过Dart入口，生成两端通"}, {"id": "7007246687454855198", "title": "Flutter 最佳扫码插件——自定义视图", "desc": "之前封装了Flutter扫码插件后，许多人希望能提供自定义视图的支持，于是将flutter_scankit 升级到v1.2。关于该插件的介绍以及基础用法，请查看上一篇《Flutter 最佳扫码插件》 "}, {"id": "7007964920473993224", "title": "Flutter深入浅出组件篇---Center、完结", "desc": "Center介绍 Center就是将子组件进行一个居中展示，它继承自Align，因为Align默认的对齐方式是居中的，所以它能实现居中效果，如果Center的尺寸没有受到限制，那么它将尽可能大。 示例"}, {"id": "7003211975786233869", "title": "5分钟学会Flutter开发", "desc": "Flutter是Google开源的构建用户界面（UI）工具包，帮助开发者通过一套代码库高效构建多平台应用，支持移动、Web、桌面和嵌入式平台。"}, {"id": "7006512314102841381", "title": "flutter-route实践", "desc": "flutter 路由通常有三种方式：👇🏻 Navigator.push 这段代码用到了2个 API 分别是： Navigator MaterialPageRoute Navigator Future "}, {"id": "7006215811283025950", "title": "FlutterPlugin 实现双屏", "desc": "由于项目需要，团队使用flutter进行开发，实现一款门店点餐的app（android双屏设备），工作人员使用主屏操作点餐，副屏显示餐单和价格等信息给顾客。"}, {"id": "7006509586471452685", "title": "Flutter GetX系列教程---国际化配置、依赖注入、Binding", "desc": "国际化配置 在我们使用系统自带MaterialApp来实现国际化配置，需要进行很多配置，而且还需要手动去依赖第三方组件，而使用GetX来实现国际化配置，你只需要一行代码即可实现切换，接下来我们看一下具"}, {"id": "7007671874498854942", "title": "Future中 try-catch 和 catchError", "desc": "我们知道dart是一种单线程语言，我们执行异步操作借助的是它的 event loop 机制，Future是我们最常用到的一个工具，常见用法如下： 对于同步的future，我们使用try-catch进行"}, {"id": "7007679972282204196", "title": "Flutter: 使用 Isolate 解决 Future 卡顿", "desc": "引言 在Flutter中我们使用Future来实现异步，这种异步会造成UI卡顿吗？我们来做一个实验： 新建widget，在页面中放置一个不断转圈的progress和一个按键，按键用来触发Future方"}, {"id": "7006554771674906637", "title": "[Flutter] 使用 Pigeon 类型安全地调用原生代码", "desc": "简介 Pigeon 是在 Flutter 1.20 发布的，为了解决 Flutter 调用 native 代码过于麻烦和困难，需要在字符串的基础上匹配函数名和参数，通过使用这个包可以实现，写这篇文章的"}, {"id": "7005913130794483725", "title": "Flutter的第一个微框架 Nylo 使用指南", "desc": "我最近为 Nylo 发布了 v1.1.0，这是一个面向 Flutter 开发人员的微框架。 我创办 Nylo（早在 2020 年 8 月）的目标是让从头开始开发 Flutter 应用程序更容易。 Ny"}, {"id": "7003163739529117703", "title": "剖析汉字描红在flutter中的实现原理", "desc": "前言 笔者最近需要做一款基于Android平台的《学汉字》App，碰巧部门Android开发的同学都没有时间。笔者作为一名前端码农，刚好学过Flutter，脑门一热自告奋勇入坑Flutter App开"}, {"id": "7007673656549589005", "title": "聊聊 Bloc event 的队列属性", "desc": "序 在Flutter中有state的概念，我们使用Bloc进行状态管理，通过Bloc.addEvent的方式进行事件传递，状态变更。关于Bloc的基础用法，可以查阅Bloc官网相关资料，这里我们仅记录"}, {"id": "7007605827070590989", "title": "Flutter深入浅出组件篇---ClipOval、ClipPath", "desc": "ClipOval介绍 ClipOval是裁剪子组件为椭圆的组件，默认情况下，将轴对齐的椭圆内切到其布局尺寸中，并防止其子项在该椭圆外绘制，但可以使用自定义剪刀自定义剪辑椭圆的大小和位置。 示例代码 本"}, {"id": "7002401225270362143", "title": "Flutter 系列 - 环境搭建", "desc": "Flutter 作为火热的跨端工具包，在 github 上超过 120k 的关注量，可见一斑。 基于目前本人正在学习 Flutter 的路上，会将整个学习的过程记录下来。 本博文主要讲解环境的搭建~"}, {"id": "6998890656131186719", "title": "[独立作品] 比译(v0.1.0-alpha), 使用 Flutter 开发的翻译和词典桌面应用", "desc": "一款便捷的翻译和词典应用，支持划词/截图翻译，可接入 10 多个服务商提供的翻译及词典服务，可以在桌面上运行，适用于 Windows、macOS 和 Linux。"}, {"id": "6968779502122074120", "title": "Flutter 学习笔记", "desc": "Flutter 基础 项目目录 入口文件 Flutter 项目的入口文件是 lib/main.dart, 该文件中有一个入口方法。 入口方法 根函数 runApp 函数接收一个组件，并使其成为组件树的"}, {"id": "6844904119476436999", "title": "Flutter 是如何渲染的？", "desc": "要解答这个问题，首先需要认识到 Flutter 中有三棵树：Widget 树，Element 树和 RenderObject 树。 当应用启动时 Flutter 会遍历并创建所有的 Widget 形成 Widget Tree，同时与 Widget Tree 相对应，通过调用 W…"}, {"id": "6844903925317894158", "title": "Flutter实际开发bug总结", "desc": "1.18 打包上传IOS时出现does not support the minimum OS Version specified in the Info.plist. 1.18 打包上传IOS时出现does not support the minimum OS Version …"}, {"id": "6940280047068512270", "title": "[Flutter翻译]为什么要在Flutter中使用隔离物？", "desc": "在Flutter中管理状态的方法有很多，但大多数都是以这样的方式构建的，所有的逻辑都是在应用程序的主隔离区中执行的。网络请求的执行，与WebSocket的合作，潜在的重同步操作（如本地搜索），所有这些，作为一个规则，在主隔离区中实现。本文将展示其他门以及👀。 我只看到了一个旨…"}, {"id": "6844904064908525575", "title": "Flutter个人插件使用整理", "desc": "改用低版本的，导致包重复。 低版本的会报错，谨记。"}, {"id": "6844904106079813640", "title": "flutter“多线程”isolate小学生级理解", "desc": "Dart 是单线程的并且 Flutter 依赖于 Dart。 但是如果我们要在主线程做一些计算量大的操作，就必然会阻塞线程，使UI更新卡顿甚至卡死。那怎么办呢？ 好消息是 Dart 为我们提供了 isolate，isolate 跟线程差不多，他是 Dart 中的线程。 isol…"}, {"id": "6844903718438060040", "title": "最简单的Flutter路由教程——跳转、动画与传参", "desc": "命名路由简明并且系统，但是不能传参。 构建路由可以传参，但比较繁琐。 以上动画意思为跳转时新页面从右边划入，返回时向右边划出。 前面我们说过，flutter的命名路由跳转无法传参。因此，我们只能使用构建路由的方式传参: 当触发路由返回的事件时，传参是十分简单的。和跳转时的方式一…"}, {"id": "6844904128997490695", "title": "Flutter组件之ClipRRect简单使用", "desc": "此时，只需要将child套在ClipRRect中，将切割半径设为Container的圆角半径即可。代码如下： 当然也可以设置borderRadius四个角的切割，以满足不同的需求。 这就是ClipRRect的简单用法，谢谢观看。"}, {"id": "6844904090414088205", "title": "深入理解Flutter的GestureDetector组件", "desc": "上一篇文章 深入理解Flutter的Listener组件 介绍了触控事件的监听原理，让我们对Flutter中触摸事件的传递过程有了进一步的认识。 今天我们学习一下手势识别组件GestureDetector的原理。GestureDetector的内部实现使用的是Listener组…"}, {"id": "6940241524135329799", "title": "Flutter状态管理-provider", "desc": "状态管理就是一些变量的管理，而这些变量需要在多个 路由 界面 中重复使用，所以就有了状态管理。"}, {"id": "6844903732342161415", "title": "vscode快速构建Flutter项目+热加载调试", "desc": "官方SDK 更新，加上本机环境出了点问题，所以写了这篇文章。简单的介绍一下 Flutter 应用在vscode中的快速构建和热加载调试。 >7、好了教程就到这里了，可能教程也比较简单，后面再给大家分享一下其他的。谢谢大家的查阅。😘"}, {"id": "6844904205379960846", "title": "Flutter - Packages管理", "desc": "在原生开发中，Android使用Gradle来管理依赖，iOS用Cocoapods或Carthage来管理依赖。Flutter使用配置文件pubspec.yaml（位于项目根目录）来管理第三方依赖Package。 1. Pub仓库 Pub 是Google官方的Dart Pack…"}, {"id": "6971073200914432036", "title": "Flutter 基础学习中(记录一)", "desc": "在Flutter中，一切皆是Widget（组件），Widget的功能是“描述一个UI元素的配置数据”，它就是说，Widget其实并不是表示最终绘制在设备屏幕上的显示元素，而它只是描述显示元素的一个配置"}, {"id": "6844903799476191239", "title": "Flutter开发之Dart必备基础知识", "desc": "在本文中我们主要对标JavaScript来讲解Dart与JavaScript的异同，对JavaScript还不熟悉的小伙伴可以省略JavaScript部分，直接学习Flutter部分。 JavaScript没有预定义的入口函数，但在Dart中，每个app都必须有一个顶级的mai…"}, {"id": "6912305991946240008", "title": "flutter工程化-带你一步步搭建企业级app架构", "desc": "当然是为了易于维护，易于扩展， 通过 Flutter 持续交付的最佳实践，确保您的应用程序交付给您的 Beta 版本测试人员并能够频繁予以验证，而无需借助手动工作流程。 根据业务需求定义各种开发中可能用到的功能（组件库、状态管理、工具函数等）。 对代码风格、命名规则、目录结构进…"}, {"id": "6844903845575786503", "title": "从零创建一个 Dart 服务端项目", "desc": ", 相信有一部分人想使用 Dart 尝试编写一些服务端的代码. DartVM 的性能已经和 JVM 非常接近, 再加上和 Nodejs 一样的异步io的处理方式, 可以达到和 Nodejs 同级别的并发性能, 并且还有更好地运算性能, 完全可以替代大部分 Nodejs 的使用场…"}, {"id": "6844903623261061128", "title": "Flutter框架概览", "desc": "Flutter Framework: 整个框架层都是用Dart语言实现，\b该层提供一套基础库， 用于处理动画、绘图和手势等。并且基于绘图封装了一套 UI组件库，并且细分为两种风格的组件 Flutter Engine: 这是一个纯 C++实现的框架层，\b包含了 Skia引擎（高性…"}, {"id": "6844903896087789576", "title": "Flutter 系列文章：Flutter BottomNavigationBar 控件介绍", "desc": "一个底部导航栏控件，用于进行不同视图的切换，底部导航栏可以由文本、图标 或者两者结合的形式组成，底部导航栏统筹与Scaffold结合使用，它通常作为Scaffold.bottomNavigationBar参数提供。 6.当前活动BottomNavigationBarItem的项…"}, {"id": "6855513889422245901", "title": "[Flutter翻译]在Flutter做了前10个商业应用后的经验", "desc": "作者：Łukasz Kosman和Jakub Wojtczak。 在过去的24个月内，我们在Flutter项目上花费了约17.193,00小时，制作了前10个商业应用，现将制作后的心得与大家分享。 从2018年7月在LeanCode开始用Flutter开发第一个商业应用，到现在…"}, {"id": "6844903603560251406", "title": "分享轮子-flutter下拉刷新上拉加载", "desc": "首先说下flutter,估计这个应该挺多人没听过flutter这个框架,它是一个google推出的跨平台的移动应用UI框架,和React Native是同样的目的,支持三大平台:Android,Ios,还有一个是google新出的系统,忘了叫什么...本人React Nativ…"}, {"id": "6942125142243803166", "title": "Flutter - Dart特性语法", "desc": "Dart 的入口也是 main 函数，且没有返回值。 传递给 main 的命令行参数，会存放在 List&#x3C;String> args 中。 定义字符串可以使用单引号或双引号。 每行语句必须使用分号结尾。 单引号('')：与双引号相同。 双引号(\"\")：与单引号相同。 三…"}, {"id": "6844904003445194766", "title": "使用 Flutter 实现一个走马灯布局", "desc": "走马灯是一种常见的效果，本文讲一下如何用 PageView 在 Flutter 里实现一个走马灯, 效果如下，当前页面的高度比其它页面高，切换页面的时候有一个高度变化的动画。实现这样的效果主要用到的是 PageView.builder 部件。 首先创建一个 IndexPage …"}, {"id": "6844904118964731911", "title": "混合栈开发，看AliFlutter如何解决图片问题（完整方案）", "desc": "在 Flutter 官方体系内，对混合栈开发支持不够友好。比如对于图片资源管理，以及如何对接 Native 图片库的问题，社区上已经有一些方案，但或多或少存在一些问题，或与 Flutter 图片加载流程背离较大，难以融合。 与此同时，在电商类应用中，使用 Flutter 实现的…"}, {"id": "6985504905016377358", "title": "[Flutter翻译]我希望在构建Flutter应用程序之前知道的事情", "desc": "在过去的一周里，我一直在用Flutter构建一个应用程序。我选择Flutter是因为我喜欢它的承诺。即跨平台的特性和开发过程中的快速重载。下面是我的第一印象。 Flutter 不能替代本地应用程序的开"}, {"id": "6844903928400707592", "title": "Flutter 交互基础之 GestureDetector 手势", "desc": "GestureDetector是Flutter的手势检测器，它会尝试识别与其非null的回调相对应的手势。如果此Widget组件具有子控件，那么它的大小调整行为将遵从该子控件件。如果它没有子控件，那么它将变大以适合父控件。 默认情况下，带有不可见子控件的手势检测器会忽略触摸；可…"}, {"id": "6844903989893398541", "title": "flutter好用的轮子推荐十-flutter拖动排序元素", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6844904119350591495", "title": "Flutter 数据存储 SharedPreferences", "desc": "我们在做APP开发时, 经常会涉及到用户数据的存储(比如保存用户登录token、用户的某些偏好设置等). 开发过Android的朋友应该知道有 SharedPreferences. 在 Flutter 中, 同样为我们提供了十分相似的(甚至名字都一样)组件, 为我们提供数据存储…"}, {"id": "6844904017655496711", "title": "Flutter折腾记一（TextField的ui样式）", "desc": "TextField其实就是前端代码的input，输入框组件。 基本的使用其实看api就已经可以日常使用了，官方的api解释还是很清楚的。（翻译软件还挺给力）😬 这种情况需要注意，不能给TextField加一些花式操作（包括边框，前后置icon等）。 如果加了这些，会导致输入框…"}, {"id": "6844903993563414541", "title": "flutter好用的轮子推荐十三-flutter可展开选项的浮动按钮", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6844904085091532814", "title": "Flutter 国际化适配实战", "desc": "借助App Store与Google Play，全世界任何一个国家的使用者都可以使用我们开发的应用，不过由于应用的使用者来自不同国家，所以在应用正式上架之前需要让应用能够支持多种语言，即应用的国际化。 在Flutter开发中，应用的国际化主要涉及语言和地区差异性配置两个方面，它…"}, {"id": "6844903896045846535", "title": "Flutter PIP（画中画）效果的实现", "desc": "继续上一篇 Flutter侧滑栏及城市选择UI的实现，今天继续讲Flutter的实现篇，画中画效果的实现。先看一下PIP的实现效果. 一天在浏览朋友圈时，发现了一个朋友发了一张图（当然不是女朋友，但是个女的），类似上面效果部分. 一看效果挺牛啊，这是怎么实现的呢？心想要不自己实…"}, {"id": "6857744805343002637", "title": "【Flutter开发技巧】Flutter 1.20(Announcing Flutter 1.20) 译", "desc": "在快速这个类别中，从底层级别的渲染引擎到 Dart 语言本身，本次我们都实现了多项性能改进。 对旧版本的Material Widget（例如时间和日期选择器），以及desktop和mobile上Flutter 应用中 About box 的全新响应式license页面的更新。 …"}, {"id": "6872153613776060424", "title": "FlutterDojo设计之道—状态管理之路（六）", "desc": "经过前面这么多文章的学习，Flutter的状态管理之路终于要接近尾声了。 其实前面讲了这么多，最后的结论依然是——Provider真香。这毕竟是官方推荐的状态管理方案，就目前而言，绝大部分的场景都可以使用Provider来进行状态管理，同时也基本上是最佳方案。 但是我们为什么还…"}, {"id": "6905235186405867527", "title": "误用Flutter写了个病毒网页的我🙃", "desc": "用Flutter写过网页的同学都晓得，当首页加载完毕后Flutter会动态在当前网页地址的后面加上'#/'，我现在的需求是当网页地址被加上小尾巴时，动态去给他remove掉，防止用户分享的网页地址出错。 这里的 window.history.pushState() 方法，从字面…"}, {"id": "6844904016091021319", "title": "flutter好用的轮子推荐二十-flutter仿iPhone锁屏界面", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6857822384531963918", "title": "由你做主，FLoading", "desc": "今天，FWidget 为开发者们带来的精致组件是～FLoading。 在实际应用场景中，构建 Loading 元素似乎是每个开发者必须掌握的技能。现在，FLoading 来帮助开发者们进一步精进这以技能。 FLoading 提供了一种极简的 Loading 元素构建方式，同时为…"}, {"id": "6844904173939490830", "title": "Flutter - 利用 ClipPath 实现任意形状 Widget", "desc": "我们应该都使用过 ClipXXX 相关的组件， 来实现一些 圆角矩形/圆形形状十分的方便，那如果想要实现一些奇形怪状的 Widget，例如 五角星/圆弧形之类的，那就只能用 ClipPath了。 总的来说，也就是按照路径来剪切子 widget，但是裁剪 path 很昂贵。 首先…"}, {"id": "6858745293731692557", "title": "[Flutter翻译]用自动填充提高您的Flutter应用程序的水平。", "desc": "这是官方的，Flutter 1.20来了。在所有的好东西和改进中，移动自动填充在标语中得到了强调，甚至有一个gif展示了用户体验是多么的光滑。遗憾的是，目前还没有太多例子、教程或窍门，因此才有了这篇文章的诞生。 我们先做一个简单的表格，里面有地址、电话，还有一个以后不要自动填写…"}, {"id": "6961403096056463373", "title": "Flutter 如何创建私有公共插件", "desc": "flutter pub中有很多开源库，如dio、provider等，这些都是package，直接在pubspec中引入就可以在工程中使用。本篇介绍了如何自己创建私有插件。"}, {"id": "6931181853663559688", "title": "Flutter | 常用组件", "desc": "​ textAlign：文本的对齐方式；可以选择左对齐、右对齐还是居中。注意，对齐的参考系是Text widget本身 ImageProvider 是一个抽象类，主要定义了图片获取的接口 load , 从不同的数据源获取图片需要实现不同的 ImageProvider，如 Ass…"}, {"id": "6844903975431438349", "title": "flutter状态管理provider的基本使用", "desc": "一.添加配置provider1.在pubspec.yaml中添加provider依赖,然后执行flutterpackagesget2.新建store.dart文件3.修改main.dart,用Chan"}, {"id": "6898308964329455629", "title": "Flutter系列之Container组件间的间隙问题", "desc": "Flutter中Container默认是没有间距的，当使用多个Container进行布局时，它们会紧贴在一起，如下图：我们不想让它们紧贴在一起，而是想让它们相互之间有一定的距离，那么如何解决这个问题呢"}, {"id": "6956099193937068045", "title": "Flutter路由监听", "desc": "我们通常有这样一个需求：点击修改用户信息需要跳转页面，修改完成以后返回之前的页面我们需要重新获取新的数据刷新修改后的数据。于是就找方法去实现，目前我用过的就是以下三种方法。 代码地址 Navigato"}, {"id": "6931882371817930765", "title": "[Flutter翻译]Flutter中延迟的代码执行", "desc": "在这篇文章中，我想带你进入Flutter的深处，了解更多关于调度代码执行的小旅程。作为一个对话的开始，让我们假设我们正在使用标准的BLoC架构，使用Provider库构建一个应用程序。为了使这个任务具有挑战性，在打开一个新的屏幕后，我们将不得不发起一个网络请求，通过互联网获取一…"}, {"id": "6844903854002159624", "title": "Flutter 手势处理 & Hero 动画", "desc": "App Store可以说是苹果业内设计的标杆了。 我们就来简单的实现一下 App Store的首页里其中的一个小功能。 在点击这个卡片的时候会缩放，松开或者滑动的时候会回弹回去。 跳新页面的时候有元素共享。 在Flutter中的手势事件分为两层。 第一层有原始指针事件，它描述了…"}, {"id": "6844904088979636232", "title": "Flutter Web 插件开发小记", "desc": "今天记录下FlutterWeb插件的开发，网上教程其实蛮多的。 首先，用AndroidStudio新建一个Flutter 插件项目。然后我们使用Web Chrome运行一下看看，界面如下： 很明显，WebPlugin.platformVersion, 在Web上是没有实现的。 …"}, {"id": "6856399605672706062", "title": "Flutter状态管理 -- BLoC、ScopedModel和Provider的对比", "desc": "Flutter的运行也是基于状态的变化触发绘制的。所以，Flutter开发一般是离不开这个主题的。 最常见的就是使用StatefulWidget和setState。但是，这样的用法无法满足日渐增长的页面数量和隐藏在这些页面里的越来越复杂的业务逻辑。于是，各路大神开发除了与之配套…"}, {"id": "6855532468121190408", "title": "[Flutter翻译]Flutter web——响应式设计入门", "desc": "Flutter web已经出现了一段时间，目前正处于测试阶段。尽管如此，它还是相当稳定的，而且Flutter web的插件支持也在快速改进。所以，如果你还没有机会去看看它，现在是跳上去试试的最佳时机。 在这篇文章中，我将告诉你如何开始使用Flutter web项目，并使其成为响…"}, {"id": "6844903896079400967", "title": "Flutter 如何封装一个 Banner 轮播图？", "desc": "实际业务开发中，首页一般都会存在一个轮播图。 其中「人为拖动的时候关闭自动播放」是比较难的，我们后续会说，那先一个一个功能来实现。 这样初期的准备工作已经做完，下面就开始做展示图片的功能。 这里定义了一个方法通过 PageView.builder 来生成 PageView，用该…"}, {"id": "6844903857789616135", "title": "Flutter淘宝App添加启动图最简单实现方法", "desc": "Flutter默认是没有启动图的，所以打开App是闪现的界面就是一个白屏，一个体验好的App肯定是需要启动图的。 Xcode已经给我们默认生成了LaunScreen.storyboard，通过这个文件我们就可以修改启动图了。 步骤如下图所以，再次运行，你会发现启动图不再是白屏了。"}, {"id": "6949866381882228750", "title": "Flutter状态管理之Provider的使用和架构分析", "desc": "状态管理在Flutter中非常重要，但是它包含的内容又非常的广泛。本文我们首先了解下什么是状态和状态管理呢？然后我们来了解官方的状态管理库Provider的使用，最后分析下Provider背后的秘密。"}, {"id": "6847902207572967432", "title": "浅谈Flutter web 图片选择器及图片压缩", "desc": "Flutter for web自发布以来，不少高等级的玩家已经对此进行了尝鲜，评论也褒贬不一，有的说很难用，谁用谁知道。先不说好不好用，但从格局出发，Flutter的野心很大，想要在大前端领域实现 大一统，勇气可嘉。Flutter for web总体上手感觉，对于一个没有web…"}, {"id": "6844904081459413006", "title": "在Flutter中封装redux的使用", "desc": "最近发现了之前没写完的一个Flutter版APP，于是打算重构并继续开发，本文主要整理在Flutter中使用redux的一些开发经验。 我们可以将store的state渲染到widget中，并通过dispatch的方式更新state。当state更新后，会触发订阅的onChan…"}, {"id": "6844904085834072071", "title": "Dart语言详解（一）——详细介绍", "desc": "Dart 1.0是于2013年11月14日由谷歌发布的，由Lars Bak和Kasper Lund创建。它旨在帮助开发人员构建现代的web和移动应用程序。它涵盖了客户机、服务器和现在的Flutter移动设备。它提供了一系列工具，包括虚拟机、核心库和包管理存储库。 Dart 是由…"}, {"id": "6844903997162127373", "title": "flutter好用的轮子推荐十四-flutter将widget裁剪成各种自定义形状", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6844903662318256142", "title": "Flutter笔记: 获取网络数据及渲染列表", "desc": "本篇文章记录我在使用Flutter开发中如何请求后端接口获取数据, 使用到的包有http用来发送请求,async提供Future抽象类以及convert用来将json数据转换为dart里面的对象。"}, {"id": "6930509494271082509", "title": "Flutter-实现简洁好看的PageView指示器", "desc": "1.介绍在使用PageView时，我们通常需要添加指示器，以避免用户产生只有一张图片显示的错觉，所以，添加指示器是必不可少的！但是，有时候图片一多，指示器也同样的出现多的情况，导致显示的指示器不能显示"}, {"id": "6926717557202239496", "title": "【Flutter 3-4】Flutter进阶教程——数据持久化sqflite使用", "desc": "数据持久化是在移动端开发中必不可少的技术手段。我们总是有一些用户信息，应用资源，列表数据等需要存储起来，这里我们主要来讲基于SQLite数据库的数据储存。 SQLite，是一款轻型的数据库。它的设计目标是嵌入式的，而且已经在很多嵌入式产品中使用了它，它占用资源非常的低，在嵌入式…"}, {"id": "6854573218230255630", "title": "Flutter实战（1）-- 调试工具", "desc": "本文是Flutter实战的第一篇《调试篇》，将会给大家介绍Flutter开发的调试方法。 在上手Flutter前，你需要先安装Flutter的相关环境。关于Flutter的环境安装，Flutter的官网已经有非常详细的教程了。需要注意到的是，由于“墙”的存在，没有\"V.P.N\"…"}, {"id": "6970325077443215396", "title": "《聚焦Flutter.2》Flutter工程的初始化改动", "desc": "本文是在用Android Studio创建Flutter工程后，进行了一些初始配置的修改： 1. 创建项目，并为项目初始化git仓库； 2. android模块：修改包名，创建签名； ..."}, {"id": "6953161252772249636", "title": "Flutter开发总结", "desc": "Flutter开发总结，记录一些常用的功能。（1）准备工作（2）安装及升级（3）常用布局（4）组件（5）网络请求等等"}, {"id": "6947615829626191908", "title": "Flutter Getx 01 - 路由、中间件、鉴权、传值、跳转", "desc": "Getx https://pub.flutter-io.cn/packages/get vscode 插件 Android Studio/Intellij 插件 本节目标 GetPage 对象 路由层"}, {"id": "6844904055635083278", "title": "Flutter 1.12 最新 hotfix 与 2020 路线计划", "desc": "大年初三的时候 v1.12.13+hotfix.7 终于发布了，该版本发布后总算把 1.12.13 版本上的几个大坑填完，算是达到“能用”的稳定版本；同时 1 月 30 号官方也发布了 2020 Flutter 最新的路线计划，也算是新的一年“美好”的开始吧。 v1.12.13…"}, {"id": "6916113193207070734", "title": "一文读懂Flutter的三棵树渲染机制和原理", "desc": "Flutter是一个优秀的UI框架，借助它开箱即用的Widgets我们能够构建出漂亮和高性能的用户界面。那这些Widgets到底是如何工作的又是如何完成渲染的。 在本文中呢，我们就来探析Widgets背后的故事-Flutter渲染机制之三棵树。 在Flutter中和Widget…"}, {"id": "6893838696513175566", "title": "Flutter 音视频播放器的实现思路及设计理念 🔮 —— 教你手撕源码 ", "desc": "本文旨在介绍个人在研读源码的时的一些浅薄理解 ，希望能对各位有一些帮助 😄 。本文将对所有可能遇到的知识点或细节进行注解或链接🔗 跳转，以保证各位读者都能看懂。如果文中有说的不对的或者引导方向不正确的，欢迎各位批评指正。欢迎在评论区交流补充，感谢阅读 📖 。 写本文的目的…"}, {"id": "6994999067910602782", "title": "flutter doctor 时 提示 Flutter requires Android SDK 28 and ...【flutter】", "desc": "基本的一些环境变量已经配置 之前的若干步骤参见官网 先安装 Android Studio 安装好后再运行Android Studio 使用SDK Manager 安装Android SDK 28"}, {"id": "6927552115090915336", "title": "flutter 选择器库，包括日期及时间选择器（可设置范围）、单项选择器（可用于性别、民族、学历、星座、年龄、身高、体重、温度等）、城市地址选择器（分省级、地级", "desc": "简单使用. 简单使用.. 更多方法. 以下4种样式是使用 PickerStyle 类进行封装的。 flutter_pickers 使用 MIT 许可证，详情见 LICENSE 文件。"}, {"id": "6940139795871957023", "title": "Chimera Flutter Code Push动态化热更新介绍", "desc": "在如今这个编程语言百花齐放、百家争鸣的年代，谁能占领移动端App开发的市场，谁就会受到各大厂商的青睐；而在移动端开发领域，如果谁能在跨平台技术上有所突破，那她便更成为百家语言中的花中之魁。众所周知，Google主导开发的Flutter就以其“多端一致”和“渲染性能”上的优势让其…"}, {"id": "6973956647592919076", "title": "浅谈Flutter", "desc": "本次主要分享Flutter的一些基本技术内容，主要涵盖有： Flutter的优势 Flutter的两大利器 Flutter的渲染 Flutter的优势 目前，业界上流行的跨平台技术有H5、React "}, {"id": "6844904169388638216", "title": "Flutter - 利用贝塞尔曲线实现添加购物车效果", "desc": "贝塞尔曲线，这个词大家都不陌生，特别是在前端里面，没用过相信也都听过。 有的人说了，网上一搜一大把，这是必须的，「波浪形状」、「抛物线效果」等等等等。 这里我就不讲各阶贝塞尔曲线的区别了，直接把效果和公式贴上来。 在实现之前，我们还是先来理清一下思路，首先能肯定的是我们是要使用…"}, {"id": "6987675664530800677", "title": "Flutter开发环境的搭建", "desc": "1、java环境的安装 2、Flutter SDK的安装 3、配置环境变量 4、安装虚拟机 5、在vscode中开发Flutter"}, {"id": "6844903880128479240", "title": "一个会做饭的程序员如何每天给女朋友带不同的便当？", "desc": "七天之内不能有重复的菜出现。 我们逐个功能来看，首先看一下首页随机选菜。 该数据为个人所有会做的菜品，并且自己分类为 荤菜 还是 素菜。 每次打开APP的时候先判断一下是否有缓存，如果有缓存则用缓存，没有则存入。 那这个时候肯定不能用 setState()，因为 setStat…"}, {"id": "6844903901720739848", "title": "在Flutter中创建有意思的滚动效果 - Sliver系列", "desc": "1. 前言 Flutter作为时下最流行的技术之一，凭借其出色的性能以及抹平多端的差异优势，早已引起大批技术爱好者的关注，甚至一些闲鱼，美团，腾讯等大公司均已投入生产使用。虽然目前其生态还没有完全成熟，但身靠背后的Google加持，其发展速度已经足够惊人，可以预见将来对Flut…"}, {"id": "6985405815620370463", "title": "Flutter初次探索", "desc": "初次尝试使用Flutter实现自己前几个月使用react native实现的app,感觉作为前端用起来多少还有些坡度。"}, {"id": "6959521460159250440", "title": "使用flutter 快速完成一个IM前端项目", "desc": "登录页面和聊天页面简单。很快就写完了 对话框实现文字发送,基本上按照UI还原了（发送语音，发送图片待做）具体效果一个放个APK吧 在build 里面 通讯录页面，使用类似于qq的好友列表 其他页面懒得"}, {"id": "6844904161755004935", "title": "足够好用，FFloat", "desc": "你好开发者，来见识一下，这是由我们精心为开发者烘培 🍩 的全新组件，F～～～Float。 FFloat 是由 【阿里巴巴-飞猪-FliggyMobile 技术团队】 开发维护的 FWidget 系列组件中的第 5 个成员。 正如我们的 Slogan：\"用心提供精致的组件，助您…"}, {"id": "6844903876127096840", "title": "GSY 开源 Flutter 系列一周年", "desc": "让 GSY 成为你 Flutter 学习路上的“保姆”吧。 《Flutter完整开发实战详解》 系列文章，更新至今已有 主系列文章 15 篇，番外系列文章 3 篇 ，内容主要覆盖 开发实战、源码分析、填坑技巧、面试集锦 等等，并且该系列目前仍处于更新阶段。 通过本系列文章，你将…"}, {"id": "6998718912552501284", "title": "Flutter深入浅出组件篇---MaterialApp", "desc": "Flutter整体结构图 Flutter Framework Foundation、Animation、Painting、Gestures被合成了一个Dart UI层，对应的是Flutter中 dar"}, {"id": "6971448242349277198", "title": "Flutter 中 GridView 的 「522 构建方式」一文让你吃透", "desc": "这篇我们聊聊 GridView 的 `5 种构建方式`和 `2 种布局方式` 以及 `2 种子项构建方式`，统称为 522 方式，一篇文章让你吃透。"}, {"id": "6933886544210034702", "title": "Flutter仿微信的下拉弹框", "desc": "在移动开发中，下拉弹框是一种很常见的选择交互方式，效果如下图所示。 对于这种弹框，我们可以使用Dialog来实现，下面是自定义弹框的主要代码。 如果需要改变弹框的位置，可以修改_buildMenusView()方法中的Positioned组件的边距代码。上面的代码中用到了一个自…"}, {"id": "6857377424352083976", "title": "[Flutter翻译]如何使用Flutter Inspector调试布局问题？", "desc": "作为一个Flutter开发者，你可能遇到过在你的应用上图像被切断（或者甚至不可见）的问题。也许你得到了 \"viewport was given unbounded height \"的错误。\" 事实上，最常见的两种Flutter错误都是布局的问题：widget溢出和 \"rende…"}, {"id": "6844903937972109326", "title": "Flutter 样式基础之 Padding", "desc": "它是一个Widget，写过前端代码的童鞋应该都了解这个属性，它就是设置内边距属性。通过Padding，可以有效地在子级的四周创建空的区域，内边距的空白区域，也是widget的一部分。 当child不为空的时候，Padding会将布局的约束传递给child，根据设置的paddin…"}, {"id": "6854573215847546887", "title": "[Flutter翻译]Flutter中的剪切", "desc": "在计算机图形学中，将渲染限制在某一特定区域的行为被称为 \"剪切\"。剪辑区域被提供给画布，这样渲染引擎将只 \"绘制 \"定义区域内的像素。在该区域外 \"绘制 \"的任何东西都不会被渲染。 作为开发者，我们使用剪接来创建具有特殊效果的、看起来很棒的、自定义的用户界面。正如标题所说，这里…"}, {"id": "6948637148039872519", "title": "腾讯地图Flutter业务实践——地图SDK Flutter插件实现(一)", "desc": "Flutter 作为目前通用的业界跨平台解决方案，开辟了一套全新的设计理念，通过自研的 UI 框架，支持高效构建多端平台上的应用，同时保持着原生应用一样的高性能。 在Flutter项目开发过程中，对插件的开发和复用能够提高开发效率，降低工程的耦合度。Flutter开发者可以引入…"}, {"id": "6844903849996599304", "title": "Flutter AnimatedContainer 自带动画的Widget", "desc": "了解过Android 开发的应该知道，在Android 中给控件设置属性动画还是比较麻烦的，而且多个属性动画一起设置的话更是麻烦，要写很多行代码。 那么在Flutter 中，给Widget 设置动画就完全不需要那么复杂。只需要使用AnimatedContainer就够了。 An…"}, {"id": "6844904016262987784", "title": "Flutter系列（1）--Dart语言介绍", "desc": "众所周知，Dart是Flutter官方指定语言。 是一种适用于万维网的开放源代码编程语言，由Google主导开发，于2011年10月公开。它的开发团队由Google Chrome浏览器V8引擎团队的领导者拉尔斯·巴克主持，目标在于成为下一代结构化Web开发语言。摘自Wiki .…"}, {"id": "6963392413456924703", "title": "[Web翻译]我们如何在 GitHub 使用 Web 组件", "desc": "在GitHub，我们为能提供一流的开发者体验而自豪。我们有相当一部分工作是在我们的前端，我们努力保持尽可能的轻量级、快速和可访问。对于像GitHub这样大的产品，这可能是一项相当艰巨的任务。像许多前端"}, {"id": "6932339050971922440", "title": "Flutter Bloc 01 - 快速上手 计算器", "desc": "本节目标为什么要用blocblocvsprovider学习路线推荐安装blocvscode插件配置bloc依赖包编写计算器示例视频https://www.bilibili.com/video/BV1e"}, {"id": "6844903956154417165", "title": "使用 Provider 管理 Flutter 应用状态 (下)", "desc": "配置好 dio 就可以在 todos.dart 向服务器发送请求了，修改 store/todos.dart，给 Todos 类添加了一个 _dio 属性用来发送请求，一个 getTodos 方法用来获取全部 todo 的列表数据，然后修改 addTodo，removeTodo，…"}, {"id": "6844903850139189255", "title": "如内置 Icons 一般地在 Flutter 中使用 Iconfont", "desc": "有的图标命名很随意，甚至有中文名称，iconfont_builder 已经将不符合 dart 命名规范的名称都做了格式化，并且保留了原有的名称作为注释。 iconfont_builder 默认使用 Iconfont 作为 font-family, 而有时候我们可能同时使用多个字…"}, {"id": "6844904130553577485", "title": "Flutter黑科技一键打开资源文件", "desc": "1.简介在Flutter开发过程中，使用资源文件是必不可少的，当项目的结构越来越复杂，引入的资源文件越来越多，大家有没有遇到这样的一个问题，如果我在代码中写了这样的一个文件路径assets/image"}, {"id": "6881896163197321223", "title": "flutter 常见报蓝集合", "desc": "1.This function has a return type of 'Widget', but doesn't end with a return statement."}, {"id": "6996850028148949028", "title": "Flutter 环境配置的一些坑", "desc": "一、cmd运行 flutter doctor 出现以下情况 解决方案： 系统环境变量中添加2个 注：建议删除 你的flutter sdk 目录 bin 下面的 cache 文件夹 再 cmd中运行 f"}, {"id": "6844903834288914446", "title": "Flutter状态管理学习手册(三)——Bloc", "desc": "Bloc 的名字比较新颖，这个状态管理框架的目的是将 UI 层和业务逻辑进行分离。Bloc 的复杂度处于 ScopedModel 和 Redux 之间，相较于 ScopedModel，Bloc 拥有分明的架构处于业务逻辑，相较于 Redux，Bloc 着重于业务逻辑的分解，使得…"}, {"id": "6844903957207187470", "title": "Flutter 基础控件篇-->单选框(Switch)、复选框(Checkbox)", "desc": "但是这些按钮本身不会保存当前选择状态，因此它们的选中状态都是由父组件来管理的。 但是当你点击的时候会触发他们的onChange函数，我们可以在此函数中处理代码逻辑。 当该开关打开或者关闭时在该开关的大拇指上使用的图像。 如果这个开关是用switch创建的，则忽略它。 这个属性表…"}, {"id": "6844903892010926088", "title": "我是Dart战士，我来接你飞向未来", "desc": "我是个什么东西？我是一门编程语言。 五十年前，冯叔（Von Neumann）带领团队建立第一台计算机（ENIAC），从此我们有了舒适的栖身之所。巴叔（John Backus）召集众人研制了第一个翻译器（FORTRAN），从此我们能与人类亲密接触。 三十年前，无数英雄崛起于草莽之…"}, {"id": "6844903651077521415", "title": "Flutter实现动画卡片式Tab导航 | 掘金技术征文", "desc": "计算出这两个rect在动画进度0-1过程中的中间态的rect尺寸，赋值给每一个卡片，这样卡片就有中间状态的外观了。 当tab已经是打开的，就判断点击的位置，在tab栏的左侧，就往左翻页，反之亦然。"}, {"id": "6844903623357530126", "title": "重要·Flutter 首个预览版 发布 ", "desc": "今天，InfoQ China 主办的 GMTC 全球大前端技术大会在北京举行，在这次大会中 Google 宣布发布 Flutter 首个预览版。这无疑让 Flutter 迈上了一个新的台阶。于此同时推出了 Flutter 社区中文资源 。可能有些同学还不了解 Flutter，这…"}, {"id": "6844903834620297229", "title": "Flutter 基础布局Widgets之Align详解", "desc": "一般来说，Align的使用都是其他控件的一个参数，目的是为了设置子child的对齐方式，比如居中，左上，右下等多个对齐方向，其本身用法也多灵活。 Alignment(0.0,0.0)表示矩形的中心。从-1.0到+1.0的距离是矩形的一边到另一边的距离。 即本质就是类似于语法糖将…"}, {"id": "6844903863120576526", "title": "Flutter部件内部状态管理小结（实现Vue的v-model）", "desc": "本文是 Flutter部件内部状态管理的小结，从部件的基础开始，到部件的状态管理，并且在过程中实现一个类似 Vue 的 v-model 的功能。 如 React 里万物皆组件， Java 里万物皆对象，Flutter里，能看到的一切都是 widget（部件），如按钮、文本框等等…"}, {"id": "6844903891927040008", "title": "Flutter基础（九）资源和图片", "desc": "和Android开发一样，Flutter也有asset这一概念，asset是打包到程序安装包中的，可在运行时访问。常见的asset类型包括静态数据（例如JSON文件）、配置文件、图标和图片（JPEG，WebP，GIF，动画WebP / GIF，PNG，BMP和WBMP）。本文会…"}, {"id": "6844904150816260104", "title": "Flutter 搜索建议栏", "desc": "在平时各种各样的软件中都会有搜索栏方便各位进行信息的搜索，下面就用flutter撸一个搜索栏建议。 有内容的时候显示建议内容以及删除icon，点击icon删除内容并且移除建议内容。 这里关键点主要还是key，主要用于获取当前TextFiled的位置。 findOverLayPo…"}, {"id": "6844903923229130760", "title": "Flutter 实现底部扩散模糊动画（二）页面交互", "desc": "在上一期，我们已经完成了点开动画的编写和执行，如果有仔细看完的小伙伴会发现，其中的动画效果不止扩散这么简单，本篇就来继续研究其余的动画交互。 作为一个炫（pin）酷（ru）的页面，页面中的交互也非常的重要。在本篇，我将进一步说明页面内各个位置的交互细节，从而带着各位做一个不将就…"}, {"id": "6844903640503681031", "title": "为 JavaScript 开发人员提供的 Flutter  介绍", "desc": "Flutter 是一个致力于“构建高性能和高精确性iOS与Android应用”的跨平台移动应用SDK。 来源于文档的解释: Flutter 包含一个现代的“React风格”框架、一个2D的渲染引擎、多个现成部件与开发工具。 我将尝试在JS-npm生态系统以及Flutter / …"}, {"id": "6844903957702148110", "title": "Flutter 基础控件篇-->输入框(TextField)、表单(Form)", "desc": "Flutter 的Material组件库中提供了输入框组件TextField和表单组件Form。 TextField主要用于文本输入。 controller：编辑框的控制器，通过它可以设置/获取编辑框的内容、选择编辑内容、监听编辑文本改变事件等。 大多数情况下我们都需要显式提供…"}, {"id": "6844903928136482830", "title": "初略讲解Flutter的Stack和Positioned（层叠布局）", "desc": "Flutter中的层叠布局与Web中的绝对定位、Android中的Frame布局是相似的，子组件可以根据距离父容器四个角的位置来确定自身的位置。绝对定位允许子组件堆叠起来（按照代码中声明的顺序进行堆叠），Flutter中使用Stack和Positioned这两个组件来配合实现绝…"}, {"id": "6946426855960346654", "title": "Flutter组件Container", "desc": "1. 默认效果 2. 设置背景色 3. 设置内外边距 4. 设置装饰 5. Alignment 对齐方式 6. 固定宽高 7. transform 变换"}, {"id": "6855129006585741326", "title": "使用 Github Action 发布 Flutter 插件", "desc": "笔者有发布过几个 Flutter 插件，一直在手动更新。手动更新插件有点麻烦且容易失败（需要 kexue 上网），因此研究了下如何使用 Github Actions（Github 提供的一种 CI/CD 服务）自动发布插件到 pub.dev，这样做的好处有 首先在插件的 .gi…"}, {"id": "6844903857118511118", "title": "Flutter 高效自学笔记（三）——网络请求", "desc": "看起来非常像 TypeScript 代码。 文档说不建议在 build 里调用。 也对，我们一般也不在 React 的 render 里面调用 axios。 文档推荐的一种方法是在 StatefulWidget 的 initState 或 didChangeDependenci…"}, {"id": "6844903971291660301", "title": "Flutter 1.12 个人练手学习小案例", "desc": "1. 前言 由于在实际的开发过程中会有遇到各式各样的效果，会把一些常见的界面布局与部件使用统一放在这个仓库下，如果有遇到和你需求一致的直接拿走即可，感觉有帮助，star一下更好，不迷路。 2. 仓库文件夹 由于是每个小案例新建的一个flutter项目，所以克隆下仓库cd到文件夹…"}, {"id": "6854573220319166478", "title": "[Web翻译]JavaScript中的编译与填充", "desc": "\"Babel的目的是把你的代码，使用浏览器可能还不支持的新功能，并把它转化为任何你关心的浏览器都能理解的代码。\"Tyler McGinnis在 \"编译与填充\"中说。 Babel是用来编译您的代码，使其与旧版本的JavaScript兼容（从而在旧版本的浏览器中工作）。 编译意味着…"}, {"id": "6943515602191384613", "title": "InheritedWidget的使用和源码分析", "desc": "在用Flutter进行界面开发时，我们经常会遇到数据传递的问题。但是由于Flutter采用树形结构，造成数据传递的链条有时候会很长，代码写起来也很不方便。 InheritedWidget可以让它的子节点能访问到它的公开属性，从而实现数据的跨Widget的传递。 我们先用一个De…"}, {"id": "6948210047121883149", "title": "[Flutter翻译]Flutter/Dart非阻塞解惑", "desc": "更新：巧合的是，Flutter团队刚刚发布了一个片段。它直观漂亮地说明了非阻塞概念。在下面的文章中，声称Dart不是单线程，而这个视频却声称不是。在研究和讨论更多的时候，我就不写文章了。 TLDR：Flutter/Dart不是单线程；Dart的并发模型不是Java的线程；Fut…"}, {"id": "6876759421003923470", "title": "想用 Docker 部署 Flutter Web 应用，咋办？", "desc": "之前整理过一篇 在 Github 上部署一个 Flutter Web 应用 的文章，可以很好的以 Github Pages 的方式进行部署。 近期在做 swiftdo/boke 项目，采用 Docker 部署方案，前后端分离且用 Flutter Web 编写前端页面。所以在 D…"}, {"id": "6844903957228158984", "title": "Flutter 基础控件篇-->进度指示器", "desc": "Flutter 中的Material 组件库中提供了两种进度指示器：LinearProgressIndicator和CircularProgressIndicator。 它们都可以同时用于精确的进度指示和模糊的进度指示，只不过进度条一个是线形的，一个是圆形的。 模糊进度则用户任…"}, {"id": "6938226647808081927", "title": "Flutter | 状态管理", "desc": "其实上面的例子中，a 和 b 指的就是状态，而 c 则代表的就是用户可以看到的，如界面等。 个人理解：响应式编程解决的就是数据一致性的问题。保证在状态发生改变之后，可以立即同步到页面中； 其实在 Widget 内部管理状态封装性会好一些，而在父 Widget 中管理会比较灵活。…"}, {"id": "6914188284126035981", "title": "深入理解Flutter的图形图像绘制原理——图形库skia剖析", "desc": "Flutter是目前流行的高性能跨平台UI框架，图形库skia是其跨平台的基石。本文将深入分析skia的图形、字体、图片的渲染原理，如何挖掘硬件特性，为UI性能优化提供思路。 1. 引言 Flutter是目前非常流行的跨平台UI开发框架，不仅支持Android、iOS，还支持W…"}, {"id": "6946083943774945287", "title": "Flutter布局和绘制流程浅析", "desc": "我们前面介绍了StatelessWidget和StatefulWidget，它们只是对其他Widget进行组合，不具备自定义绘制的能力。在需要绘制内容的场景下，我们要使用RenderObjectWidget,因为RenderObjectWidget创建的RenderObject…"}, {"id": "6855447431506329613", "title": "[Flutter翻译]构建高性能的Flutter widget", "desc": "本文是 Flutter Material 团队致力于使 Flutter Gallery 应用在网络上的性能更强之后开发的系列文章的一部分。然而，本文中的提示适用于所有Flutter应用程序。跳到结尾找到本系列的其他文章。 作者：Anthony Robledo &#x26; Pi…"}, {"id": "6918996922363707399", "title": "Flutter | 资源管理", "desc": "Flutter 安装包中会包含代码和 assets 资源两部分，Assets 是会打包到程序安装包中的，可在运行时访问。常见类型的 assets 包括静态数据，如 json ，配置文件，图片，MP3，gif 等。 当设备像素比(device pixel ratio) &#x3C…"}, {"id": "6962142525377216542", "title": "Flutter/Dart 高效开发： LiveTemplate 自定义", "desc": "一. Live template 是什么？ 直译是“实时模板”，它的机制简单地说就是提前定义好一些通用的代码片段在编写代码时插入编辑器，使用方法类似代码补全；同时支持 Groovy 函数自定义，无限扩"}, {"id": "6969178306667085854", "title": "如何在Flutter中简单的使用redux", "desc": "学习的redux的初衷 创建我们的数据管理文件 最近在学习Flutter,由于以前技术栈主要是vue，接触flutter时，我首先考虑到的是数据怎么在全局中流通呢？在之前的vue中，我们有vuex，r"}, {"id": "6844904147725074439", "title": "[译]Flutter - 什么是Widget，RenderObject和Element", "desc": "原文在这里。哎，点一下原文这两个字，你会被带去出处的。 想要成为一个更好的开发，了解底层的实现技术几乎是必不可少的。你可以更容易的创建自定义的布局和特效，如果你学习了这些底层技术是如何工作的。也可以让少在电脑前加几个晚上的班。 本文的目的就是要介绍Flutter之下的技术，并让…"}, {"id": "6946340206345715726", "title": "[Flutter翻译]eBay汽车与状态管理", "desc": "了解我们在构建eBay Motors应用时如何避免状态管理的争论。 当我们讨论eBay Motors应用时，最常被问到的问题是：\"eBay Motors使用哪种状态管理方案？\" 简单的回答是，我们主要是在StatefulWidgets中管理状态，使用Provider或Inher…"}, {"id": "6858113470224760840", "title": "[Flutter翻译]P3. Flutter - 制作特定平台的UI移动应用（Android与Material，iOS与Cupertino）。", "desc": "这是从我之前的文章中延续出来的关于flutter和cupertino widget的材料。 这是我的三部分系列的最后一部分，用于在Flutter中对齐widget--Android和iOS。而在这部分，我向你展示了我在当前项目实施过程中所做的大部分widget定制。 关于这个项…"}, {"id": "6844903640365269006", "title": "从 Flutter 源码看 InheritedWidget 内部实现原理 | 掘金技术征文", "desc": "这两天学习了一下 Flutter 中的 InheritedWidget 的使用方法，顺便查看一下相关源码了解了其底层实现机制。特地记录一下。 由于本文主要是从源码的角度分析 InheritedWidget 的工作原理，所以对阅读本文的小伙伴的 Flutter 知识有一定的要求。…"}, {"id": "6844903985099309070", "title": "浅谈flutter", "desc": "移动端的原生开发，比如Android，对应的开发语言java或kotlin；IOS，对应的开发语言Objective-C或者Swift。原生开发具有速度快，性能高，可实现自定义复杂动画，用户体验较好；还能够访问平台全部功能（例如GPS、摄像头）。但是人力成本较高，需要两个特定的…"}, {"id": "6898958705853726733", "title": "小白篇 -- 前端人的 Flutter 试探", "desc": "1. 新建 参考文档中对 Android Studio and Intellij、Visual Studio Code 对应的新建方式。 2. 目录 1. 创建相关页面 2. 创建基础布局页面（bottomNavigationBar 底部导航栏） 3. 将基础布局页面放置 Ma…"}, {"id": "6844904153806798862", "title": "Mac 配置 Flutter 环境，运行 iOS Android 两端", "desc": "1.在 Flutter 官网 下载其最新可用的安装包，解压之后，放在想安装的目录下，记住文件目录，比如：/Users/liupengkun/Documents/flutter_learn。 3.使用镜像，由于在国内访问 Flutter 有时可能会受到限制，Flutter 官方为…"}, {"id": "6844904063390187533", "title": "dart语言基础", "desc": "近日开始学习Flutter，自然也就免不了学习dart语言，作为一名C#转前端，时隔多年又用上了强类型语言，配合vscode使用，颇为亲切，仿佛又回到了快乐的winform开发时代。dart学习的话，本人是官网入门教程配合《Flutter 从0到1构建大前端应用》，dart官网…"}, {"id": "6975927031242424357", "title": "Flutter 记录在Android9 系统中无法加载出图像的问题", "desc": "Flutter app完成快结束的时候发现在部分android手机上无法加载出图片的问题，第一步当时是百度查。 第一次查就查到要在AndroidManifest.xml 路径为： 中设置属性： 在我设"}, {"id": "6844903830048473102", "title": "Flutter 基础Widgets之容器Container详解", "desc": "Container是一个非常常用的容器组件，它包含了常规的Padding、BoxDecoration、DecorationImage、Border、BoxShaow、transform等等一系列Widgets。 alignment child的对齐方式 Alignment(0.…"}, {"id": "6939904711344521230", "title": "使用git_hooks库助力Flutter团队编码规范", "desc": "随着Flutter 2.0的发布，越来越多的公司和个人都在尝试使用Flutter来编写性能优异、跨平台、渲染一致性好的App。当然，在追求效率的同时，也不要忘了给你的代码添加更多严谨的限制，来保证代码的质量。今天我给大家推荐一个插件，用于给提交代码到Github或者GitLab…"}, {"id": "6844903763183042567", "title": "让我们在2019年重新认识 Flutter", "desc": "现在是2019年，让我们认真来看看备受瞩目的 Flutter，重新认识一下它。本文首先简要回顾移动开发（跨平台开发）的发展历史，并谈谈不同阶段跨平台解决方案的优劣；接着从 WHAT / HOW / WHY 三个方面详细来聊聊 Flutter，并结合简单的 Dart 代码说说开发者"}, {"id": "6903195729885003790", "title": "Dart Json序列化方案探索-插件展示", "desc": "一个可以把json字符串直接在运行时转换成对象的插件. 你可以直接通过value = json.key的方式访问由json内的成员变量和方法, 甚至是类. 插件灵感来自dartwatch-JsonObject. 获取一个json的字符串. 这个字符串可以从任何途径获取. 为了方…"}, {"id": "6902742974082318349", "title": "【Flutter 1-12】Flutter手把手教程Dart语言——什么是泛型和泛型的使用场景", "desc": "如果你查看数组的API文档，你会发现数组List的实际类型为List。&#x3C;…> 符号表示数组是一个泛型（或参数化类型）通常使用一个字母来代表类型参数，比如E、T、S、K 和 V 等等。 如果你查看数组的API文档，你会发现数组List的实际类型为List&#x3C;E>…"}, {"id": "6844903776810172429", "title": "Dart 简单入门", "desc": "HYPERS 前端工程师，黄术，在使用 Dart 过程中的一些学习记录。"}, {"id": "6844904153806962701", "title": "Flutter 与 iOS 功能比较", "desc": "生存时间不同，widgets 一直存在且保持不变，直到当它们需要被改变，当 widgets 和它们的状态被改变时，Flutter 会构建一颗新的 widgets 树； views 在改变时并不会被重新创建。 Flutter 的 widgets 非常轻量。widgets 本身并不…"}, {"id": "6844903747055779847", "title": "Flutter-NotificationCenter", "desc": "Flutter移动端跨平台框架dart语言编写的通知组件，方便全局对象之间的通信（视图更新状态改变等。。。。）"}, {"id": "6844904150409412621", "title": "[译]Flutter - Dart的Mixin", "desc": "原文在这里。写的不错，推荐各位看原文。 只要一个类是继承自Object的而且没有定义构造方法，那么这个类可以是一个Mixin了。当然，如果你想让mixin的定义更加的清晰，可以使用mixin关键字开头来定义。具体请参考这里 原文截图体会一下风格。 在经典的面向对象编程语言里一定…"}, {"id": "6998758480890822669", "title": "Flutter路由插件-r_router（全面适配Navigator2.0）", "desc": "1.简介 在开发Flutter开发的过程中，路由跳转页面是十分常见的，市面上也有许许多多的路由插件包，例如fluro、ff_annotation_route、routermaster等等，但在个人使用"}, {"id": "6995114009720520712", "title": "flutter Container的decoration", "desc": "这是我参与8月更文挑战的第11天，活动详情查看：8月更文挑战 decoration： 背景装饰 decoration可以设置边框、背景色、背景图片、圆角等属性，非常实用。对于transform这个属性"}, {"id": "6844903709801988110", "title": "Flutter免费视频教程第一季：开发环境搭建", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 Flutter可以与现有的代码一起工作。在全世界，Flutter正在被越来越多的开发者和组织使用，并且Flutter是完全免费、开源的。我们将在这里揭开他可爱而神奇的面纱。 这个只…"}, {"id": "6977303573830828068", "title": "Flutter应用如何快速给项目增加云同步功能", "desc": "如何快速给项目增加云同步功能 今天以一个漂亮的开源记账项目为例，来给大家提供一个思路，用最简单的方法将一个本地存储项目变为可以云同步的项目。 这个App名叫《出入》，地址在https://github"}, {"id": "6995379858549243941", "title": "关于 Flutter app 一键置灰的操作设置真的简单至极 ｜8月更文挑战", "desc": "这是我参与8月更文挑战的第5天，活动详情查看：8月更文挑战 废话开篇：这篇文章对于APP的一键置灰功能如何实现说一下个人感受，android不太懂，没有发言权，问过同学后得知安卓可一键设置置灰效果，感"}, {"id": "6968946479591325710", "title": "为什么 Flutter 已经为企业应用程序开发做好了准备", "desc": "这篇文章很硬，如果你正在架构一个 APP，或者你正在写 flutter 技术论文，可以参考下。 为企业应用程序开发做好准备了吗？长期以来，这一直是开发者提出的最多的问题之一。但是在 Beta 发布之后"}, {"id": "6932115520405635079", "title": "Flutter 路由我定", "desc": "Flutter 1.22 发布带来了 Navigator2.0 , 给了开发者更多选择，你可以灵活地管理路由栈，可以处理在浏览器里面输入的情况，也可以嵌套多个 Navigator，虽然仍然有缺点，但是基本上可以做到 路由我定。下面跟我一起走进 Flutter 路由的世界。本文源…"}, {"id": "6882315352009605128", "title": "一文道尽Flutter最新最全的学习资料", "desc": "为大家整理了Flutter最新最全的学习资料请查收。 Google IO 2018 [1.1K👏] - 构建美观，灵活的用户界面。 Presentation - 为什么我会选择Flutter 由Helio S. Junior提供。 Flutter Web - Flutter …"}, {"id": "6844903926697820174", "title": "Flutter 开发者国服最强辅助 App：FlutterGo  2.0 强势归来！！！", "desc": "沉淀了数月，FlutterGo 终于迎来了第二次迭代更新！不仅新增个人中心的概念，还提供了第三方共建工具、并且，我们还完成了 FlutterGo web 版的开发。而这些~都在我们FlutterGo官网可见!!! Flutter 依旧在不断地更新，但仅凭我们几个 Flutter…"}, {"id": "6939065092965629983", "title": "这还能叫Flutter？用它复原一个叫《是男人就坚持100秒》的游戏｜技术点评", "desc": "这里我用了一款基于的Flutter的游戏引擎，名为FLAME。使用它开发游戏，基本用不到Flutter里的那些Widget，所以就有了标题里的提问 这里用了一个简单的判断机制，并没有精确到飞机的外轮廓。一是精确到外轮廓将带来更大的运算量，也比较复杂。二是那样的游戏体验不见得好，…"}, {"id": "6987957991060275231", "title": "Flutter实现代码提示功能", "desc": "1.简介 在实现代码提示功能前，我们先来看看什么是代码提示，当我输入关键字String 时，如果输入到 Stri 的时候，编辑器会为我找出所有包含 Stri 的代码关键词，这个时候，我们只要选中需要输"}, {"id": "6844903864525684749", "title": "2019年，Flutter 和 React Native 谁主沉浮", "desc": "大家都说简历没项目写，我就帮大家找了一个项目，还附赠【搭建教程】。 本文是帮助你了解这两个应用程序开发框架区别指南。咱们知道，几年前开发和维护iOS和Android的应用程序曾经是一项艰巨的任务(独立的代码库|独立的开发团队|开发成本也忒高)。 一堆狗屎。 移动行业渴望进行一场…"}, {"id": "7000593208417714207", "title": "[iOS翻译]iOS中的快速行动", "desc": "瞬间导航 在这篇文章中，我解释了快速操作，而不是小工具。 快速行动在所有运行iOS 13或更高版本的设备上都可用。 长按或强行触摸（如果有的话）应用图标时，会显示可用的快速操作列表。 列表的位置取决于"}, {"id": "6919633080097439757", "title": "【Flutter 技能篇】你不得不会的状态管理 Provider", "desc": "Provider，Google 官方推荐的一种 Flutter 页面状态管理组件，它的实质其实就是对 InheritedWidget 的包装，使它们更易于使用和重用。关于 InheritedWidget 不做过多介绍，本篇文章主要较全面地介绍 Provider 的相关用法，能在…"}, {"id": "6997010270048485390", "title": "【Flutter 从 0 到 1】为什么选择 Flutter ？", "desc": "这个专栏记录了我是如何从零基础开始学习 Flutter，以及在学习过程中踩过的坑，到最后输出一份属于自己的项目模板的过程。"}, {"id": "6992119472995696647", "title": "Express Flutter SDK 全面支持空安全", "desc": "在 GitHub 上有非常多因为null导致 Dart 代码出现异常的 issue，为了从源头上解决 Null errors，Dart 团队在 2.12 版本中支持空安全特性。"}, {"id": "6995855894529441829", "title": "Flutter 分享功能：facebook,whatsapp,twitter和系统分享", "desc": "这是我参与8月更文挑战的第13天，活动详情查看：8月更文挑战 之前有有一些需求，需要单独分享到某些App，于是写了这个插件，开始的时候只支持安卓版本，最近添加了ios支持，测试后发布了最新版本，希望能"}, {"id": "6998061901775110175", "title": "Flutter 代码混淆 混淆Dart代码", "desc": "这是我参与8月更文挑战的第19天，活动详情查看：8月更文挑战 代码混淆 Flutter的代码混淆 flutter的代码混淆就是混淆dart代码。 代码混淆是修改应用程序二进制文件的过程，以使人们更难以"}, {"id": "7002134877185572871", "title": "Flutter Dio源码分析(三)--深度剖析", "desc": "文章系列 Flutter Dio源码分析(一)--Dio介绍 Flutter Dio源码分析(二)--HttpClient、Http、Dio对比 Flutter Dio源码分析(三)--深度剖析 Fl"}, {"id": "6950514701969129486", "title": "Flutter - GetX状态管理", "desc": "学习了Flutter&Dart也有一段时间了，从开始以为的嵌套地狱，到现在觉得也还不错！似乎没有那么可怕，在我逐渐的熟悉了Flutter以后，学会了开始封装Widget，学会了开始抽象Function"}, {"id": "6875511387943075854", "title": "Dart 也想要甜甜的语法糖", "desc": "不得不说，我真的不喜欢这种先想条件，然后再想着在外面包一层 if 这种逆着思维顺序的代码方式（毕竟大家都活在「TENET」的世界里😏），尤其 if 里的条件比较长的时候。 众所周知，dart 里有 ?. 和 ?? 这种判空操作符，于是上面的代码可以简化成这样： 新的空安全机制…"}, {"id": "6844904008876818445", "title": "Flutter的一个更精简的状态管理工具：consumer", "desc": "consumer 是一个参考 react-consumer 方式的状态管理, 使用 dart 的 Stream 做发布订阅. 类 react 项目，当项目到一定程度，必不可少需要一个状态管理器，flutter 有着不少状态管理库，BLOC、Provider、redux 等等；但…"}, {"id": "6844904163776659469", "title": "Flutter踩坑日记（持续更新...）", "desc": "刚开始去使用一些弹窗组件（例如时间选择器什么的），发现里面的确定和取消都是英文，就去百度了一下方法。 这个坑，花了我整整一天的时间（其实就是电脑卡，10分钟一小卡，30分钟一大卡，不好调试）。 上面就是一个例子了，现在开始讲解。 dio3.0之后就使用MultipartFile…"}, {"id": "6844903937527513102", "title": "前端 Flutter 劝退指南 ", "desc": "都 9012 年了，Flutter 有多火，就不需要我多说了，之前掘金首页顶着好长一段时间的 Flutter 视频教程推广足以证明。 那么正如必须要先 ”入门“ 才能 ”出门“，那么前端劝退 Flutter 前也必须得先了解 Flutter。 ......然后劝退=_=。【想直…"}, {"id": "6844903909627019278", "title": "Flutter | 可能是目前最好用的仿微信聊天长按弹出框 WPopupMenu", "desc": "基于这个需求，我封装了一个 「WPopupMenu」。 具体 Demo 在：「popup_route_page.dart」。 后面我会出一篇关于该组件的封装逻辑，敬请期待。"}, {"id": "6979825127693221896", "title": "Flutter 环境配置", "desc": "Flutter 环境配置 一、使用镜像 由于在国内访问Flutter有时可能会受到限制，Flutter官方为中国开发者搭建了临时镜像，大家可以将如下环境变量加入到用户环境变量中： 二、配置Git环境 "}, {"id": "6844903950345306125", "title": "Flutter 路由跳转及传值详解(Navigator的使用)", "desc": "在Flutter中想要实现页面间的跳转和传值的话，离不开两种路由：基本路由命名式路由官方说的是静态路由和动态路由，不过我习惯了这样叫，所以就暂且这样说吧！基本路由基本跳转基本路由的跳转使用push跳到"}, {"id": "6860421355767087118", "title": "Flutter 核心原理与混合开发模式", "desc": "在 「Fan 直播」的 Flutter 混合开发实践中，我们总结了一些 Flutter 混合开发的经验。本文第一篇章将从 Flutter 原理出发，详细介绍 Flutter 的绘制原理，借由此在第二章来对比三种跨端方案；之后再进入第三篇章 Flutter 混合开发模式的讲解，主…"}, {"id": "6968313475491692551", "title": "[Flutter翻译]纠结动态语言符号，独特解决热负荷的原子问题", "desc": "复原的结构化类型爱好者 将Flutter的开发时间体验与Dart编程语言脱钩。 Hydro-SDK是一个项目，有一个巨大的、雄心勃勃的目标。\"成为Flutter的React Native\"。 它旨在通"}, {"id": "6844904116079050765", "title": "Flutter截图分享要点", "desc": "App的分享功能一般都会有屏幕截图分享。一般Flutter的截图功能都是通过RepaintBoundary来实现的，具体实现很简单，这里不做阐述。本文章主要讲两点：长截图及图片拼接。 实际需求中，需要截图的区域可能会超过一屏，即需要长截图。这个区域一般嵌套在可滚动容器中，例如S…"}, {"id": "6881589444194140173", "title": "【Flutter】控制GIF播放", "desc": "1.签到入口图片是gif，循环播放gif动画两次，暂停3秒再循环播放两次。 2.点击gif图片进入签到页面，返回后gif图片不再播放只显示第一帧图像。 了解需求后先分析一下Flutter的图片组件Image好像原生不支持控制gif播放功能。最简单粗暴的解决方案如下： 分别准备一…"}, {"id": "6844903983501279246", "title": "flutter好用的轮子推荐五-列表左右滑动带出按钮选项", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6844904009103327240", "title": "Flutter折腾记一（支持横屏的视频控件）", "desc": "又有一段时间没有写文章了，闲暇时间比较少。痴迷游戏。哎~~~ 最近在玩flutter，对于vuejs感觉没啥可分享的了。每次看到群友们问的问题，我都只能叹口气。 可能是由于平时比较喜欢看视频吧，上手flutter之后，还没多久呢，就想搞一搞视频播放。中间陆陆续续用了社区好几个现…"}, {"id": "6844904193782743048", "title": "必备单品，FSearch", "desc": "说到 居家旅行，bi~bi~bi~bi~ 的必备单品，相信开发者们总能在脑子 🧠 中从自己过去积累的知识库中蹦出那么几个心仪的单品。 然而，就在今天，我们试图向开发者们的知识库中添加一个全新的 必备单品 —— F~~Search 🎊。 FSearch 是有神圣使命的，它要力…"}, {"id": "6860996244341260296", "title": "[Flutter翻译]我对Flutter的第一次失望", "desc": "我喜欢Flutter。我喜欢开发一次，让代码在Android和iOS上同时运行。我喜欢这样可以节省很多时间。我喜欢现在做一个web开发者，不需要做任何额外的工作。我喜欢热重载。我喜欢通过将小部件组成布局来快速构建用户界面。我喜欢做一个ListView更简单。我喜欢状态管理。(好…"}, {"id": "6979176952607277092", "title": "用React实现Flutter的可视化布局的一次尝试", "desc": "Flutter是否也可以像iOS的xib布局那样可视化编辑布局，直接生成dart代码？带着这个想法去尝试了这个想法，目前初步完成了第一个版本"}, {"id": "6974280392605958180", "title": "Dart语言async函数不正确的异常处理引发的异常", "desc": "小测试 这样写platform channel调用并处理异常的代码，有啥问题？ 结果往下看： 代码这样直接用try-catch是无效的，不会走到catch块里！且日志里直接显示Unhandled Ex"}, {"id": "6844903992447729677", "title": "flutter好用的轮子推荐十二-flutter一个全屏动效的抽屉组件", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6844904141957906446", "title": "flutter全屏沉浸式状态栏+标题栏|flutter凸起Tabbar导航", "desc": "如上图：状态栏是指android手机顶部显示手机状态信息的位置。 android 自4.4开始新加入透明状态栏功能，状态栏可以自定义颜色背景，使titleBar能够和状态栏融为一体，增加沉浸感。 flutter项目目录下找到android主入口页面MainActivity.kt…"}, {"id": "6972714270291132446", "title": "[Flutter翻译]Flutter: 用`FocusableActionDetector`构建自定义控件", "desc": "当在Flutter中构建一个自定义的UI控件时，很有可能只是使用一个GestureDetector就结束了，但这样做将是一个错误！尤其是当您打算支持用户使用鼠标或键盘等其他输入方式时。尤其是当您打算支"}, {"id": "7002135580272230408", "title": "Flutter Dio源码分析(四)--封装", "desc": "文章系列 Flutter Dio源码分析(一)--Dio介绍 Flutter Dio源码分析(二)--HttpClient、Http、Dio对比 Flutter Dio源码分析(三)--深度剖析 Fl"}, {"id": "6987649194408443912", "title": "【Flutter 基础】 视图布局-前言", "desc": "由于 Widget 布局的种类多达 28 + 1 种，单篇文章中无法将其一一列举说完，所以我打算将其分为多篇文章来对其进行说明。"}, {"id": "7001619609765806094", "title": "[Flutter翻译]每个项目都有独立的Flutter版本 - Flutter版本管理器", "desc": "在这篇文章中，我们将学习Flutter中的版本管理。在这里，我们将看到如何在flutter中设置和进行版本管理。所以，让我们开始吧。 之前，我们了解了什么是 Flutter 版本管理器（FVM）以及如"}, {"id": "6922346808769413128", "title": "Flutter工程体系化建设与实践：flutter-zycli-app脚手架（一）", "desc": "2019 年无疑是 Flutter 技术如火如荼发展的一年。采用 Flutter 使业务在需求节奏不变的情况下人力投入减少一半，对缓解业务研发压力起到了明显的作用；应用的整体性能和稳定性也与 Native 基本持平；同时其优秀的跨多端多平台能力，使得 Flutter 技术已经成…"}, {"id": "7003907411580813343", "title": "Flutter深入浅出组件篇---OverflowBox、SizedOverflowBox", "desc": "OverflowBox介绍 OverflowBox 允许子控件超出父控件的边界。这个特性主要可以用来实现文字或者按钮角标的。 示例代码 本文中很多效果都没有截图，可下载源代码运行项目 源代码地址，或者"}, {"id": "6994633196419678244", "title": "2小时内封装一个 Flutter 仿iOS全屏移动悬浮窗？干就完了！ ｜8月更文挑战", "desc": "这是我参与8月更文挑战的第3天，活动详情查看：8月更文挑战 废话开篇：大家都知道在苹果手机设置里面有“辅助触控”这样的一个开关，它其实就相当于一个屏幕软键盘，可以拖动到屏幕内的任意位置。闲置的时候为半"}, {"id": "6996461470879858724", "title": "学习flutter必备之原理理解", "desc": "这是我参与8月更文挑战的第 12 天，活动详情查看：8月更文挑战。为应掘金的八月更文挑战， Flutter，什么是 Widgets、RenderObjects 和 Elements？ 有没有想过 Fl"}, {"id": "6999580123276001310", "title": "Flutter 做应用开发时 Charles 抓不到接口的解决办法", "desc": "这是我参与8月更文挑战的第3天，活动详情查看：8月更文挑战 Flutter 使用 Charles进行抓包 1.问题 尝试用其它客户端应用请求网络接口，Charles 都是可以成功抓取的，只有 Flut"}, {"id": "6844904150182920199", "title": "【译】Flutter 1.17 | 2020年度第一个稳定版本，你想了解什么？", "desc": "2020年5月6日，Flutter终于迎来的本年的第一个稳定版本：1.17.0，距离上一个稳定版本的发布已经过去了将近5个月（146天）。受到世界范围的你我都知道的情况影响，今年的Google I/O也被取消，一定程度影响了本次版本的发布。同时在临近发布前出现了具有严重影响的B…"}, {"id": "6948604732822781966", "title": "手写一个在Flutter里展示”精灵图“的Widget", "desc": "首要任务，就是得有一个支持”精灵图“的Widget，既然是学习，那就不能用别人开发好的，必须得自己亲手造轮子。 精灵图的英文是spritesheet（精灵表单），就是在一张图上放置多个图形，只需要加载到内存里一次。在展示的时候，仅展示单个图形的区域。一般多个图形多用来放置连续动…"}, {"id": "6967257683111968775", "title": "flutter 启动屏幕使用 Lottie 动画", "desc": "因为出差关系来了重庆，很美的一个城市，走在街道上感觉就是在爬山，生活节奏相对比较慢，希望疫情远离我们。 感谢群里重庆好友能抽时间出来聚会。 正题开始 lottie 是一个夸平台的动画库，用这个"}, {"id": "7000196358925713444", "title": "Flutter深入浅出组件篇---TabBar", "desc": "TabBar介绍 ​ 一个显示水平行选项卡的Widget。 通常创建为 AppBar 的 AppBar.bottom 部分并与 TabBarView 结合使用 在什么情况下使用TabBar ​ 当你的"}, {"id": "6965818879524208671", "title": "Flutter还是React Native？谁是2021年构建移动应用程序的最佳选择？", "desc": "计划在2021年进行响应式开发？但不确定你应该选择哪种技术来快速开发你的应用程序，而且还要降低成本？如果对两个问题的回答都是肯定的，那么您将有两个主要选择：Flutter或React Native！ "}, {"id": "6941248989019209736", "title": "Flutter Web在美团外卖的实践", "desc": "美团外卖商家端业务围绕数百万商家，在 PC 和 App 上分别提供了交易履约、运营、广告、营销等一系列功能，且经常有外投 H5 的场景（如外卖学院、商家社区、营销活动等）。在这种多形态的业务场景下，如何保障多端体验的一致性，以及如何提升多端迭代的效率，一直是商家端产研关注的重点…"}, {"id": "6844904008830681101", "title": "Flutter 必备开源项目", "desc": "Flutter是Google推出的一套开源跨平台UI框架，可以快速地在Android、iOS和Web平台上构建高质量的原生用户界面。同时，Flutter还是Google新研发的Fuchsia操作系统的默认开发套件。在全世界，Flutter正在被越来越多的开发者和组织使用，并且F…"}, {"id": "6987688370977636389", "title": "如何优雅的在flutter中使用logger", "desc": "flutter中的logger flutter中的日志使用print实现，但是print只能显示一种颜色，这样我们调试起来比较麻烦。所以，我在ansicolor的基础上实现了一个可以控制颜色的日志记录"}, {"id": "6844903592587952142", "title": "Flutter教程(一) Flutter简介", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 Flutter可以与现有的代码一起工作。在全世界，Flutter正在被越来越多的开发者和组织使用，并且Flutter是完全免费、开源的。简单来说，Flutter是一款移动应用程序S…"}, {"id": "7005009973226766350", "title": "Flutter深入浅出组件篇---Container、AnimatedContainer", "desc": "Container介绍 如果组件需要一些背景样式、形状、尺寸限制就可以用Container来进行包裹子组件用于装饰和定位，所以Container 是一个组合类容器。它是DecoratedBox、Con"}, {"id": "6999778495060508709", "title": "Flutter一切皆widget但是不要将所有东西放入一个widget", "desc": "这是我参与8月更文挑战的第21天，活动详情查看：8月更文挑战。为应掘金的八月更文挑战， 作为 Flutter 开发人员，我相信您在您的开发生活中至少听说过这句流行的句子：“**一切都是widget”。"}, {"id": "7002133607858831391", "title": "Flutter Dio源码分析(二)--HttpClient、Http、Dio对比", "desc": "文章系列 Flutter Dio源码分析(一)--Dio介绍 Flutter Dio源码分析(二)--HttpClient、Http、Dio对比 Flutter Dio源码分析(三)--深度剖析 Fl"}, {"id": "6844903937972109320", "title": "Flutter 样式基础之 MediaQueryData", "desc": "MediaQueryData 它是MediaQuery的主要信息载体，是用于存储MediaQuery的各项数据的实体类。如果传入的context没有MediaQuery信息，则调用MediaQuery.of方法将会抛出异常。除非nullOk参数设置为true，在这种情况下它返回…"}, {"id": "6844903635273383949", "title": "Flutter 登录退出功能注意事项", "desc": "实现登录功能直接上代码，程序入口：现在我们要定义一个loginButton的onPressed事件的回调函数_loginWithAvatarAndPassword来完成重新创建路由栈的工作，这样就可以"}, {"id": "6844903934356619278", "title": "[开源] 从web端开发到app端开发也许只有一个Flutter MVVM的距离", "desc": "做为一个开发人员，选择一款得心应手的开发框架对提高生产效率和愉悦的编码体验是尤为重要的。近两年我从后端开发转向web端开发，开发重心也由之前数据层面转变为现今的展现层面。web端有很多出色的开发框架，Vue.js、React、Angular、Ember.js 等等都深受广大we…"}, {"id": "6854573220238999559", "title": "一切皆组件的FLUTTER，安能辨我是雄雌", "desc": "从一开始接触Flutter，相信读者都会铭记一句话，那就是——一切皆组件。今天我们就来体会一下这句话的神奇魔力，我们先从实际的产品需求说起。 我们要实现如上图所示的日期选择器，App是iOS风格。 Flutter SDK自身有类似上图的日期选择器，但是Material Desi…"}, {"id": "6844903943529562125", "title": "Flutter之Color对象（译）", "desc": "color是一个ARGB（A透明度，R就是red,G是gree,B是blue,RGB是光学三原色）格式的不可变的32位值. 例如flutter的logo,是完全不透明的，red部分值是0x42 (66)，gree部分值是0xA5 (165)，blue部分值是0xF5 (245)…"}, {"id": "6844903925250785294", "title": "[Flutter]还在大量使用TextEditingController？试试这种解决方案", "desc": "当用户输入大量信息时，通常会采用TextField列表来解决，这时如果需要对每个TextField进行控制或监听就需要大量的TextEditingController。 这里提供另一种思路，解决大量使用TextEditingController和信息整理困难的问题。 这个Map…"}, {"id": "6844903617246265351", "title": "Flutter尝鲜：跨平台移动应用开发", "desc": "本人使用Flutter开发的一个图文App《每日图文》，可以同时运行在Android和iOS上，欢迎体验，喜欢的话还不吝Star一下。 随着移动App开发成本越来越高，近几年，移动跨平台开发的呼声层出不穷，如FaceBook的推出React-Native，大受欢迎，但其性能并不…"}, {"id": "6942639550430707725", "title": "Flutter Bloc 03 - 基础对象 同步、异步 await yield 操作", "desc": "我们可以发现在 bloc 模块中，非常多 yield* yield async* ，如何正确使用还是很重要的，所以这篇文章把同步、异步的对应的操作符都整理出来。 我如果把 sync 的 * 去掉,编辑器会提示这是固定格式。 这里就直接返回了, 没有后续的任何操作。"}, {"id": "6844904200850112520", "title": "从0开始设计Flutter独立APP | 第二篇: 完整的国际化语言支持", "desc": "国际化语言的支持，是很多APP都有的一个强需求，APP无论大小，只要还不想放弃国外的客户，一般就需要支持国际化。 Flutter官方方案提供了国际化的基础支持，如Flutter内置组件的国际化、语言代理、Widget使用语言包、语言设置回调等，并支持自定义第三方类来扩展，可以参…"}, {"id": "6844904012848824333", "title": "你有哪些写了Flutter 之后才知道的事儿", "desc": "Hello,大家好，我又更新主题文章了，当然还是聊一聊在Flutter 开发中的那些“奇闻异事”。这篇咱们来说一说在开发过程中应该知晓的事儿 避免较多的引用不必要的第三方包，比如使用一些工具方法插件，会很大。用户可能会觉得APP好大，它并不像是王者荣耀``和平精英，玩起来觉得还…"}, {"id": "6844903893126610951", "title": "Flutter 侧滑栏及城市选择UI的实现", "desc": "目前移动市场上很多业务都需要开发Android/IOS两个端，开发成本比较高. Flutter 在跨端上凭借着性能优势关注量，使用度也持续上升.今天给大家分享在去年就写的一个Flutter版本的侧滑栏. 侧边是一个支持手势滑动的SliderBar,一个自定义的StatefulW…"}, {"id": "6844903569196335112", "title": "Flutter 体验 —— Widget 的状态管理", "desc": "Flutter 的设计思想是将视图与数据分离，思路颇似 React。本文简述了有关 Flutter 状态管理的一些要点。"}, {"id": "6844903874264825870", "title": "初略讲解Flutter的包管理", "desc": "一个完整的APP在实际开发中往往会依赖很多包，而这些包通常都有交叉依赖关系、版本依赖等，如果由开发者手动来管理应用中的依赖包将会非常麻烦。因此，各种开发生态或编程语言官方通常都会提供一些包管理工具，比如Android使用Gradle来管理依赖，iOS使用Cocoapods或Ca…"}, {"id": "6844904048663986190", "title": "Flutter 记录 - Flutter 与跨平台框架们的众乐乐", "desc": "跨平台技术，不仅仅是指的当前移动设备的平台，绝大部分电脑语言都是跨平台的,如 java， c/c++ 等等。而移动领域的跨平台，则面临了操作系统，设备版本，设备机型等各类问题。 为了解决不同操作系统终端开发一致性的问题，移动跨平台技术逐渐兴起，发展到今天，移动跨平台技术在某些应…"}, {"id": "6861840238307328014", "title": "[Flutter翻译]Dart的语言艺术", "desc": "Flutter和Flutter Web正在引起大量的讨论，这是理所当然的，他们正在推动UI开发的边界。Flutter是用Dart编写的，而Dart刚刚在 \"UI as Code \"的旗帜下获得了许多功能，这些功能将给每个Flutter开发者的日子带来欢乐。这是一个令人兴奋的时代…"}, {"id": "6844903895819534343", "title": "InhertedWidget和它的儿子们", "desc": "对于赶时间的同学看到这里就可以回去搬砖了。下面留给还有五分钟时间浏览的同学。 google 在flutter widget of the week 中介绍 inheritedwidget， 短短的两个简短的视频，让人看到了flutter的用心，外语一般的我也能把概念看得个大概。…"}, {"id": "6844903846850871310", "title": "Dart编程语言入门学习", "desc": "1.数据类型BooleanNumberStringConstListMapdynamic2.运算符operator_arithmeticoperator_asignmentoperator_condi"}, {"id": "6844904202305536007", "title": "[Flutter翻译]使用图像占位符、预缓存和禁用的导航过渡来改善感知性能", "desc": "感知性能是指一个应用程序给用户的感觉有多快。本文介绍了三种策略，您可以在您的应用程序中使用它们来提高感知性能：图像占位符、预缓存图像和禁用导航过渡。 当用户在等待图片加载，然后它们最终出现时，布局可能会四处移动。通过在布局中为图片占位符留出空间，您可以避免这种移动，以确保更好的…"}, {"id": "6844904066989064205", "title": "Flutter 记录 - Flutter State Management (Redux)使用介绍", "desc": "flutter 是由谷歌公司于 2015 年推出的移动 UI 框架。其选用 Dart 作为开发语言，内置 Material Design 和 Cupertino 两种设计风格 Widget 部件，使得它可以快速在 ios、android 设备上构建高效、高品质、高流畅度的用户 …"}, {"id": "6844903850260824071", "title": "Android 集成 Flutter 及通信交互详解", "desc": "前不久开源了用Flutter开发的一个音视频类App客户端，欢迎大家star, fork。 在纯跨平台开发方案带来的高效开发效率的同时，混合开发也为原生App提供了更方便更快捷的功能实现。例如，React Native 热更新，跨平台双端UI视图等。 了解React Nativ…"}, {"id": "7002523088319414279", "title": "Flutter 动画", "desc": "AnimatedWidget简化了什么？ 首先看一段不使用AnimatedWidget的代码： 给animation添加了Listener，动画执行的每一帧都会回调这个Listener，在这个List"}, {"id": "6999506558719655944", "title": "Flutter key简单介绍", "desc": "Flutter Key 当widget在widget tree中移动时,key可以保留它的状态. key可用于保留用户的滚动位置,或在修改集"}, {"id": "7001463526745178142", "title": "Flutter Key的原理和使用 (二) Widget 和 Element 的对应关系", "desc": "上一篇文章中,我们遇到了一个问题 , widget换位置的时候,出现了一些意外,并没有按照我们所想去调换位置, 这时候我们就很困惑, 那是在我们看来,写了一个`widget`,那这个`widget`就"}, {"id": "7004195798497886215", "title": "探索Flutter_Image显示Webp逻辑", "desc": "简介 最近探索了一下新增Flutter的Image widget对webp做一个stopAnimation的拓展的Api，顺便了解一下Image整个结构和对一些多帧图片的处理。 我们先看看Image的"}, {"id": "6982460666976141343", "title": "Kraken v0.8.0 发布 — 支持 Flutter 2.0", "desc": "官网：https://openkraken.com/ Github: https://github.com/openkraken/kraken 自 2021年4月21日开源以来，北海（Kraken）就"}, {"id": "6998364100619141156", "title": "Flutter中如何选择StatelessWidget和StatefulWidget", "desc": "Flutter作为“新”的跨平台UI开发框架，延续了React组件化的开发思路，开发者可以通过一个个组件来构建完整的App的界面。由于React中只提供了一个基础组件类React.Component，"}, {"id": "6999187900264873992", "title": "Flutter FractionallySizedBox 按比例设置Widget的尺寸", "desc": "FractionallySizedBox 按比例设置Widget的尺寸 有时候,应用的设计是按照比例给出的"}, {"id": "7000890984791801893", "title": "Flutter版本控制fvm", "desc": "这是我参与8月更文挑战的第24天，活动详情查看：8月更文挑战。为应掘金的八月更文挑战， flutter版本控制 先安装  choco powershell 管理员身份运行 不会的话，先打开一个powe"}, {"id": "7002591295101206558", "title": "Flutter Key的原理和使用(五)  需要key的实例:可拖动改变顺序的Listview", "desc": "你可能使用过`ListView`组件,它可以调整,显示和滚动项目列表. 但是不能做的一件事就是在列表中移动项目.幸运的是,有`ReorderableListView`."}, {"id": "6935520179262586917", "title": "Flutter 2.0 发布 | 针对 Web，移动端和桌面端构建的下一代 Flutter", "desc": "使开发人员能够为任何平台创建美观、快速且可移植的应用程序。 以及针对 Chrome，Firefox，Safari 或 Edge 等浏览器的 Web 体验。 Flutter 甚至可以嵌入到汽车，电视和智能家电中，为环境计算世界提供普遍且可延展的体验。 不从您要定位的平台开始，而要…"}, {"id": "6916313039655010318", "title": "2021首次发车，Flutter Fair正式开源了", "desc": "在正式开源前，我们已经通过两篇文章，介绍了Fair的设计初衷和技术思路，这里不再赘述。 Fair是面向Dart的框架，虽然JavaScript是世界上“最好的语言”，但是我们仍然选择面向Dart而不是JS。有两个考量： 基于JS的框架社区已经存在了，不想重复造轮子。 面向JS存…"}, {"id": "6962386416835756068", "title": "Flutter入门与实战（一）：我的第一个 Flutter 应用之旅", "desc": "Flutter 2.0第一个 应用，学习之前建议简单了解一下 Dart 这门语言的，涉及其他开发语言不太相同的地方会在文章里提出来。"}, {"id": "7002242058618568740", "title": "Flutter Key的原理和使用(四) GlobalKey 的用法", "desc": "Flutter Key的原理和使用(四) GlobalKey 的用法 GlobalKey是在整个应用程序中唯一的键。"}, {"id": "7003224567984422943", "title": "Dart中的Stream初步研究", "desc": "1、stream是什么 Stream是一些列异步事件的序列。 2、Stream的接收 ① 使用异步for循环 ② 使用stream的listen来监听 3、stream的种类 ① 单订阅stream "}, {"id": "6844903764617330702", "title": "Flutter 44集免费基础视频教程 ", "desc": "Flutter在2019年非常耀眼，身边所有的人都在学习Flutter，前端程序员在学，Android程序员在学，IOS程序员也在学，好像不学你就落伍了一样。为了打消小伙伴内心的焦虑，技术胖带来44集Flutter视频教程。相信学完基本可以应付一些工作了，视频是基础+实例的形式…"}, {"id": "6997322140248702990", "title": "【Flutter 从 0 到 1】如何上手 Flutter ？", "desc": "这个专栏记录了我是如何从零基础开始学习 Flutter，以及在学习过程中踩过的坑，到最后输出一份属于自己的项目模板的过程。"}, {"id": "6844903843260530701", "title": "Flutter 面试知识点集锦", "desc": "谷歌大会之后，有不少人咨询了我 Flutter 相关的问题，其中有不少是和面试相关的，如今一些招聘上也开始罗列 Flutter 相关要求，最后想了想还是写一期总结吧，也算是 Flutter 的阶段复习。 本篇主要是知识点总结，如有疑问可点击各文章链接了解详情，或者查阅我 掘金专…"}, {"id": "6989900968842231838", "title": "Flutter 瀑布流如何仿写原生的复用机制？", "desc": "废话开篇：iOS与android在实现列表界面的时候是有重用机制的，目的就是减少内存开销，用时间换空间。个人感觉flutter并没有特别强调复用，关于listView.builder 的“复用”个人感"}, {"id": "6937124684030967845", "title": "「译」2021 Flutter 和 React Native 如何选|技术点评", "desc": "从 Flutter 诞生之日起，React Native 就一直被拿来与之作比较，从谷歌超过 700 万的相关搜索结果中可以一瞥这场跨端王位之争的激烈程度。本文不像我翻译的标题一样在捧一踩一，而是较客观地对两者进行评价并给出实际需求中如何抉择。 本文正是解决你的焦虑的，我们比较…"}, {"id": "6994998302970216456", "title": "用flutter很简单的实现一个时光轴样式【flutter20个实例之五】", "desc": "一、老套路，先看样式 图1是我业务中的样式，图2是下方源码展示样式（复制可直接运行，无额外组件引入） 二、讲解 1.结构拆分 首先我们来拆分下结构，无非就两个主要部分，一个是左边竖线和圆形图"}, {"id": "6844904006846775303", "title": "Flutter Packages 第三方包把玩Demos聚合地", "desc": "在写Flutter过程中，借助了一些给力的第三方包，欣赏了一些源码，很有吸引力，那么本篇章就来带大家伙梳理一下性价比高，耐用的packages。Flutter 之旅会持续Update。希望你在下班上班的路上看到。"}, {"id": "6844903757256491022", "title": "Flutter 提炼三个核心业务要素：布局，交互和bridge", "desc": "抛开语言不谈，对于想快速开发的同学来说，我把 Flutter 最核心的业务要素提炼成了三个部分，它们分别是 布局 ，交互，和 bridge，当我们比较注重更细节的组合时，你的应用会更细腻入微而已，在此之前它们会是贯穿你学习周期的全部； 如果有一个这样的经典排版，在 Flutte…"}, {"id": "6844903767993745421", "title": "基于Flutter Canvas的飞机大战(二)", "desc": "昨天下午笔者已经完成了背景动画的循环播放. 晚上笔者就开发中发现的问题在stackoverflow上进行提问. 二者视觉效果相似, 可是 paintImage 的性能问题, 严重消耗了GPU资源. 查看了paintImage的源码, 发现这个函数实现的方式也是调用了 drawI…"}, {"id": "6907122316715491335", "title": "Flutter collapsebox 用来管理展开子组件的widget", "desc": "collapsebox 用来管理展开子组件的widget. 允许自定义设置底部控件. 查阅 案例."}, {"id": "6855526188728811533", "title": "Flutter 混合开发 - 01 编写百度地图设备端组件的正确姿势!", "desc": "● Coordinator: 协调器，接受 Messaging 消息，负责调用 Container Manager 的状态管理。"}, {"id": "6844903998491885581", "title": "Flutter环境搭建以及Flutter命令的执行过程", "desc": "原来我们在stable分支。 上面是flutter/bin/flutter文件中的内容（有删减），可以看出这是个脚本文件。 检查flutter_tool是否实现升级（upgrade_flutter）。 使用dart运行$FLUTTER_ROOT/bin/cache/flutte…"}, {"id": "6912794760935637005", "title": "Dart regex in practice", "desc": "今天来聊下Dart里的正则表达式及其应用。内容比较简单，直接代码注释来说话。 特别说明下下面这个逗比设计，绝对是脑袋被驴踢了。 一般来讲正常的正则表达默认都是将匹配到的完整串也算在groupCount里(即group(0))，但是这里group(0)保留了这个逻辑，但是coun…"}, {"id": "6844904007777927175", "title": "Flutter状态管理", "desc": "flutter的状态管理方案很多，这里对相关知识做一下梳理。 Flutter将组件分为StatefulWidget，StatelessWidget，有状态的组件通常继承自StatefulWidget，通过State来管理自身状态。 当业务比较简单时，基于StatefulWidg…"}, {"id": "6844903922239275022", "title": "【Flutter】动画实现", "desc": "Flutter动画主分为两大类：补间动画、物理动画。 这里主要介绍几种方式实现动画效果。虽然使用的动画组件有所不同，但真正阅读源码分析会发现动画实现离不开几个关键对象：AnimationController、Animations、Tween、Ticker。 AnimationC…"}, {"id": "6844904105966567432", "title": "flutter的代理问题", "desc": "最近写项目因为要要用到谷歌地图，需要用到一个测距的接口。 之后在模拟器运行一直都是超时 433，打开浏览器是能正常运行的，再者我用真机测试也 是正常的，所以问题就是出在模拟器身上，可能是没有走到代理。 发现好像是真没有走到代理。 这样再次请求，你就发现成功了！也可以用这种方式进…"}, {"id": "6844903873706983437", "title": "Flutter环境配置 + VSCode/AndroidStudio + 基础知识了解", "desc": "2019.5.7 - 增加Flutter for Web，将Flutter的Dart代码直接编译为JavaScript, 就是用Dart 编译了 一个 可以再web端 执行的 程序。Flutter 正式成为一个全平台的框架。 Mobile端已经较为成熟，体验较于React Na…"}, {"id": "6844903987565559822", "title": "做一个高一致性、高性能的Flutter动态渲染，真的很难么？", "desc": "最近小组在尝试使用集团DinamicX的DSL，通过下发DSL模板实现Flutter端的动态化模板渲染。在解决了性能方面的问题后，又面临了一个新的挑战——渲染一致性。如何在不降低渲染性能的前提下，大幅度提升Flutter与Native之间的渲染一致性呢？ 思路 在初版渲染架构设…"}, {"id": "6844903891931234311", "title": "Flutter基础（十）布局Widget快速入门", "desc": "下面分别介绍这几种布局Widget。 Row：水平方向的线性布局。 Column：垂直方向的线性布局。 Row和Column的使用方法类似，举个Row的例子，Column自然而然也就会了。 效果如下图所示。 流式布局就是把超出屏幕显示范围的控件自动换行，在Android中并没有…"}, {"id": "6923106159918317575", "title": "【Flutter 3-1】Flutter手把手教程UI布局和Widget——底部导航栏BottomNavigationBar使用", "desc": "BottomNavigationBar 和 BottomNavigationBarItem 配合来共同展示Flutter里面的底部状态栏，底部状态栏是在移动端很重要的控件。 type参数传入的是BottomNavigationBarType.fixed，默认是BottomNav…"}, {"id": "6844904179211698183", "title": "fultter中使用dio实现网络上传总结", "desc": ""}, {"id": "6922410779807973390", "title": "跨平台技术优劣势对比", "desc": "因此仅适用于中低复杂度的低交互类页面。面对稍微复杂一点儿的交互和动画需求，都需要通过调用原生代码去扩展才能实现 Ionic框架很注重外观的体验，所以它提供了很多UI组件帮助开发者开发APP，比如：下拉刷新、标签等。界面美观，开发者能够很快的上手，开发的APP都很实用。 Cord…"}, {"id": "6944597902228455461", "title": "Flutter中如何进行界面跳转", "desc": "在android开发中界面都是对应着一个个Activity，我们通过intent从一个界面启动另外一个。路由（Route）在移动开发中通常指页面（Page），所谓路由管理，就是管理页面之间如何跳转，通常也可被称为导航管理。导航管理都会维护一个路由栈，路由入栈（push）操作对应打..."}, {"id": "6844904007874379783", "title": "flutter入门：线程，异步，声明式UI", "desc": "关于flutter的背景、体系结构、横向对比等，建议阅读淘宝的一篇文章，大比拼|下一代高性能跨平台UI渲染引擎，人家是真的厉害。 这里就不多贴这些宏观的简介了。本文主要从客户端开发的角度看三个小点：线程、异步、声明式UI，都是Flutter跟正常的客户端开发有一定区别的地方。 …"}, {"id": "6854573218813083662", "title": "[Flutter翻译]使用BuiltValueSerializer创建自定义built_value序列化器", "desc": "当使用built_value进行JSON序列化和反序列化时，我们可能会遇到一些超出StandardJsonPlugin能力的情况。 在我们的flutter应用中，我们可能希望有一个可以同时拥有这两种值的对象，然后我们决定在我们的Widgets中显示什么。 那么，我们如何将Str…"}, {"id": "6844904021770141704", "title": "Flutter入门之Mac最详环境搭建", "desc": "看到越来越多的同学准备入坑Flutter开发，而Flutter的环境搭建还是挺繁琐的，官网和网上的一些文章写的都不全。结合自己实际环境搭建中遇到的一些问题，同时整合了一些看到的文章，希望此文可以帮助准备学习Flutter的同学少踩坑，不要让环境搭建就把大家挡在了Flutter的…"}, {"id": "6920526118457966600", "title": "Flutter中的全局状态管理（InheritedWidget与Provider）", "desc": "InheritedWidget是flutter中一个非常重要的组件，其功能是数据共享。我们只要在widget树的根或者某个widget中，使用InheritedWidget进行了数据共享，那么在其后面的子widget中都可以使用其中的共享数据。如下图： 图中，Inherited…"}, {"id": "6844903907815063559", "title": "【Flutter】基本布局", "desc": "将Column、Row、Flex放在一小节是因为不同之处只是对子Widget布局方式不同。Column垂直布局子组件，Row是水平布局子组件，Flex根据direction设置Axis.horizontal或是Axis.vertical。 另外组件都不支持滑动，一旦子组件较多超…"}, {"id": "6844904109825507342", "title": "Flutter 插件开发之引入aar到安卓部分 并使用本地maven", "desc": "本篇主题:在flutter插件中引入aar本篇只包含android部分,iOS的framework直接在podspec中引入就可以了,所以本篇略过不表做过安卓开发的朋友可能知道,aar文件如果作为本地"}, {"id": "6854573219287040008", "title": "[Flutter翻译]如何在Backendless Flutter SDK中使用自定义类", "desc": "我们很高兴地向大家介绍Backendless Flutter SDK的新版本v0.2.0，它增加了对自定义类的支持。在本文中，我们将演示如何开始使用它。 要开始，打开你的Flutter项目或创建一个新的项目，并将Backendless Flutter插件添加到其中。你可以在这里…"}, {"id": "6844904024345411597", "title": "Flutterの使用Provider进行简单的国际化", "desc": "这个插件也是provider写的呀，那我直接用Provider，应该也可以。"}, {"id": "6949007037648863246", "title": "Flutter动画源码解析", "desc": "本文从源码的角度解析动画的底层逻辑，包括动画的实现逻辑，动画的中间值的确定，AnimationWidget和AnimatedBuilder的优化方式，隐性动画的实现方式等。"}, {"id": "6845166891577671688", "title": "Flutter 中的 ListView 的一个容易忽略的知识点", "desc": "1. 前言 上一篇文章 Flutter渲染之通过demo了解Key的作用里面通过两个小 demo 讲了 Key 的作用。其实在写小 demo 的过程中也碰到一个问题，开始是没有想清楚的，后来跟同事交流，去源码里面翻了翻才找到一些原因，这里再来写一下。 2. 现象 在 demo2…"}, {"id": "6844903927104667655", "title": "Flutter widget组件简介", "desc": "Flutter Widget采用现代响应式框架构建，核心思想是用widget组件来构建UI，当widget的状态发生变化时，widget也会对应重新构建UI，Flutrer会对比前后变化的不同，以确定底层渲染树从一个状态转换到下一个状态所需的最小更改。 通过flutter cr…"}, {"id": "6935828283468562440", "title": "探究Flutter App在iOS宿主App中的整合", "desc": "体验了Flutter的项目开发体验后，肯定会产生众多的困惑。我第一个想到的问题是，移动端宿主APP是如何将我们编写的Flutter代码整合进去的？ 按平台来，本篇文章先来看看iOS项目如何集成Flutter代码的。我的代发分析基于此项目。 我们用Xcode打开iOS项目，主项目…"}, {"id": "6844903813355143175", "title": "Flutter 简单布局技巧", "desc": "年后一直在做Flutter开发, 到现在进行了一个多月了, 趁着项目暂时告一段落总结一下布局的小技巧. 欢迎关注我的Gthub和CSDN. ps. 想把CSDN的博客都搬到掘金, 有什么简单的办法么? 其中Row/Column可以理解为android内的LinearLayout…"}, {"id": "6917915835055112206", "title": "【Flutter 2-10】Flutter手把手教程UI布局和Widget——流式布局Wrap | 七日打卡", "desc": "在Flutter中Wrap是流式布局控件，Row和Column在布局上是很好用，但是有一个缺点，如果当子控件数量过多导致Row或Column装载不下的时候，就会出现UI页面上的错误。Wrap可以完美的避免这个问题，当控件过多一行显示不全的时候，Wrap可以换行显示。 当然Wra…"}, {"id": "6922046979749412872", "title": "Dart_03_函数是一等公民", "desc": "所谓一等公民只是一种称呼，表示该等级最高。在OC中，类是第一公民，因此我们可以将类创建的对象当做参数或者返回值。在Dart中函数是第一公民，所以可以将函数作为参数或者返回值"}, {"id": "6922046009283608589", "title": " Dart_01_环境搭建_变量_集合类型", "desc": "因为学习资料为小马哥，所以根据资料同样适用VSCode作为学习工具（MAC_OS)VSCode官网下载将VSCode改为中文插件里搜索Chinese，并下载替换中文，快捷键Ctrl+Shift+P打开"}, {"id": "6844903953172267016", "title": "mac 下搭建flutter环境", "desc": "搭建fluter环境之前，电脑最好能科学上网，会详细介绍在mac下配置flutter环境的步骤和出现的问题。 1. 官方下载 4. 使配置生效：source .bash_profile 4.1 系统会输出 javac 的帮助信息。如果成功，说明已经成功配置了JDK , 否则需要…"}, {"id": "6844903891524386823", "title": "初略讲解Flutter Widget库", "desc": "Flutter提供了一套丰富、强大的基础Widget，在基础Widget库之上Flutter又提供了一套Material风格（Android默认的视觉风格）和一套Cupertino风格（iOS视觉风格）的Widget库。 Text：该Widget可让你创建一个带格式的文本。 R…"}, {"id": "6844904206063812616", "title": "Flutter - Dart之异步编程", "desc": "日常开发中：网络数据的获取、大文件本地数据库的写入等耗时等待操作都会涉及到异步编程。与iOS多线程不同的是，Dart是一门单线程语言。当然Dart是一门单线程语言，同样也支持了异步/多线程编程 事件队列(event queue)，包含所有的外来事件：I/O、mouse even…"}, {"id": "6914207761211490312", "title": "搭建企业级app架构(3)-开发规范", "desc": "DO 遵循 S.O.L.I.D. code design principles 我们有git版本记录There’s no point thinking “Well, maybe we’ll use this function in the future”. We have co…"}, {"id": "6915302961547575310", "title": "【Flutter 2-5】Flutter手把手教程UI布局和Widget——TextField使用、搭配InputDecoration和FocusedNode", "desc": "TextField是一个常用的控件，同时它也是一个组合控件，由多个控件组合而成。 TextField是由7个控件组成，其中有些控件默认不显示，我们可以对各个控件单独设置想要的样式来满足不同的UI展示需求。 1. 简单的TextField TextField接收一个InputDe…"}, {"id": "6944597906598920200", "title": "理解Flutter Demo App", "desc": "用Andorid Studio新建一个Flutter New Project后，一个Flutter Demo App就运行起来了，麻雀虽小，五脏俱全。下面是在Andorid Studio的工程结构。我们开发Flutter App在其lib目录下进行。 接下来看看main.dart..."}, {"id": "6924571664562782222", "title": "【Flutter 3-3】Flutter进阶教程——http请求和FutureBuilder", "desc": "在移动开发过程中很多时候我们都需要依赖异步请求数据然后再来刷新UI。在用户打开界面的时候，先给出一个Loading提示，等数据请求完成后，我们再把数据展示在页面上，这是很常见的操作。 异步请求的好处就是不会阻塞主线程，用户虽然在“等”，但是页面不会卡死。 同步请求不适应于这种情…"}, {"id": "6844903886323449863", "title": "Flutter滚动型容器组件 - ListView篇", "desc": "1. 前言 Flutter作为时下最流行的技术之一，凭借其出色的性能以及抹平多端的差异优势，早已引起大批技术爱好者的关注，甚至一些闲鱼，美团，腾讯等大公司均已投入生产使用。虽然目前其生态还没有完全成熟，但身靠背后的Google加持，其发展速度已经足够惊人，可以预见将来对Flut…"}, {"id": "6844903997829021710", "title": "flutter好用的轮子推荐十五-flutter给滚动内容添加粘性header组件", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6844903789917372430", "title": "Flutter 布局篇 Positioned 和 Container", "desc": "在flutter中，Container容器一般默认是占满整个空间。当Positioned使用Container，会出现什么情况呢？ 可以使用Stack的特性进行定位布局，又能完美使用Container相应的属性。或许还有其他更适合的布局方式，欢迎讨论。"}, {"id": "6844904005320048653", "title": "vscode 启动与调试 flutter 项目", "desc": "在 vscode 里安装有关的插件——Dart,flutter 两个或者其他相关的插件。 如果用官方提供的两个地址，可能会一直停留在 Resolving dependencies…过不去。 Gradle 默认直连网络，即使 Mac 设置了全局代理也是一样。就算你给 Androi…"}, {"id": "6844903981374816269", "title": "flutter好用的轮子推荐二-点赞按钮动画", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6844903782292144141", "title": "Flutter 组件总结", "desc": "State是一个保存负责控件生命周期的类，还有以下一些方法。包括初始化、构建、销毁等等使用setState方法时会刷新对应的回调 静态组件定义后不会再改变，一般很少用到。 Widget(组件)是Element(元素)的封装，flutter最后渲染的是Element。不涉及到原理…"}, {"id": "6844904033056981006", "title": "Flutter中的数据可视化charts家族", "desc": "由于在实际开发的过程中，过多的业务模块都是数据可视化，图表很多，一个模块过久的时间花费我个人觉得不太好，那目前就我来看，在Flutter家族中暂时还没有Web端像Echars这样的辅助，那本篇章就和大家分享一下线图，也叫line charts ，这其中又会分为折线图、曲线图又或…"}, {"id": "6991734742672474119", "title": "Flutter | 一文搞懂 BuildContext", "desc": "[BuildContext] 对象实际上是 [Element] 对象。 [BuildContext] 接口用于阻止直接操作 [Element] 对象。"}, {"id": "6956838159871115300", "title": "Flutter 移动安全 ー Ep.2 Strong Device/ Strong Pin", "desc": "原文 前言 在本期节目中，我们将进一步强化您的移动应用程序。“但是怎么做呢?”你可能会好奇。让我们把它比作建造一座房子。为了确保它配备了最高级别的安保系统，你可能需要在房子周围安装所有的警报器和摄像头"}, {"id": "6844903937909194759", "title": "Flutter | 金九银十招聘季，这些面试题祝你一臂之力", "desc": "最近又开始了一年一度的「金九银十」，很多小伙伴希望趁着这个机会转阵 Flutter。 既然如此，总结一些面试题来送给大家。 首先来看看各个公司招聘的需求吧，毕竟面试题只是一部分。 持续对产品开发流程进行改进与优化，提高开发能力和效率，并能通过技术提升用户体验和可用性。 有Flu…"}, {"id": "6877484799133483016", "title": "全方位剖析 Flutter Windows 内测版", "desc": "Windows 依然是台式机和笔记本电脑最常用的操作系统，不久前，Microsoft 也宣布已经有超过十亿台运行 Windows 10 的硬件设备了。我们自己的统计数据也显示，有超过一半的 Flutter 开发者正使用 Windows，因此，它很自然的成为了 Flutter 的…"}, {"id": "6844904023745789959", "title": "开源 | FLUI : Flutter 的组件扩展集", "desc": "在使用 Flutter 的过程中，总是不断的在与组件打交道，虽然 Flutter 官方已经有极为丰富的 Material Design 以及 iOS 风格的组件集合，但我们也需要不断的抽象，组合出一些新的基础组件或业务组件，FLUI 就是在开发过程中陆续抽象出来的，目的就是能够…"}, {"id": "6844903991713890317", "title": "Dart2.6正式版发布，支持编译为mac,windows,linux三大系统native可执行文件", "desc": "【Tips:】本文首发在公众号 Flutter那些事，更多干货欢迎多多关注。 近日Dart发布了最新版Dart2.6正式版。这次又有哪些新功能呢？我们来一起看看。 Dart针对不同系统平台提供了丰富的编译器https://dart.dev/platforms：适用于Androi…"}, {"id": "6876807731911606285", "title": "flutter网络请求", "desc": "Flutter就有一个Root Isolate，负责Flutter的代码，界面渲染，用户交互... dio是一个第三方库，非常流行，支持拦截器，请求取消，Cookie管理，文件上传，文件下载，超时处理....."}, {"id": "6844903978480713736", "title": "flutter好用的轮子推荐一:列表动画", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6844903999158616077", "title": "flutter好用的轮子推荐十六-flutter可自定义的评分组件", "desc": "Flutter是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 IT界著名的尼古拉斯·高尔包曾说：轮子是IT进步的阶梯！热门的框架千篇一律，好用轮子万里挑一！Flutter作为这两年开始崛起的跨平台开发框架，其第三方生态相比其他成熟框架还略有不…"}, {"id": "6979522659734257672", "title": "[Flutter翻译]提高Flutter中的平台通道性能", "desc": "在过去的几年里，我一直对 \"我们如何使Flutter和它的主机平台之间的通信更快、更容易 \"的问题感兴趣。这是一个让Flutter插件开发者和附加应用开发者特别感兴趣的问题。 Flutter和主机平台"}, {"id": "6844903921371054087", "title": "Flutter 实现底部扩散模糊动画（一）跳转页面", "desc": "一直以来，项目组的小伙伴对于某安的设计和交互十分喜爱，从首页布局到用户页样式到加号扩散动画，都想用到项目里来。鉴于他们强烈的热爱，已经实现了部分布局看齐。最近，终于轮到了要实现点击底部加号后出现扩散动画，并出现几项操作项的动画的时候了。 点击\"X\"或空白处或系统返回键，背景以圆…"}, {"id": "6906274131394691085", "title": "Flutter Dart 异常不讲武德", "desc": "以上内容调侃归调侃，很多异常处理的细节是不是有点过于真实了？我们应当时时对异常处理保持敬畏。 Flutter Dart 异常与传统原生平台异常很不一样，原生平台的任务采用多线程调度，当一个线程出现未捕获的异常时，会导致整个进程退出。而在 Dart 中是单线程的，任务采用事件循环…"}, {"id": "6979555418615840782", "title": "Dart异步和isolate", "desc": "大多数真正的Dart程序是并发的。 Web应用通常由至少两个并发部分组成: 在用户设备的Web浏览器中运行的客户端程序及在浏览器外部运行的服务器程序，它通常运行在互联网上的另一台计算机上。许多服务器端"}, {"id": "6844904035439345671", "title": "Flutter完整开发实战详解(十二、全面深入理解状态管理设计)", "desc": "作为系列文章的第十二篇，本篇将通过 scope_model 、 BloC 设计模式、flutter_redux 、 fish_redux 来全面深入分析， Flutter 中大家最为关心的状态管理机制，理解各大框架中如何设计实现状态管理，从而选出你最为合适的 state “大管…"}, {"id": "6983672340789854239", "title": "Flutter渲染之启动与三棵树的构建", "desc": "调用图 我们用下面的例子来分析Flutter启动所做的事情 初始化Binding runApp 在runApp中，我们会调用WidgetsFlutterBinding.ensureInitialize"}, {"id": "6951220342492921870", "title": "Flutter 基于极光的第三方厂商推送 + 关闭app后台推送实践指南", "desc": "下面我们要实现一个简单的极光前台推送。 然后大功告成了，我们推送了一条简单消息。不过，这是远远不够的，在第三方厂商的限制下，我们的app关闭就没法在后台推送了，这位客官不要急，请继续往下看。 上面我们已经实现了简单的前台推送，但是我们关闭程序后，就没法继续推送了，下面我们基于极…"}, {"id": "6844903984113647623", "title": "Flutter 动态化方案探索", "desc": "随着移动平台的发展，移动端用户规模越来越大，相应地产品需求也是日益见长。为了解决诸多快速迭代的业务产品线及需求，提高我们的开发效率，业内的同行们尝试探索了许多跨平台方案，如今比较主流的方案大致有以下几种。如： 上述的几种方案或多或少都存在一些瓶颈或使用场景的缺陷，这里就不多展开…"}, {"id": "6990951844671553567", "title": "Flutter 封装：富文本 RichText 极简封装", "desc": "1. 需求： 开发中遇到一个富文本展示点击效果（用户协议和隐私），通过官方的原始方法能够实现，但是很繁琐而且无聊，随想实现一个方便且高效的富文本生成方法，参考 iOS，最终完美实现； 2. 实现原理："}, {"id": "6957988645315805221", "title": "这10个每个开发者都必须知道的Widgets", "desc": "这些是我们将要讨论的 widgets: Dismissible SizedBox Draggable Flexible MediaQuery Spacer AnimatedIcon Placeh"}, {"id": "6956022225862393870", "title": "技术期刊 · 耿耿星河欲曙天 | SpaceX 上的前端架构;跨平台新选择;开源世界的新“大门”;用户推荐算法的敲门砖;关于“鸿蒙”，你应该知道这些", "desc": "迟迟钟鼓初长夜，耿耿星河欲曙天。仰望星空是人类最质朴的梦想，承载了人们太多太多的美好愿景，作为程序员不断接受挑战，用代码开创一个时代；将代码埋入北极薪火相传……当你脚踏大地眺望星河，又在思考些什么呢？"}, {"id": "6916158138076889101", "title": "flutter开发完整版即时通讯", "desc": "该项目是采用flutter开发的一款社交APP，前端是使用flutter、后端是使用node+socket.io来实现通讯聊天，未使用第三方通讯插件。下面列出的都是项目使用的插件，也是开发app必要的插件，可以去插件市场看下学习；"}, {"id": "6844903959400808455", "title": "把Flutter扩展到微信小程序端的探索", "desc": "Google Flutter是一个非常优秀的跨端框架，不仅可以运行在Android、 iOS平台，而且可以支持Web和桌面应用。在国内小程序是非常重要的技术平台，我们也一直思考能否把Flutter扩展到小程序端？我们团队之前已经开源了Alita项目，Alita可以把React …"}, {"id": "6961101782365765662", "title": "Flutter 热更新及动态UI生成", "desc": "问题 由于Dart语言在Flutter上关闭了反射，且语言本身也缺乏动态能力，因此在Flutter上实现热更新或动态UI较为困难。 目前已有的一些动态方案： 利用原生框架更新 桥接动态脚本语言 修改引"}, {"id": "6847902222538604558", "title": "flutter如何统一代码规范", "desc": "Dart语言在统一代码规范这方面做的还是比较完善的，不仅有官方文档 effective-dart 指导我们写出优雅的dart代码，更是提供了像eslint（写过js/ts的应该都知道）一样的工具linter来检查我们的代码是否符合规范。当然，检查项是可以配置的，这个后面再说，我…"}, {"id": "6957714932360019999", "title": "Flutter 最佳扫码插件", "desc": "长期以来，Flutter都缺乏一个简单易用，功能强大的二维码、条形码等扫码库，需要既能支持相机扫码，也能支持本地图片码识别。为了解决这个问题，我考察了原生的扫码生态，选取了功能强大的HUAWEI Sc"}, {"id": "6993095807150850062", "title": "flutter中的多版本控制", "desc": "这是我参与8月更文挑战的第 3 天，活动详情查看：8月更文挑战。为应掘金的八月更文挑战， 1先安装 choco powershell 管理员身份运行 不会的话，先打开一个powershell 窗口 ，"}, {"id": "7006213343996280868", "title": "Bloc add两次只响应一次问题处理", "desc": "问题描述 连续调用两次addEvent，结果最终只能响应一次，第二次事件无法响应。 原因分析 处理方式。"}, {"id": "6844903610019512328", "title": "浅谈 2018 移动端跨平台开发方案", "desc": "“一次编写，到处运行”，这是 SUN 公司用来展示 Java 语言跨平台特性的 slogan，它意味着 Java 可以在任何平台上进行开发，编译后就可以在任何安装有 Java 虚拟机（JVM）的设备上运行。 最近这两年，在移动端各种跨平台的开发方案如雨后春笋般涌现，一方面是因为…"}, {"id": "6844903850076291086", "title": "Flutter资源收集（持续更新）", "desc": "我是小前端一枚，最近没事研究了一下flutter，顺手做了一下有关资源的收集Flutter资源收集，持续更新一下，有好的资源欢迎来补充Github最新Flutter仿微博客户端,包含首页、视频、发现、"}, {"id": "6995441130942758926", "title": "flutter集成高德地图（一）", "desc": "申请高德地图api 官网地址：https://lbs.amap.com/ 控制台创建安卓应用 获取本机测试sha1安全码 进入C:\\Users\\admin.android 执行keytool -lis"}, {"id": "6995839974549487623", "title": "Flutter源码分析之InheritedWidget", "desc": "InheritedWidget介绍 在Flutter进行界面开发时，我们经常会遇到数据传递的问题。由于Flutter采用节点树的方式组织页面，以致于一个普通页面的节点层级会很深。此时，我们如果还是一层"}, {"id": "6989814596986994718", "title": "iOS原生项目中集成flutter初试", "desc": "背景 我们公司一直用 Objective-C 语言来开发iOS的项目，最近提出要用跨平台混合语言flutter来研发新的功能，并计划逐步过渡到flutter项目。花了一整天的时间来研究flutter在"}, {"id": "6980082642389565453", "title": "在你的 Flutter 项目中隐藏敏感信息", "desc": "猫哥说 有的时候我们需要在项目中隐藏敏感信息，比如你的阿里 OSS 账号 AccessKey ，写入代码中上传 git 仓库，是一件很危险的事情，所以我们需要用环境变量的方案来隐藏，记得你的 .env"}]