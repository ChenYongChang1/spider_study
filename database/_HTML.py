[{"id": "6844903872188989448", "title": "前端规范之媒体文件规范", "desc": "使用相对路径，不要指定资源所带的具体协议 ( http:,https: ) ，除非这两者协议都不可用。 常见的图片格式有 GIF、PNG、JPEG、WebP、svg，根据图片格式的特性和场景需要选取适合的图片格式。 优先使用 iconfont。 使用 CSS Sprites，对…"}, {"id": "6844903612838051853", "title": "被遗忘的CSS和HTML", "desc": "也许你天天都在写color: #xxx，但是，你是否还记得什么是color？你是不是第一反应：字体颜色。 如果是，很遗憾，color就是被你遗忘的CSS。 如果是，你是否曾想过，字体大小叫font-size，字体粗细叫font-weight，字体类型叫font-family………"}, {"id": "6844903696447307784", "title": "浏览器页面渲染机制", "desc": "分享目的： 解释浏览器如何将 HTML、CSS 和 JavaScript 转换为我们可以与之交互的网站，了解这个过程，可以帮助我们优化 Web 应用程序，从而获得更快的速度和更好的性能。 1. html解析 数据是以“数据包”的形式通过互联网发送，而数据包以字节为单位。当你编写…"}, {"id": "6844903602020974600", "title": "浏览器渲染简述", "desc": "主要为 CSS 优化工作打一下基础。要编写高性能的网站和应用，除了确保编写的代码尽可能高效地运行外，还需要确保页面性能，刷新频率尽量到达 60FPS。这就需要了解浏览器是如何进行渲染的。而浏览器渲染与 CSS 密切相关，因此只有了解其中工作原理才能让 CSS 更好地工作。 另外…"}, {"id": "6844903950240464910", "title": "mPaaS H5 容器知识清单 | FAQ · 第二期", "desc": "Hybrid 开发模式已不是什么新鲜的话题，不仅可以快速发布新业务，同时无需考虑 App 发版时间，为业务更新迭代提供了极强的灵活性。相比于 Web 开发，Hybrid 开发模式提供了丰富的设备 API，让业务形态可以更加多元和丰富。 mPaaS 离线包源自于支付宝原生方案，经…"}, {"id": "6978293300360904740", "title": "XML语言数据读写理解15", "desc": "现在该实现删除函数了。删除的方法是：给定第几个节点的索引（比如索引2），我们把第三个（0 1 2）节点删除。 结合上一章程序： 先添加一个节点，然后再删除一个节点，然后输出到文件。 删除节点不需要直接"}, {"id": "6978084758580527140", "title": "XML语言数据读写理解13", "desc": "最后就是在tsfunGroup类里面定义函数： void writeXML(); 因为不再需要什么返回值了。源码如下： 由于这个结构设计的还不错，所以现在这个代码写起来也不是很费劲。前面还和以前一样。"}, {"id": "6938674041267945503", "title": "两种实现前端路由的方式", "desc": "路由就是根据不同的url地址展示不同的页面或者内容。 前端路由是指：不同的url地址对应到不同的内容或页面这个任务是由前端来完成的，就是前端路由，前端路由是不会刷新页面的，随着SPA单页应用的普及，以及前后端分离，现在的项目基本上都是前端路由。 优点：前后端的彻底分离，不刷新页…"}, {"id": "6893884686360117261", "title": "给我一天，让你入门HTML", "desc": "HTML（Hyper Text Markup Language）中文翻译过来叫 超文本标记语言，是一种用于创建网页的标准标记语言。HTML是一门基础技术，常和 CSS以及 JavaScript一起被用于设计 网页、网页应用程序、移动应用程序的应用界面..... 网页浏览器可以读…"}, {"id": "6898935720522563597", "title": "获取滚动条的宽度", "desc": "为什么需要获取滚动条的宽度原理创建两个div嵌套在一起外层的div设置固定宽度和overflow：scroll滚动条的宽度=外层div的offsetWidth-内层div的offsetWidth实现代"}, {"id": "6844903543334240263", "title": "再读规范中浮动与定位细节", "desc": "如题，浮动与定位是CSS布局中重要且基础知识点，相关规范和书籍都有篇幅解读。但具体细节，笔者初读囫囵吞枣，几经再读受益匪浅。感叹规范，简明扼要，字字珠玑 。借此行文，着笔细节，竭尽所能，力求清晰。不过删繁就简，仍然又臭又长，自嘲厕所文。 在正文开始前，说几句题外话。以CSS 定…"}, {"id": "6844904106453123080", "title": "你总问input多少种", "desc": "除此之外，其他场景貌似不多，但就算这些，也不是每款产品都需要，再加上HTML5加入的新成员，更加难以捉摸。 本篇文章我们就一起回顾一下，当然，鉴于其本身内容较多，我们只看那些较“实用”的。 为更好区分和记忆，可分为如下几类。 input本意就是输入，所以，它肯定存在一个 tex…"}, {"id": "6844903827980681229", "title": "基于 HTML5 WebGL 的地铁站 3D 可视化系统", "desc": "工业互联网，物联网，可视化等名词在我们现在信息化的大背景下已经是耳熟能详，日常生活的交通，出行，吃穿等可能都可以用信息化的方式来为我们表达，在传统的可视化监控领域，一般都是基于 Web SCADA 的前端技术来实现 2D 可视化监控，本系统采用 Hightopo 的 HT fo…"}, {"id": "6844904194709651470", "title": "HTML核心系列1之DTD与实体", "desc": "Sgml、 HTML 和 XML 都是标记语言。 “标记”一词起源于编辑对作者手稿进行修改。 编辑“标记”手稿，以突出某些领域。 在计算机技术中，标记语言是一组单词和符号，它们突出显示文本以定义网页文档。 例如，网页设计师使用标记语言来分隔段落并用黑体字表示字母。 一旦理解了 …"}, {"id": "6844903616650674189", "title": "不换https,使用CSP(Content-Security-Policy)解决/缓解运营商dns劫持问题", "desc": "Content-Security-Policy - HTTP | MDN"}, {"id": "6844903866673135623", "title": "移动端适配的那点事", "desc": "目前，在实际用户使用习惯中，会有很多的用户并不会直接下载APP进行使用，而是采取移动端浏览器直接搜索。对于移动端web页面，有哪些小细节需要注意？对于五花八门的屏幕如何适配？且听下文慢慢道来。。。 移动端的屏幕不大，显示的内容将远少于PC端。这就意味着布局将会变得简单。 移动端…"}, {"id": "6844903806782668808", "title": "关于 mailto 语法的一切", "desc": "You can make a garden variety anchor link (<a>) open up a new email. Let's take a little journey into this feature. It's pretty easy to use…"}, {"id": "6844903564775522311", "title": "把网页导出为图片的两种方案以及其适用场景", "desc": "实现这个功能有两种方案，一种是纯前端方案，一种是后端方案。本文深入的探讨了纯前端方案，并对两种方案的适用场景给出了建议。"}, {"id": "6844903944636858375", "title": "神奇的FFMPEG", "desc": "FFMPEG或许大家没有听过，但是暴风影音，QQ影音，VLC，格式工厂... FFMPEG或许大家没有听过，但是暴风影音，QQ影音，VLC，格式工厂... -f 强制输入或输出文件格式。通常会自动检测输入文件的格式，并从输出文件的文件扩展名中猜测，因此在大多数情况下不需要此选项…"}, {"id": "6844903641569050637", "title": "解读js模块化方案modJS", "desc": "由于笔者所在的团队使用fis3打包工具搭配modJS来解决js模块化，并且最近也在研究js模块化方案，故写下这篇文章来解读modJS的实现细节。 限于笔者水平，如果有错误或不严谨的地方，请给予指正，十分感谢。 ES6 模块化是欧洲计算机制造联合会 ECMA 提出的 JavaSc…"}, {"id": "7005391476796424229", "title": "HTML5：音频和视频", "desc": "HTML5 新增的音视频标签提供了展示音视频的标准，以及一系列强大的属性、方法和事件，可谓是不能不学一下滴"}, {"id": "6986206917308153863", "title": "前端两万字图文血书大总结（初篇）", "desc": " 😜在本篇博文中，本博主就带领小伙伴们认真地学习一下HTML（超文本标记语言）相关的必备知识（爬虫爬到数据之后解析页面数据你得多少能看懂页面结构！）——HTML是一门标记语言，标记语言由一套标记标签组成，学习HTML，就是学习标签。第一部分：HTML框架简介1.2.HTML的基本..."}, {"id": "6988714719125176351", "title": "阿ken的HTML、CSS的入门指南（三）_文本样式属性", "desc": "感激相遇 你好 我是阿ken 文章部分内容及图片出自网络，如有问题请与我本人联系(主页有公众号)应用字体样式时，会首选华文彩云，如果用户笔记本中没有安装该字体，则选择宋体，如果用户笔记本中没有安装该字"}, {"id": "7007360447422660644", "title": "HTML+CSS知识点", "desc": "CSS 使用方式 行内添加定义style属性值 页面头部内嵌调用：页面载入时同时加载 外面链接调用：页面载入后加载（CSS2）（淘宝） 伪类\\伪元素 :focus、:hover ::before、::"}, {"id": "6988080294242811918", "title": "阿ken的HTML、CSS的入门指南（二）_HTML 页面元素和属性", "desc": "感激相遇，你好，我是阿Ken 下面开始我们今天要讲解的内容 —— HTML页面元素及属性 本博客暂适用于刚刚接触HTML以及好久不看想要复习的小伙伴 其实严格意义上说该文部分基础入门没技术含量直接堆实"}, {"id": "6844903701459501070", "title": "前端必会的 Nginx入门视频教程(共11集)", "desc": "由于前端技术的蓬勃发展和你自身的不断努力，很多小伙伴已经打通了任督二脉，做到了前后端通吃。你们就是自己程序世界里的神，在这里你们无所不能，创造世界，制定规则和逻辑。当一个属于你的世界做好后，你需要展示给朋友，发布于众人，让爱你的人欣赏。这时候我们需要一个强有力的服务器作为容器，…"}, {"id": "7002136348651945992", "title": "Form 标签属性含义及其用法", "desc": "form 是块级双标签，用于指定一个表单区域，并向服务器提交信息。 属性 常用属性 action：指定表单提交的URL，表单内提交按钮的formaction属性会覆盖此属性 enctype：指定表单的"}, {"id": "7005941450730897444", "title": "愿你熬得过万丈孤独，藏得下星辰大海", "desc": "I want to grow up and be a real bad cop. In the end, it will work."}, {"id": "7002917118366728200", "title": "css架构设计-笔记", "desc": "前言 大家好,我是作曲家种太阳 最近忙于新业务,没有写文章,学习进度也是缓慢,接下来我会以笔记为主,做一些输出,沉淀一段时间 本篇是学习某课网的css架构蘑菇街的学习笔记,了解css架构设计理念和分层"}, {"id": "6844903959287562254", "title": "稍微整理了几个经常在H5移动端开发遇到的东西😢", "desc": "本篇文章主要是讲一些其他的或者优化手段。内容不多😂 1. 弹出数字键盘 安卓跟IOS的表现形式应该不一样，大家可以自己试试。当运用了正则pattern后，就不用关注input的类型了😂 2. 调用系统的某些功能 3. 打开原生应用 4. 解决active伪类失效 5. 忽略…"}, {"id": "6992371218481414152", "title": "HTML script标签async和defer的区别", "desc": "这是我参与8月更文挑战的第4天，活动详情查看：8月更文挑战 1. defer 这个属性表示脚本在执行的时候不会改变页面的结构。也就是说，脚本会被延迟到整个页面都解析完毕后再运行。因此，在<script"}, {"id": "7005585982825168933", "title": "纯html+css3 绘制iphone7 模型和常用app图标", "desc": "纯css写的iphone7 和常用app图标。 你所能看到的都是div+css写出来,没用任何图片和字体图标。 先看个图 对你没有看错，你所看到的全是css实现， 纯css实现iphone7模型 其实"}, {"id": "6996561308992667678", "title": "video  autoplay 自动播放之研究", "desc": "按 MDN 的说法，video 的 autoplay 控制视频的自动播放。 但因为默认自动播放比较打扰用户，所以还需满足以下条件"}, {"id": "6998401854245699615", "title": "HTTP和HTTPS是什么 二者区别是什么", "desc": "HTTP简介 HTTP（超文本传输协议）是网络上最为广泛的传输协议，被用于在web浏览器和网站服务器之间的传输协议。HTTP是一个简单的请求-响应协议，它通常运行在TCP之上。它指定了客户端可能发送给"}, {"id": "6984256178536579085", "title": "移动端H5唤起APP的解决方案", "desc": "在 h5 页面上，用户点击打开app按钮，在用户手机上已经安装了App时，打开app，否则就引导用户前往应用市场。这样就方便了用户，而且在业务需要情况下，可以跳转到app指定页面和传参。"}, {"id": "6850037262445445134", "title": "在前端如何玩转 Word 文档", "desc": "在日常工作中，大部分人都会使用 Microsoft Office Word、WPS 或 macOS Pages 等文字处理程序进行 Word 文档处理。除了使用上述的文字处理程序之外，对于 Word 文档来说，还有其他的处理方式么？答案是有的。 如何在前端动态生成 Word 文…"}, {"id": "6991633147100151815", "title": "HTML面试总结｜ 8月更文挑战", "desc": "HTML5 有哪些新特性？ HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。 拖拽释放(Drag and drop) API 语义化更好的内容标签（head"}, {"id": "6844903685122703367", "title": "前端安全系列（一）：如何防止XSS攻击？", "desc": "随着互联网的高速发展，信息安全问题已经成为企业最为关注的焦点之一，而前端又是引发企业安全问题的高危据点。在移动互联网时代，前端人员除了传统的 XSS、CSRF 等安全问题之外，又时常遭遇网络劫持、非法调用 Hybrid API 等新型安全问题。当然，浏览器自身也在不断在进化和发…"}, {"id": "6999826810011648037", "title": "HTML界的“苏炳添”——详解Canvas优越性能和实际应用", "desc": "Google Docs宣布将会把HTML迁移到基于Canvas渲染，这一消息的出现再次把几年前随HTML5诞生的标签重新推到了人们视线之中。Canvas在刚推出时主打的优势就是更快的渲染速度，堪称HT"}, {"id": "6915296999084883976", "title": "如果你的 HTML 里全是 div，那就要小心了", "desc": "做前端开发的同学都知道，一个网页的基本组成部分是 HTML，JavaScript 和 CSS。开发人员通常更关注 JavaScript 和 CSS ，实践着各种语言规范和设计模式。对于 HTML 的关注度则明显偏少，只要能做出设计师画的界面就万事大吉了，不怎么去关心 HTML …"}, {"id": "6844903501877739527", "title": "看Zepto如何实现增删改查DOM", "desc": "遍历当前集合中的元素，当该元素的父节点存在的时候，使用removeChild删除该元素。 可以看到就是在$的原型上添加了一个指向remove函数的方法detach。 遍历当前集合中的元素，然后将元素的innerHTML属性设置为空。也就达到了清除DOM内容的目的。 以上是app…"}, {"id": "6844903689384116238", "title": "神奇的background——绘制图形", "desc": "相信大家在平时工作中少不了会被要求在某些元添加一些特殊的背景图片，这时候通常就拿起ps就是切切切。不说这种方式麻烦，有ui给你切好的情况已经不错，没有的就有自己动手。还可能有需要切一整张超大图的情况。作为一个“优秀”的前端，本着自己动手丰衣足食的理念，下面给大家介绍用backg…"}, {"id": "6844903546131857422", "title": "W3C 官方推荐使用新发布的 HTML5.2", "desc": "W3C于2017年12月14日发布了HTML规范5.2更新版本，并官方建议用户使用。"}, {"id": "6992580060842557454", "title": "【JavaWeb基础 · HTML概述】", "desc": "“这是我参与8月更文挑战的第4天，活动详情查看： 8月更文挑战” HTML语言规范 HTML实例介绍及解析 HTML是超文本标记语言(Hyper Text Markup Language) 下面是一个"}, {"id": "6844903538758254605", "title": "白话Angular词汇", "desc": "在打包项目的时候提前编译好应用，打包好之后可以直接启动，而不是把编译器打包在应用中用的时候再编译。生产环境使用。 浏览器中启动并编译所有的组件和模块，动态运行应用程序。开发过程中使用。 告诉Angular怎么创建或改变HTML 元素。 监听或修改其它 HTML 元素、特性 (a…"}, {"id": "6844903512132976647", "title": "uiw 1.2.17 发布，基于 React 16 的组件库", "desc": "发布， 高品质的UI工具包，React 16+的组件库。 🐞 修复没有代码检测文件匹配*.css。 5712887 🌟 添加 .editorconfig 文件. d82dabf 📝 Tree组件添加文档。 c459fe7 🌟 添加新的组件Tree。 b10f140 🐞…"}, {"id": "6844904114556502023", "title": "读 《HTML5 揭秘》有感", "desc": "最近在补一些 HTML 的书籍，偶尔读到这本书，虽然这本书已经是10年以前的书籍了，不过其中有些有趣的知识点与观点被我提取了出来。 事实上，对于前端开发而言，具体实现早于技术规范的制定已经是一种常态了。但与其他领域不同的是:前端的新标准非必要条件下是不可以破坏之前的实现。 大家…"}, {"id": "6884026217465397262", "title": "零基础小白前端学习之HTML（七）", "desc": "网页中&#x3C;a>标签，全称：anchor、锚点的意思。它在html中称为超链接标签，可以说它在网页中是无处不在的，只要有链接的地方，就有会这个标签。 比如我们我们做个效果。点击百度一下,会跳转到百度的首页。 title属性的作用，鼠标滑过链接文本时会显示这个属性的文本内容…"}, {"id": "6844903588053909511", "title": "用HTML5 Geolocation实现一个距离追踪器", "desc": "HTML5 Geolocation（地理定位）用于定位用户的位置。那么如何实现一个距离追踪器呢？我的思路是这样的，前提是浏览器支持h5地理定位，在这个基础上，获取用户位置，更新用户位置，计算距离，显示到页面，这样就简单实现了一个距离追踪器，为了用户更清楚地看到当前位置，这里接入…"}, {"id": "6916898892684460040", "title": "noopener、noreferrer、nofollow", "desc": "点击查看原文。 如果你参与到 web 开发，或者SEO相关的工作，你大概已经知道了有noopener，noreferrer和nofollow这三个属性值，但是这三个属性值是什么，在这篇文章中，我们将会对他们一一介绍，并指出他们在SEO和 web 安全方面的影响。 这三个属性值，…"}, {"id": "6844903536958914568", "title": "css-3秒（大概吧...）快速撸出YY游戏页面（三）", "desc": "有哪里不懂的，请在下面留言，我每天都看，有时间我会一一解答，看评论区也许有人提出了跟你同样想问的问题，可以看看我给出的回答，不用重复提问。 声明，本教程只是为了帮助大家更好的理解css的一些细节，所以在这三篇里没有都涉及js，下面开始的轮播图我也只是讲解其中的css，其中我给出…"}, {"id": "6844903585289863175", "title": "浏览器渲染过程与原理浅析（一）", "desc": "我为啥要知道浏览器渲染过程，嗯...面试会问....但最重要的是了解它工作原理，让你在弄它时，游刃有余。 先看下浏览器有什么。 用户界面 - 除了浏览器主窗口显示的您请求的页面外，其他显示的各个部分都属于用户界面。 浏览器引擎 - 在用户界面和呈现引擎之间传送指令。 呈现引擎 …"}, {"id": "6864014604709265416", "title": "[译] 理解关键渲染路劲", "desc": "浏览器在使用从服务端接收到的HTML响应文件在屏幕上绘制成像素之前还有很多步骤。浏览器在初始绘制页面所做这一系列操作称之为“关键渲染路径（Critical Rendering Path）简称CRP”。 学习了CRP相关的知识会对如何提升网站性能有非常大的帮助。要完成CRP有以下…"}, {"id": "6946079427671359502", "title": "浅析HTML页面生命周期", "desc": "浏览器已经加载完成HTML数据，并且构建了DOM树。但是如样式、图片之类的外部文件有可能仍未加载完成。所以，可以再此时寻找DOM元素，以及初始化接口。 在遇到&#x3C;script>标签之后，脚本会阻塞 DOMContentLoaded，浏览器将等待它们执行结束，因为脚本有可…"}, {"id": "6857401771782995976", "title": "HTML5全面进阶：HTML的演变过程（一）", "desc": "HTML（HyperText Markup Language）即超文本标记语言，诞生于20世纪90年代初。它不是一门编程语言，而是一种用来告知浏览器如何组织页面的标记语言。HTML是由Web的发明者Tim Berners-Lee和同事Daniel W.Connolly于1990…"}, {"id": "6844903620253581320", "title": "在JPEG图片中嵌入HTML", "desc": "响应内容中有熟悉HTML标签，也有一大堆乱码。这堆乱码应该是图片文件的字符读码，但是为什么在网页上看不到呢？ 原来HTML中使用了body { visibility: hidden; }样式和<!--注释标签（浏览器自动补全），乱码部分就这样被隐藏了。 首先可以确定这张图片是J…"}, {"id": "6844903498056728584", "title": "[译]HTML&CSS Lesson4: 盒子模型", "desc": "现在我们已经熟悉了HTML和CSS。了解了它的基础。现在我们来更深入的了解元素在页面中的呈现和大小。 在这节课中，我们将会讨论什么是盒子模型，它的工作模式是怎样的。我们也会在课程中学习一些新的CSS属性，并且将介绍三种长度单位。 在了解盒子模型之前，我们先来了解一下元素是如何显…"}, {"id": "6844903538246549511", "title": "Webpack实战-为单页应用生成HTML", "desc": "在简单的项目里因为只输出了一个 bundle.js 文件，所以手写了一个 index.html 文件去引入这个 bundle.js，才能让应用在浏览器中运行起来。 在实际项目中远比这复杂，一个页面常常有很多资源要加载。接下来举一个实战中的例子，要求如下： 项目采用 ES6 语言…"}, {"id": "6900151751417167880", "title": "strong和b，em和i标签的区别", "desc": "1. 效果展示 在Chrome浏览器中，可以看出strong与b标签，em和i标签的效果样式没有区别，并且都是行元素。strong和b标签默认都是字体加粗的效果，em和i默认都是文字斜体的效果。 2. 区别 b标签仅仅只是给文字添加了加粗样式，属于UI层面的处理，除此之外没有任…"}, {"id": "6844903584975290375", "title": "underscore 系列之字符实体与 _.escape", "desc": "underscore 提供了 _.escape 函数，用于转义 HTML 字符串，替换 &, <, >, \", ', 和 ` 字符为字符实体。 比如我把这个页面的地址修改为：www.example.com/user.html?name=<script>alert(1)</scr…"}, {"id": "6844903822955905037", "title": "有关placeholder在ie9中的一点折腾。", "desc": "placeholder属性定义： placeholder 属性规定可描述输入字段预期值的简短的提示信息（比如：一个样本值或者预期格式的短描述）。 问题： placeholder属性给予了用户很友好的提示，但是在老版本的浏览器中就不会起作用（Internet Explorer 9…"}, {"id": "6844903928585273352", "title": "HTML入门  (1)", "desc": "HTML：HyperText Markup Language 超文本标记语言。 HTML不是一种编程语言，而是一种标记语言。HTML拥有许多用于描述一个网页内容和结构的标记标签（Markup Tag） HTML文件主要由浏览器进行编译渲染，但是浏览器能识别的文档类型不仅仅只有H…"}, {"id": "6844903619142090765", "title": "移动端本地 H5 秒开方案探索与实现", "desc": "企业微信移动端项目中有需求要展示数据趋势的可视化图表，经过调研，最终决定以单页面 H5 来完成，对 APP 里的一些使用 H5 实现的功能模块，一般体验都比原生差，那么怎么提高h5加载速度？优化 h5 体验？ 适用场景：需要快速迭代、客户端难实现的、用作展示的功能模块…"}, {"id": "6844903711337086990", "title": "基于H5 canvas API 编写的扫雷游戏第一部分：资源加载", "desc": "引入fs模块用来加载资源文件，如：样式表，图片，html模板等加载样式表同步的方式读取样式表文件，如果样式表不存在，那么创建一个style元素，设置样式表内容，并添加到head的尾部创建资源对象我们用"}, {"id": "6946477138346246180", "title": "《浅析 URL》", "desc": "是因特网的万维网服务程序上用于指定信息位置的表示方法。它最初是由蒂姆·伯纳斯·李发明用来作为万维网的地址。现在它已经被万维网联盟编制为互联网标准RFC1738。 IP是Internet Protocol（网际互连协议）的缩写，是TCP/IP体系中的网络层协议。根据端到端的设计原…"}, {"id": "6899680228005085192", "title": "常见的样式声明", "desc": "（1），预设值：定义好的单词 red，yellow，green... double: 定义两个边框。 两个边框的宽度和 border-width 的值相同 groove: 定义3D沟槽边框。效果取决于边框的颜色值 ridge: 定义3D脊边框。效果取决于边框的颜色值 inset…"}, {"id": "6899675154356371469", "title": "初识CSS", "desc": "伪元素/伪对象：不存在在DOM文档中，是虚拟的元素，是创建新元素。代表某个元素的子元素，这个子元素虽然在逻辑上存在，但却并不实际存在于文档树中 ::before 匹配出现在原有元素的实际内容之前的一个可样式化元素。 ::after 匹配出现在原有元素的实际内容之后的一个可样式化…"}, {"id": "6943498274019999775", "title": "HTML5-本地存储浅谈", "desc": "sessionStorage - 用于临时保存同一窗口(或标签页)的数据，在关闭窗口或标签页之后将会删除这些数据，会话级别的存储。 IndexedDB - 是一种低级API，用于客户端存储大量结构化数据(包括, 文件/ blobs)。该API使用索引来实现对该数据的高性能搜索。…"}, {"id": "6844903589400281101", "title": "Houdini 实战：自定义 checkbox", "desc": "在 html 中使用 checkbox 时，可能会由于默认 checkbox 的样式不符合页面风格，或是在不同浏览器样式不同而需要自定义。 常见的自定义 checkbox 的方法有： 为不同状态的 checkbox 定义不同的背景图。 定义 CSS 的 before、after…"}, {"id": "6844903537931976718", "title": "D2小记-体验“匠心”之旅", "desc": "就着最近第一次参加前端技术论坛写个小小的记录吧~"}, {"id": "6844903833936609293", "title": "重学前端系列--语义类标签", "desc": "语义类标签是什么，使用它有什么好处语义标签使用场景作为自然语言延伸的语义类标签ruby(类似于注音或者意思的注解)em(重音强调，来消除歧义)作为标题摘要的语义类标签hgroup（有时候会用副标题，为"}, {"id": "6844903505044439053", "title": "Front-End-Checklist", "desc": "The perfect Front-End Checklist for modern websites and meticulous developers"}, {"id": "6898720154940375054", "title": "一个专注极简的导航主页", "desc": "一个专注极简的导航主页。"}, {"id": "6844903550640734221", "title": "人人都是艺术家！谈谈那些奇怪的字符（上）", "desc": "编码，是每个程序员绕不开的话题。对于前端工程师而言，字符更是会直观地展示在界面上。 提起文字，大部分人的脑中，都会定式为规整排列的字符。但是林子大了什么鸟都有，世界上可是存在着6800+种文字，难免会飞出来一些诡异的鸟… 而号称“万国码”的Uni…"}, {"id": "6844903616872972302", "title": "被遗忘的CSS和HTML（二）", "desc": "先前写了一篇《被遗忘的CSS和HTML（一）》，后来因为各种事情，懒得写。最近把文章分享到掘金收获了不少点赞和鼓励，决定就再写点，希望从另一个角度去看一些问题的解决方法，还是那句话： 各种技术都有其适用场景 这里更多的是探讨另一种思考问题和解决问题。 最近几年，前端的发展向Ja…"}, {"id": "6844903500975964173", "title": "前端的基礎修養：ARIA Live Regions", "desc": "現代的 Web 越來越依賴 JavaScript，頁面裏的內容亦會隨着使用者的操作發生變化，我們需要標註出哪些變化必須通知給讀屏軟件，這些需要標註的動態區域便是 Live Regions。"}, {"id": "6844903615564349454", "title": "基于 HTML5 的 WebGL 3D 版俄罗斯方块", "desc": "摘要：2D 的俄罗斯方块已经被人玩烂了，突发奇想就做了个 3D 的游戏机，用来玩俄罗斯方块。。。实现的基本想法是先在 2D 上实现俄罗斯方块小游戏，然后使用 3D 建模功能创建一个 3D 街机模型，最后将 2D 小游戏贴到 3D 模型上。 （ps：最后拓展部分实现将视频与3D模…"}, {"id": "6844903941340135437", "title": "Headfirst HTML and CSS 笔记（2）", "desc": "连接起来为链接增加标题以便访问使用id属性为<a>创建目标使用target打开新窗口为你的页面增加图像浏览器如何处理图像图像是如何工作的JPEG、PNG、和GIF的不同图像的候选格式调整图像大小使用缩"}, {"id": "6844903645335519246", "title": "你可能从未听说过的15种HTML元素方法！", "desc": "我们来讨论HTML和DOM之间的区别。 显然，一个普通<table>元素就是HTML。您可以在.html的文件中使用它。它有一组属性影响它的外观和行为方式。这就是HTML，不过它与JavaScript无关。 DOM是将JavaScript代码与文档中的HTML元素相关联的内容，…"}, {"id": "6844903862025863181", "title": "HTML相关的一些简单知识", "desc": "HTML（超文本标记语言——HyperText Markup Language）是构成 Web世界的一砖一瓦。它定义了网页内容的含义和结构。除 HTML 以外的其它技术则通常用来描述一个网页的表现与展示效果（如 CSS），或功能与行为（如 JavaScript）。 W3C简介：…"}, {"id": "6910623030519529479", "title": "HTML系列（2）：常用的结构/章节标签", "desc": "h1 ~ h6 都用来表示文章标题，6 个标题的重要性从 h1 到 h6 依次递减。 默认情况下，浏览器会使用粗体显示标题，字体大小从 h1 到 h6 递减。一般来说，一个网页只设置一个 h1 标题。 nav 标签用于放置页面或文档的导航信息。 article 通常用来表示一篇…"}, {"id": "6844903937183580173", "title": "走进HTML5，Canvas一探究竟", "desc": "Canvas 是 HTML5 新增的一个标签属性，一个可以使用脚本在其中绘制图像的 HTML 元素。它可以用来制作照片或者制作简单的动画，甚至可以进行实时的视频处理和渲染。Canvas 是由 HTML 代码配合高度和宽度属性而定义出的可绘制区域。JavaScript 代码可以访…"}, {"id": "6844903695029633038", "title": "webpack4 系列教程(十三)：自动生成HTML文件", "desc": "0. 课程介绍和资料 1. 为什么要自动生成 HTML？ 看过这个系列教程的朋友，都知道在之前的例子中，每次执行webpack打包生成js文件后，都必须在index.html中手动插入打包好的文件的路径。 但在真实生产环境中，一次运行webpack后，完整的index.html…"}, {"id": "6844903520865370126", "title": "fish-ui 1.0.96已经更新了，支持了移动端", "desc": "总重要更新就是支持移动端，欢迎使用"}, {"id": "6844904025150734344", "title": "HTML5(三)——JSON，深拷贝浅拷贝", "desc": "JSON用于前后端数据交互的数据类型，是一个字符串Json.stringify把object转换成stringJson.parse(tmp)把string转换成object深拷贝，浅拷贝浅拷贝：赋值地"}, {"id": "6844903495946993672", "title": "回敬尾巴是阿里的某资深：手撸一个基于html字符串模板的Virtual DOM", "desc": "之前发表了HTMLStringParser，但是撸完之后觉得没完，顺着逻辑可以撸出一个Virtual DOM，于是就继续撸了。这篇文章在HTMLStringParser的基础上，全面阐释了撸一个Virtual DOM的全部逻辑思路，并且有源码可以参考。"}, {"id": "6844903605279916040", "title": "Html 5.2 的简单介绍及新增元素 <dialog></dialog>", "desc": "html 5.2 已经于2017年12月 14 日发布, 以下是对html5.2的简单的介绍（注：本文笼统地整理了一部分Html5.2的改动，如有错误之处，敬请指正）。 从2016年1月12开始的所有更改细节都可以到Github上查看。不过这次改动很明显的是降低了商务应用的和风…"}, {"id": "6844903720216428558", "title": "CSS和网络性能", "desc": "CSS对于呈现页面至关重要 - 在找到、下载和解析所有CSS之前，浏览器不会开始呈现 - 因此我们必须尽可能快地将其放到用户的设备上。关键路径上的任何延迟都会影响我们的“开始渲染”，并让用户看到空白屏幕。 所以要注意的一个好的经验法则是，页面只会像最慢的样式表一样快速地呈现。 …"}, {"id": "6844903843378003982", "title": "前端随笔 —— Form 的原生部件", "desc": "最近在学Chrome的扩展，在写单选框的时候突然忘了radio怎么合并成一个组。。。组件库用多了基本的HTML标签都忘了。 然后就去MDN上查。发现了两个个没见过的标签<fieldset> <legend>。 看了下文档，原来<fieldset>用于对<form>中的控制元素分…"}, {"id": "6844903637051768846", "title": "前端调试：记Iscroll4 疑难杂症之z-index失效", "desc": "用了一个很大的词“前端调试”，事情是这样的，这两天一直在解决一个bug，我们用iscroll做了一个下拉刷新的产品列表页面，总会出现页面渲染错乱的问题，只要用js动态修改html或者在浏览器开发者工具中修改css、html就会恢复正常。 本来想分享一下iscroll的问题，避免…"}, {"id": "6915763735285989383", "title": "《HTML入门笔记1》", "desc": "HTML的发明人HTML起手标准格式常用的表章节的标签有哪些h1~h6是对应的一级标题至最多六级标题section是对应的文章的章节，如果所要输入的段落属于一个章节，那么这部分内容就应该被sectio"}, {"id": "6904096880864477191", "title": "前端编程之路一一HTML标签分类", "desc": "HTML标签有更多种，不仅限于以下标签，仅作记录。 | section | 定义文档中的节（section、区段）。比如章节、页眉、页脚或文档中的其他部分 | | |"}, {"id": "6844903904686112781", "title": "跨标签页解决方法", "desc": "Safely enables cross-origin communication among different browser tabs. Uses PostMessage API for communication. Easy to hook custom callbac…"}, {"id": "6903316344301682696", "title": "一步到位的BFC学习", "desc": "之前对BFC理解一直不详细，现在趁着整理面试题的时候学习一下。 box是css布局的核心对象和基本单位，简单来说，一个页面是由很多的box组成的，box身上附加的display属性和box的类型，决定了这个box以什么样的方式渲染在页面中。一般box有三种类型。 这里讲的是块级…"}, {"id": "6844903926056091655", "title": "DOM元素Window关于宽高、screen、scroll相关属性", "desc": "了解或者熟悉 window 对象的关于宽高、screen、scroll相关属性，我们在进行自定义控件或者进行绘制的实现时候，是比较重要的参考参数。有些参数名字相近或者相似，比较难区分。因此，非常有必要来梳理一下。 宽高，scroll，screen 相关的属性如下。 innerW…"}, {"id": "6850418115785064455", "title": "【翻译】What's new in HTML5", "desc": "HTML5是HTML的最新版本，且与原有版本有很大的改动。这些改动的目的是将许多开发人员在使用的新方法标准化，也是为了鼓励一种web开发的最佳做法。 大多数单独特性的变化是语言整体设计目标的结果。这些目标主要包括： 掌握HTML5不止意味着学习CSS特性代替老的HTML特性。如…"}, {"id": "6844903507053527053", "title": "标签 <a> 的最佳实践", "desc": "也就是 <a></a>， 我们需要关注的就是<a>中的属性，以及标签之间的内容（content）. 前端的一个关键目的就是，尽可能满足不同用户的需求。这里的用户不光指人类，还包括各种搜索引擎，各种辅助设备（比如给视障人士的读屏器等）。 对于搜索引擎来说，会着重分析标签<a>中的…"}, {"id": "6844903834343456775", "title": "重学 html の link标签", "desc": "link元素规定了外部资源与当前文档的关系。常用于链接样式表，创建网站图标，预加载资源等。 用于前端界面性能优化，rel 的属性值可以为preload、prefetch、dns-prefetch。 用户在使用当前界面时，浏览器空闲时先把下个界面要使用的资源下载到本地缓存。浏览器…"}, {"id": "6844903810125529102", "title": "WebWorker究极探索", "desc": "Web Workers是Web内容在后台线程中运行脚本的简单方法。工作线程可以在不干扰用户界面的情况下执行任务。此外，它们可以使用I / O执行XMLHttpRequest（尽管responseXML和channel属性始终为null）。创建后，工作人员可以通过将消息发布到该代…"}, {"id": "6844903618999484430", "title": "几个有用的Web API——桌面通知API", "desc": "主要内容—— 1. 介绍Notification API的用法 2.允许浏览器发起桌面通知，调用简单 3.一个构造函数，若干配置及静态属性，几个常用方法 4.一些样式上的差异"}, {"id": "6844903729141907469", "title": "Web Components 小榄", "desc": "Web Components技术可以把一组相关的HTML、JS代码和CSS风格打包成为一个自包含的组件，只要使用大家熟悉的标签即可引入此组件。Web Components技术包括： 四个分离而又互相关的四个构造块。其中核心的即使是Custom Element、Shadow DO…"}, {"id": "6844903815091748872", "title": "浏览器渲染网页的过程", "desc": "浏览器的主要功能是将用户选择的 web 资源呈现出来，它需要从服务器请求资源，并将其显示在浏览器窗口中，资源的格式通常是 HTML，也包括 PDF、image 及其他格式。 浏览器是多线程的，它们在内核制控下相互配合以保持同步。一个浏览器至少实现三个常驻线程：JavaScrip…"}, {"id": "6940966600367407141", "title": "《图解HTML》第三节 HTML简介", "desc": "由前面两个章节了解到，浏览器如同一个加工厂，在这个加工厂里面，有HTML、CSS、JS三大零件，然后浏览器将这些零件组装成一张张美丽的网页。 HTML负责骨架，CSS负责样式，JS负责行为。 HTML是Hyper Text Markup Language（超文本标记语言）的简写…"}, {"id": "6976969960551612423", "title": "a标签target属性你了解吗？", "desc": "HTML <a> 元素（或称锚元素）可以通过它的 target属性指定在何处显示链接的资源。可target属性值你真的了解吗？"}, {"id": "6844903604826931213", "title": "用Python3来实现一个简单的Web服务器 ", "desc": "用通俗易懂的语言来讲解，如何使用最简单的socket，用python3来实现一个简单的Web服务器，只需要能看懂python3的语法就妥妥的。"}, {"id": "6844903668441939975", "title": "React.js和Vue.js有感—前端开发组件化思想的局部要点理解", "desc": "无论是vue还是react，核心思想离不开组件化，而组件化中，脱离了传统的操作DOM对UI状态的改变，更进一步通过对数据的操作来改变UI状态，避免了直接操作DOM的繁琐和易出现的bug。 而组件化中的关键两点就是组件的props和state，说直白一点就组件的属性和状态。这两点…"}, {"id": "6844903614461247495", "title": "HTML5 : Drag & Drop", "desc": "Drag&Drop设置元素为可拖放draggable事件设置数据e.dataTransfer.setData()1.实战---将【1】和【2】放到【放置框】内2.实战---拖住排序加拖拽删除"}, {"id": "6844903813980094472", "title": "谈谈url、href、src ", "desc": "统一资源定位符是对可以从互联网上得到的资源的位置和访问方法的一种简洁的表示，是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。 基本URL包含模式（或称协议）、服务器名称（或IP地址）、路径和文件名，如“协议:…"}, {"id": "6913208284635725837", "title": "HTML入门笔记1", "desc": "HTML(HyperText Markup Language)，即超文本标记语言或超文本链接标示语言，是“万维网之父” 提姆·博纳斯·李 Tim Berners-Lee所发明的。 起手式指的是HTML起始的基础格式，主要包含编码信息，文档类型等基本信息。 h1~h6: h表示h…"}, {"id": "6844904200426487816", "title": "面试浏览器/HTML/CSS问题", "desc": "flex-grow:项目放大比例。默认为0 不同的浏览器默认margin和padding不同。 块元素float后，有横向的margin。解决方式：设置成行级元素（inline） 前者不占用空间，也就是none没了，后者只是隐藏起来，依旧占用空间。 特性1：垂直方向的距离由ma…"}, {"id": "6844904199407271943", "title": "常见空格一览", "desc": "查了一下，这是一个发宽空格，Unicode编码为U+200A。故借此把常见的普通和特殊空格整理一翻。 这是最常用的空格，拉丁文的空格，ASCII编码0x20。在英文输入法（和中文输入法半角状态）下，由键盘空格键直接输出。这个空格的宽度会受到所使用的字体的影响： 例如在上图所示的…"}, {"id": "6844903621411209229", "title": "JavaScript 工作原理之十一－渲染引擎及性能优化小技巧", "desc": "本系列持续更新中，Github 地址请查阅这里。 这是 JavaScript 工作原理的第十一章。 迄今为止，之前的 JavaScript 工作原理系列文章集中于关注 JavaScript 语言本身的功能，在浏览器中的执行情况，如何优化等等。 然而，当在构建网络应用的时候，不仅…"}, {"id": "6844903504947970056", "title": "程序猿小白应该注意什么", "desc": "如上代码出现问题。定位到这个错误很困难，因为你首先需要看页面源代码查找插入的这段HTML，但是找不到，因为它是动态生成，如果你对数据或者布局更改也会要求更改js，所以html呈现应该‘尽可能’的与js分离。 语义化的意思就是从名称中一眼就能看出内容是什么，HTML标签就是通过浅…"}, {"id": "6944901422789951496", "title": "面试题：如何实现一个拖拽插件（一）", "desc": "在我的项目中使用过vue.draggable这个插件，用来做拖拽，它是封装Sortable这个插件的。 我做项目没有看过其源码，说起它的原理来也是靠猜的，今天我网上去下载下源码来，看了半个小时，两眼一抹黑，更懵了。 然后我就网上去找拖拽改变顺序的原理，万能的搜索引擎，我找到了这…"}, {"id": "6844903678713790477", "title": "H5游戏开发：横屏适配", "desc": "对于移动端的轻量级 HTML5 互动小游戏（简称为 H5 轻互动)，如果从屏幕呈现模式来划分的话，可以归类为：竖屏式和横屏式。 平常我们做过的需求里，主要是以竖屏式为主，而横屏式较少。对于竖屏式场景来说，大家的经验会比较丰富，因此，此次主要式探讨下横屏式场景下的一些需要注意的点…"}, {"id": "6844903873774092301", "title": "web 原生图片延迟加载", "desc": "我们希望在 Chrome 75 中提供 loading 支持，不久之后发布。在那之前，让我们深入研究一下 loading 是怎么作用的。 浏览器页面经常包含大量图片，这会导致网络数据使用、页面膨胀和页面加载速度等问题。这些图片大多处于屏幕之外，需要用户滚动页面才能看到。 准确的…"}, {"id": "6925666810540851214", "title": "BFC（Block Formatting Context）块级格式化上下文之深层解读", "desc": "大家应该都不陌生，Box是CSS布局的对象和基本单位，直观点说就是一个页面是由很多个Box组成的。不同类型的Box，会参与不同的Formatting Context（一个决定如何渲染文档的容器），因此Box内的元素会以不同的方式来渲染。 block-level box：disp…"}, {"id": "6844903641522896909", "title": "多页项目的webpack配置", "desc": "在我们使用vue，angular等框架开发的时候，大多数都是构建单页项目。而且，像这样的框架都有对应的命令一步生成webpack配置（比如vue的vue init webpack my-project之类）。 但是如果我们要开发多页面项目的时候就没有这么方便了，你必须要自己配置…"}, {"id": "6854573209900695566", "title": "图片优化如何让网站减重60%", "desc": "图片是web上提供的最基本的内容类型之一。他们说一张图片值一千个字，但如果你不小心的话，它也可以值几兆大小。 因此，尽管Web图像需要清晰明快，但也必须以可管理的大小进行展示，以使加载时间保持较小，数据使用率保持在可接受的水平。 在我的网站上，我注意到我的主页页面重量超过1.1…"}, {"id": "6844903605904867335", "title": "JS控制设备摄像头初探", "desc": "主要内容： 1.获取设备摄像头信息 2.利用摄像头截图并保存 3.手动控制前后置摄像头"}, {"id": "6844903635453739022", "title": "浏览器已原生支持 ES 模块，这对前端开发来说意味着什么？", "desc": "还记得当初入门前端开发的时候写过的 Hello World 么？一开始我们先创建了一个 HTML 文件，在 <body> 标签里写上网页内容；后来需要学习页面交互逻辑时，在 HTML markup 里增加一个 <script src=\"script.js\"> 标签引入外部 sc…"}, {"id": "6844903606278160391", "title": "注意安全！XSS 和 XSRF", "desc": "[Tips] 本文是从 jianshu 平台重新修改编辑后移植来的，比上一版本做了些修订。 最近在看一些关于网络安全的问题，当然许多是跟前端相关的，包括且不局限于xss和xsrf 了，那么小编就结合最近的学习实践谈一些粗浅的认识。（\\(^o^)/，我是一个喜欢做实验的家伙） X…"}, {"id": "6860495822514028557", "title": "政采云团队闯关双路线解法", "desc": "em，先不用大招，按照规则老老实实来。于是发现一个script标签： 去第四关，说要旋转得到密码。看了一顿cookie、localstorage没什么可利用的 这个旋转，em，一点点烧脑，晚上下班了脑壳疼不想思考。对不起，要耍赖了。去element，定位到input的事件的js…"}, {"id": "6844903535411200007", "title": "express，koa2等node处理前端上传图片并保存到文件中", "desc": "在另个项目中，同样的代码却报错了... 我也是一脸懵逼"}, {"id": "6989449019596472350", "title": "HTML 列表基础", "desc": "列表元素 所有列表都是由父元素和子元素构成。父元素用于指定要创建的列表类型，子元素用于指定要创建的列表的项目类型。下面列出三种列表类型以及它们组成的元素： □有序列表，ol 为父元素，li 为列表项。"}, {"id": "6844904114065768462", "title": "DOM property 和 attribute 的区别详解", "desc": "之前在阅读vue 的api的时候，在解释指令v-bind时，其中关于修饰符 .prop 的解释是- 作为一个 DOM property 绑定而不是作为 attribute 绑定。 令我挺好奇的，虽然干了这么久前端还未详细探究过两者之前的具体区别。于是就跟着链接进入了Stack …"}, {"id": "6844904056163401742", "title": "理解Javascript的柯里化", "desc": "总括: 本文以初学者的角度来阐述Javascript中柯里化的概念以及如何在工作中进行使用。 事亲以敬，美过三牲。 函数式编程是一种如今比较流行的编程范式，它主张将函数作为参数进行传递，然后返回一个没有副作用的函数，说白了，就是希望一个函数只做一件事情。 像Javascript…"}, {"id": "6844903759206678536", "title": "从零到一：实现通用一镜到底H5", "desc": "用Pixi.js AlloyTouch TweenMax实现通用的一镜到底H5"}, {"id": "6925236653757825037", "title": "Sign-in form best practices", "desc": "Use cross-platform browser features to build sign-in forms that are secure, accessible and easy to use. If users ever need to log in to you…"}, {"id": "6844903641661308942", "title": "Web Components 原生组件 Trends", "desc": "在现在前端组件化开发大行其道的今天，各种Framework让人眼花缭乱，同一个公司，不同团队，可能使用的是不同的框架。那么在统一视觉，交互，功能上，不同的框架可以都需要用不同的框架开发一遍，但是在功能和交互有所改变的时候，又需要全部同步开发一次。这种对人力和物力都是一种消耗，而…"}, {"id": "6938271232701759519", "title": "HTML凡尔赛技巧", "desc": "前言HTML标签是前端专属的DSL语言，它是前端绘制页面必不可少的语言，掌握HTML标签的一些小技巧，可以快速提升我们的开发效率以及特定的一些性能优化哦~正文base标签我们在跳转页面的时候通常使用的"}, {"id": "6992804024072273928", "title": "HTML标签", "desc": "HTML标签起手式 写HTML首先应该写什么？ 我们可以把语言改为中文<html lang=\"ch-ZN\"> 章节标签 <h1~h6> -标题 <section>-章节 article-文章 <p> "}, {"id": "6844903606320267271", "title": "H5游戏开发：游戏引擎入门推荐", "desc": "前言很多刚刚接触到游戏开发，准备大展拳脚的小鲜肉们，往往在技术选型这第一关就栽了跟头。毕竟网络上的游戏引擎良莠不齐，官网上相关资料也比较少，而选择一个适合的游戏引擎是一个项目最基础，也是很核心的一部分"}, {"id": "6844903840433569800", "title": "基于 WebGL 的 HTML5 3D 智能楼宇监控系统", "desc": "智能监控已经涉及到了各大领域，工控、电信、电力、轨道交通、航天航空等等，为了减少人员的消耗，监控系统必不可少。之前我写过一篇 2D 的智能地铁监控系统广受好评，突然觉得，既然 2D 的这么受欢迎，那么 3D 的需求量肯定也是非常大的，3D 毕竟比 2D 来说还是更直观一些，于是…"}, {"id": "6944516385695350820", "title": "HTML/ CSS 入门", "desc": "我们在之前的学习中，对于网络有了一定的了解。现在我们来学习一些基础的 HTML/ CSS 知识。希望阅读完这篇文章能达到编写简单页面的程度。 Part 1. HTML/ CSS 的发明 1989 年 3 月，互联网还只属于少数人。 同年，蒂姆·伯纳斯·李（Tim Berners…"}, {"id": "6844903614381555726", "title": "HTML/BODY的背景渲染原理", "desc": "当html标签被设置了背景色时，我们看见的是真正作用在body上的背景色。 人在前端已经漂泊数年，机缘巧合才发现，这几年给body写的背景色，全被浏览器给「吃」了。文中涉及的是CSS中关于特殊元素（html/body）的背景渲染的原理，对你而言它也许是块新大陆，也可能，你早已熟…"}, {"id": "6844903599923806222", "title": "webpack实战（一）：真实项目中一个完整的webpack配置", "desc": "前段时间，使用webpack查阅资料时发现要么是入门级文章，要么是如何优化打包速度或如何使用某个plugin、loader的文章。找不到一个在真实项目中的使用webpack的完整方案用以参考，所以花了许多精力去整合资料、查看代码和踩坑。 因此我将自己摸索的一个配置方案，分享出来…"}, {"id": "6913016498957221901", "title": "前端面试总结(HTML/CSS基础)", "desc": "部分渲染树（或者整个渲染树）需要重新分析并且节点尺寸需要重新计算。这被称为重排。注意这里至少会有一次重排-初始化页面布局。 由于节点的几何属性发生改变或者由于样式发生改变，例如改变元素背景色时，屏幕上的部分内容需要更新。这样的更新被称为重绘。 用户行为，例如调整窗口大小，改变字…"}, {"id": "6844903813116067853", "title": "[译] 编写可以复用的 HTML 模板", "desc": "在我们的上一篇文章中, 我们讨论了 web 组件规范（自定义元素、shadow DOM 和 HTML 模板）的高级特性。在本文以及接下来的三篇文章中，我们将这些技术应用到测试并更详细地去验证它们，看下我们在如今的产品如何应用它们。为了做到这些，我们将会从零开始构建一个自定义模式…"}, {"id": "6844903879042138120", "title": "点击a链接打开第三方页面变成下载页面问题", "desc": "公司官网上需要点击一个链接打开新标签页到第三方网站，但是总会出现第一次能打开，后面点击都是下载页面。 尝试了很多，在https的网站上点击这个链接，不会出现下载的情况；而在http的网站上就会出现以上情况，不仅是a链接，连iframe也会下载。 猜想：我想是不是这个第三方网站认…"}, {"id": "6896426169982255112", "title": "页面📃的生命周期小记", "desc": "整个页面加载是用户体验界面最重要的一部分，当你对浏览器对页面生命周期更为了解后，可以更好优化很多场景下的问题。 DOMContentLoaded 表示浏览器已经完全加载完HTML并且构建完成DOM树🌲，但是此时一些外部资源并不一定完成，比如（样式表，图像，iframe等等）。…"}, {"id": "6844903865737822216", "title": "[译] 将第三方动画库集成到项目中 — 第 1 部分", "desc": "创建以 CSS 为基础的动画可能是一个挑战。它们可能是复杂且耗时的。你是否需要在时间紧迫的情况下调整出一个完美的动画（库）来推进项目？这时，你该考虑使用一个拥有现成的动画插件的第三方 CSS 动画库。可是，你仍然会想:它们是什么？它们提供什么？我如何使用它们？ 我们来看看吧。 …"}, {"id": "6844903849723969544", "title": "[译] 为什么 HTML 中复选框样式难写 — 本文给你答案", "desc": "在当今世界，大多数网页开发者认为掌握 JavaScript 是优先选择，这理所当然，因为 JS 是浏览器脚本语言。虽然 HTML 和 CSS 决定网站的样式，但是 JS 凭借它能调用 HTML 和 CSS API，优良性能以及它的多功能性，深受网页开发者喜爱。像 React、V…"}, {"id": "6977645671121682463", "title": "XML语言数据读写理解9", "desc": "因为篇幅原因就不把上一节的XML文件粘贴上来了，大家可以返回去看。 现在，我们需要把所有的node都读出来，然后保存到一个容器里。要注意的一点是所有的数值都是根据NormalizedIntensity"}, {"id": "6911204007050641416", "title": "你知道被标准化的 HTML 标签有多少个吗？", "desc": "前些天 winter 老师直播问了一个问题，你知道现在有多少个被标准化的 HTML 标签吗？这是个很有意思的问题。写了这么久的 HTML，那到底有多少个被标准化的 HTML标签呢？ 首先，我们访问 HTML 标准文档，这张表格中整理了所有的 HTML 标签。我们可以将它们黏贴到…"}, {"id": "6844903977075605518", "title": "浏览器窗口间跨域通信的解决方案", "desc": "往往页签A操作后需要更新页签B的数据，如页签A创建新记录后要刷新页签B的列表。A、B如果处于同一域，更新的方式有很多，很容易解决。但是A、B不在同域时，跨域通信就变成一个难题了。 方法可以安全地实现跨源通信。通常，对于两个不同页面的脚本，只有当执行它们的页面位于具有相同的协议（…"}, {"id": "6844904190183997453", "title": "总结了一些HTML、CSS的一些简单特性，纯属个人笔记，非文章", "desc": "在html中，lable标签通常和input标签一起使用，label标签为input元素定义标注（标记）。使用该标签后，你点击单选按钮或复选按钮的文本也是可以选中的。 第一等：代表内联样式，如: style=””，权值为1000。 第二等：代表ID选择器，如：#content，…"}, {"id": "6844903501814824967", "title": "Zepto源码分析之form模块", "desc": "对表单字段的名称和值进行URL编码，使用&分隔。 不发送禁用的表单字段。(也就是属性disabled为true的) 在单击提交按钮表单的情况下，也会发送提交按钮的value值，否则不发送提交按钮。 select元素的值，就是选中的option元素的value属性的值，如果opt…"}, {"id": "6844904196261543944", "title": "熟悉的html,却说不出html的味道", "desc": "html 经常被使用着，却表达不出对应的点，心里懂！却说不出html那种味道。 例如：什么是网页，对着心中提问（我的回答，网页就是浏览器显示的页面）这样说也没什么不好，但总感觉缺少点啥，如果对着心里这么去说：网页就是一个文件，一个html文件，这个文件是由图片、文字、声音、视频…"}, {"id": "6955078607937142820", "title": "HTML列表&表单&表格", "desc": "列表标签 无序列表 注： ul-li组成无序列表，ul和li必须是嵌套关系，并且ul标签内只能写li标签 无序列表后期使用很常见，会清楚其原有的样式，只保留它的骨架，方便对代码内容进行分组 有序列表 "}, {"id": "6844904054540206088", "title": "写好 HTML 不只有标签语义化", "desc": "随着近两年组件化 JS 框架的流行，大家对于 HTML 本身的关注度些许有些降低。HTML 容易被人忽视但并不代表它不重要。一个网页，可以没有 JS 也可以没有 CSS 但是一定不能没有 HTML（当然可能还有其它的标记语言）。 在我看来写好 HTML 远远不止标签语义化这么简…"}, {"id": "6844903816689614861", "title": "网站使用原生 lazy-loading 加载图片", "desc": "In this post, we'll look at the new loading attribute which brings native <img> and <iframe> lazy-loading to the web!. For the curious, her…"}, {"id": "6844903920951623693", "title": "【译】浏览器如何呈现页面（二）", "desc": "这篇文章是第二篇，第一篇在这里。 第一篇大致讲到了浏览器从获取原始数据开始，直到把内容画到屏幕上，但是还没有完。 当你听到“渲染阻塞”的时候，你会想到啥？我猜是，‘某些行为阻止了浏览器把内容画到屏幕上’。 的确是你猜的那样。 所以这里有了我们的第一个优化点，把最重要的HTML内…"}, {"id": "6904192920887574541", "title": "面试造火箭，工作拧螺丝！——web前端面试100问之HTML5和CSS3篇", "desc": "1.前端与后端数据交互的格式有哪些，为什么大部分现在都用json而不用xml答：XML：JSON：{name:”知了堂”,age:3}JSON书写方便节省字节，更轻量，前后台都有直接解析JSON的方法"}, {"id": "6943860496584048653", "title": "31 HTML", "desc": "HTML是指超文本标记语言，是一门主要用于网页开发的编程语言。 HTML中注释标签是以 &#x3C; !-- 开头，以 -->结尾，标签中的内容就是注释，是不会显示在网页中的。 &#x3C; br/>标签就是换行标签，标签中的/可以省略不写(HTML语言是门不严谨的语言)，一般…"}, {"id": "6844903552263929869", "title": "一起来看 HTML 5.2 中新的原生元素 <dialog>", "desc": "不到一个月前，HTML 5.2 正式成为 W3C 的推荐标准（REC）,其中，推出了一个新的原生模态对话框元素 <dialog>，乍一看，可能感觉它就是一个新增的元素，然而，作者最近在玩的时候，发现它确实是一个值得期待和很有意思的元素，在这里分享给大家"}, {"id": "6844904015306686472", "title": "h5 拖放 | Filereader | 音频、视频 | 地理信息", "desc": "在标签中添加draggable=\"true\"，标签即可拖动。 这是因为，ondragover这个事件有一个默认行为，在 ondragover的最后默认被拖拽的元素回到原位（我是这么理解的），这样就解释了，在被绑定元素中松开了拖拽元素，没有触发ondrog而是触发了ondragl…"}, {"id": "6844903523201597453", "title": "切换Web应用主题色的 (KU)", "desc": "用户切换主题色后..."}, {"id": "6844903870632558600", "title": "HTML5语义化开发指南", "desc": "HTML5的主要进步之一是引入了一组标准化的语义元素。 ”语义元素“是用于以更有意义的方式标记文档结构的元素，这种方式可以清楚地表明它们的用途和目的是什么。而且重要的是，由于它们是标准化的，定义文档的这些元素可以被每个人使用并理解，包括机器人。 在web无障碍开发领域，给视障用…"}, {"id": "6844903606362046477", "title": "活用 Shader，让你的页面更小，更炫，更快", "desc": "可编程着色器（shader）是运行在 GPU 中的程序，是现代图形渲染技术的基础。shader 赋予了开发者「逐像素着色」的能力。桌面/移动设备的图形程序 API 诸如 OpenGL，OpenGL ES，DirectX 以及新一代的 Vulkan，shader 都是重中之重，核…"}, {"id": "6844903565954121741", "title": "[译]谷歌Web性能优化系列：HTTP 请求（中英）", "desc": "Everything a web page needs to be a web page -- text, graphics, styles, scripts, everything -- must be downloaded from a server via an HTTP…"}, {"id": "6901194101358592013", "title": "HTML总结05(移动适配布局)", "desc": "1. 为什么要适配 适应各种移动端设备，完美呈现应有的布局效果。 各个移动端的涉笔，分辨率不一致，网页想要铺满整个屏幕，需要在各种分辨率下等比缩放。 2. 现在主流的开发思路 响应式开发，既能适应移动端，也能适应PC端。 3. 屏幕尺寸 4. 屏幕分辨率 像素：由图像的小方格组…"}, {"id": "6883353218319908871", "title": " clientX/screenX/offsetX/pageX等属性一览", "desc": "在熟悉业务中播放器功能的时候，发现时间轴上绑定了点击和拖动事件，频繁遇到了类似pageX之类的事件属性。往往在需要动态计算元素的高度或者事件发生位置时需要用到此类属性，之前的学习中没有系统性地进行过归纳总结。现从最基本的鼠标事件的属性开始，完整的梳理一下各个属性的区别以便日后查…"}, {"id": "6844903692894732295", "title": "[译] 现代浏览器内部揭秘（第三部分）", "desc": "这是关于浏览器工作原理博客系列四部分中的第三部分。之前，我们介绍了多进程架构和导航流。在这篇文章中，我们将一探渲染进程的内部机制。 渲染进程涉及 Web 性能的许多方面。由于渲染进程的流程太复杂，因此本文只进行概述。如果你想深入了解，可以在 the Performance se…"}, {"id": "6985385932958466056", "title": "「HTML+CSS」--自定义加载动画【038】", "desc": "前言 效果展示 Demo代码 HTML CSS 原理详解 步骤1 使用span标签，设置为 边框：48px solid 效果图如下 步骤2 为span添加动画 关键分为4帧 第一帧 左边框颜色：rgb"}, {"id": "6844903841238876174", "title": "内容安全策略（CSP）详解", "desc": "网站的安全模式源于“同源策略”，web浏览器允许第一个web页面中的脚本访问页面中的数据，但前提是两个web页面具有相同的源。此策略防止一个页面的恶意脚本通过该页面的文档访问另一个网页上的敏感数据。 但是，跨网站脚本 (XSS)攻击可通过欺骗网站提供恶意代码和计划好的内容来绕过…"}, {"id": "6844903993525665800", "title": "语义化 HTML", "desc": "HTML5 新增了很多功能性标签如 video、audio 等多媒体标签，canvas、svg 图像标签，新的表单类型和属性，以及非常多的语义标签。 然而在的日常开发中除了用一些如 footer、header 等 h5 语义化标签外，其他的基本都是 div + span 一梭子…"}, {"id": "6869327886969470983", "title": "『极限版』不掺水，用纯 CSS 来实现超飒的表单验证功能", "desc": "去年的时候写过一篇文章 纯CSS实现表单验证 ，在发表之后不久就有网友跟鱼头说，打算拿我这篇文章作团队内部分享。 当时听到这个消息之后，在屏幕前的鱼头笑咧了嘴，但这位童鞋的下一段内容，就让我马上笑不起出来了。 只有在进行输入且输入内容不对的时候才展示错误信息。 我：“。。。。。…"}, {"id": "6984667303648444429", "title": "自学前端（一）：认识HTML并了解它的含义和书写规则", "desc": "前言 大家好，我是老谷。 今天正式开始进入学习，那么这篇文章，我将学习什么是HTML，了解并知晓其含义。 HTML的含义 HTML全称是“Hyper Text Markup Language”，即超文"}, {"id": "6844903918942552071", "title": "Html5  微信分享以及自定义内容", "desc": "当是这种情况的时候，假如你在安卓上使用页面完整的url去后端拿参数的时，在安卓端是可以完成配置的，但是在苹果端的时候，会莫名的出现有时候配置会报错，并且有可能在刷新页面的时候，就又可以完成配置。"}, {"id": "6844903520571752456", "title": "10分钟从原理分析移动端H5适配方案，让你适配不再慌乱（一）", "desc": "前言：前端的你，是否曾窃喜终于甩掉了IE6，却一个转身，猝不及防踏入移动端碎片大坑，今天过后，可以不用太过于纠结了，因为可以我帮你重塑对移动端的认识，从此以后，得心应手，提升效率不是梦。 知己知彼，百战不殆，我们前端开发也一样。知其然，知其所以然，不论从装逼或者实际开发的角度来…"}, {"id": "6941960744913076254", "title": "html页面引入另一个html页面", "desc": "⚠️注意: 引入后主页面的CSS样式不适用于被引入页面。比如: 在主页面设置只在本页面生效，引入文件整体适用，但引入文件内容不适用。"}, {"id": "6987696301982875661", "title": "第十四章 其他表单元素及输入验证", "desc": "自学HTML5权威指南时做的笔记，以便于后期使用时翻找。 本篇内容主要是该书的第十四章的内容，主要介绍的是制作的元素以及验证方法，例如select、textarea、required、pattern"}, {"id": "6984247010039693348", "title": "Canvas动画转视频-前段框架whammy", "desc": "Canvas动画转视频-前段框架whammy 写一个时钟动画 我直接在官网的demo基础上改了一些。 如何转视频 引入whammy.js的库，下载whammy.js，路径需要在同一级。"}, {"id": "6844903720363245575", "title": "一个中年girl的技能遗忘清单——曾经理解的Flex是错误的", "desc": "写给未来的自己，也许几个礼拜，也许几年。 今天突然接到一个任务，做一个专题。那么我肯定用html+css+js写，但是由于我写了大半年的小程序，我已经忘记了动画怎么写，特效怎么写，甚至连单位布局都忘记了。 于是我开始百度/谷歌，像一个初学者一样，一步一个脚印。写页面的速度慢的连…"}, {"id": "6859318186652336136", "title": "从输入url到页面完成加载发生了什么？", "desc": "在浏览器输入URL后，首先要经过域名解析。浏览器通过向 DNS 服务器发送域名，DNS 服务器查询到与域名相对应的 IP 地址，然后返回给浏览器，浏览器再将 IP 地址打在协议上，同时请求参数也会在协议搭载，然后一并发送给对应的服务器。 在客户端发送数据之前会发起 TCP 三次…"}, {"id": "6844903901049651214", "title": "[译] 仅使用 HTML 和 CSS 创建多级嵌套弹出式导航菜单", "desc": "今天，我将为你提供一个关于如何创建分层导航弹出式菜单的快速教程，该菜单可以跨多个级别进行深层嵌套。 作为抛砖引玉，我们将从一个具体的实际用例开始 —— 一个桌面应用程序的示例菜单栏。我将选择 Chrome 浏览器菜单栏中的一个子列表来说明这一点。 在最后，我们会增加一些样式，让…"}, {"id": "6969881197795082271", "title": "web前端-标题和段落", "desc": "图片中的标题和段落： 1、标题的创建 2、段落的创建（用 p 标签） 3、标题和段落之间的间距的设置 4、设置段落里面的下划线"}, {"id": "6844903697000955911", "title": "点点动画～画出懂你的3D魔方", "desc": "好吧，gif图看着好像有点不是很清晰，想在线预览的同学，可点击在线预览 👈，废话不多扯了，先来分析一下，看如何实现这个功能吧。 说到渐变，偶然之间发现了一个有意思的东西hue-rotate，它能在你初始的颜色基础上旋转元素的色调及其内容，从而达到不同的效果。了解更多 以上就是…"}, {"id": "6844903838328029192", "title": "基于 WebGL 的 HTML5  3D 工控隧道可视化系统", "desc": "隧道的项目我目前是第一次接触，感觉做起来的效果还蛮赞的，所以给大家分享一下。这个隧道项目的主要内容包括：照明、风机、车道指示灯、交通信号灯、情报板、消防、火灾报警、车行横洞、风向仪、COVI、微波车检以及隧道紧急逃生出口的控制。这个例子我主要讲一下风向仪、排风以及逃生出口的动画…"}, {"id": "6844903877330862094", "title": "[学习笔记] 使用 HTML 实现截图", "desc": "最近项目需求总是有HTML页面生成图片功能，所以就想记录一下自己在过程中遇到的问题，并加深印象，日后如果忘了也可以回顾。我们项目使用的是html2canvas插件，还有其他插件，例如dom-to-image、rasterizehtml，可以根据需求使用。 由于像素比（DPR =…"}, {"id": "6987724302212661278", "title": "「HTML+CSS」--自定义加载动画【044】", "desc": "前言 效果展示 Demo代码 HTML CSS 原理详解 步骤1 使用span标签，设置 宽度、高度均为48px 背景色：白色 效果图如下 步骤2 span标签圆角化 效果图如下 步骤3 使用box-"}, {"id": "6990639979852464165", "title": "【task0001】HTML, CSS基础", "desc": "百度前端学院task0001任务答案及解析，包括基础html,css以及flex, float等内容。"}, {"id": "6844903541866250247", "title": "Vue2 技术栈归纳与精粹", "desc": "Vue是一款高度封装的、开箱即用的、一栈式的前端框架，既可以结合webpack进行编译式前端开发，也适用基于gulp、grunt等自动化工具直接挂载至全局window使用。本文成文于Vue2.4.x版"}, {"id": "6978118149275123748", "title": "前端面试 | 18个常见HTML问题与答案", "desc": "HTML 是互联网上应用开发最广泛的语言之一，它可以带我们深入 Web 开发的世界，提高技能。如果你想从事 WEB 开发（前端开发）相关的职业，HTML 的基础就必须熟练掌握"}, {"id": "6990320641513619487", "title": "HTML 链接 a 标签的作用", "desc": "HTML 链接 a 标签的作用 转到某个网址或页面 转到页面内某个锚点 或者，转到另一个页面内的某个锚点 创建电子邮件链接 使用超链接进行邮件内容发送时，需要使用关键字 mailto 示例如下： 这样"}, {"id": "6959458931366166536", "title": "【游戏系列】原生js实现翻转卡片消除小游戏", "desc": "【游戏系列】原生js+html+css实现的卡片翻转消除小游戏,类似手游“植物大战僵尸2”里的小游戏"}, {"id": "6844903778395619341", "title": "基于 HTML5 WebGL 的地铁站 3D 可视化系统", "desc": "工业互联网，物联网，可视化等名词在我们现在信息化的大背景下已经是耳熟能详，日常生活的交通，出行，吃穿等可能都可以用信息化的方式来为我们表达，在传统的可视化监控领域，一般都是基于 Web SCADA 的前端技术来实现 2D 可视化监控，本系统采用 Hightopo 的 HT fo…"}, {"id": "6844903534169686023", "title": "使用纯粹的JS构建 Web Component", "desc": "Web Component 出现有一阵子了。 Google 费了很大力气去推动它更广泛的应用，但是除 Opera 和 Chrome 以外的多数主流浏览器对它的支持仍然不够理想。 在这篇文章中，我会演示如何创建带有样式，拥有交互功能并且在各自\b文件中优雅组织的 HTML 标签。 …"}, {"id": "6917072144966877191", "title": "移动端 viewport 适配", "desc": "viewport 适配方案中，每一个元素在不同设备上占据的 css 像素的个数是一样的，但是css像素和物理像素的比例是不一样 的，它们都是等比的。"}, {"id": "6844903509880471566", "title": "一次webpack体验", "desc": "这个是公司要做的一个官方网站。由于项目比较简单，要求是单页的，没有页面跳转，所以只有一个 .html 文件。项目用了比较常规的 bootstrap + jquery 的开发，这个也没啥好说的。考虑到 CDN 的可控性，所以把所有 bootstrap 的资源都下载到了本地进行引用…"}, {"id": "6844903516931112974", "title": "一个行为标准Popup组件(vue), 强大的过度动画支持, 和定位支持", "desc": "前言之前看过很多的组件库,但是它们的Popup行为和原生的界面差别不大,但是行为上面却各种小细节不足,所以有了这个强调行为标准的popup组件特点支持返回键,可以按浏览器返回按钮关闭popup可以写出"}, {"id": "6982733908672512030", "title": "列表", "desc": "无序列表 ul与li成对存在，并却ul的子标签只能是li绝对不能出现其他任何标签 但在<li标签中可以放其他标签，但li标签不能单独书写。 有序列表 ol/ol与li成对存在，并却ol的子标签只能是l"}, {"id": "6844903713031585799", "title": "如何实现一个 鼠标点击特效的 chrome插件", "desc": "在这个年代，不用chrome都不好意思说自己是敲代码的。特别是前端，chrome对于前端来说简直是调试利器，不可或缺的存在。不得不说chrome的功能是极其强大的，其中最亮眼的功能莫过于扩展程序(浏览器插件)，国内各大浏览器品牌也都纷纷“效仿”，今天就为大家带来一次chrome…"}, {"id": "6926003536438558727", "title": "CSS、JS 对页面加载与交互的影响", "desc": "代码的思路是在 head 标签中，放入 link 标签，并且让 CSS 文件的请求接口，在 10s 后返回，观察 CSS 的加载对 HTML 的解析及页面呈现的影响。 实验现象：请求页面后，过了大约 10s，页面才呈现，我们可以得出结论，在 head 标签中，请求 CSS 文件…"}, {"id": "6844903667305316360", "title": "页面渲染：过程分析", "desc": "1. HTML → DOM树 （解析html） DOM全称为文档对象模型Document Object Model，其中一个DOM节点对应一个标签，Dom树即表示了HTML的文档结构。转化过程如下图所示： 令牌化：浏览器把字符转化成W3C HTML5 标准指定的各种确切的令牌，…"}, {"id": "6844903544919703565", "title": "HTML5中手势原理分析与数学知识的实践", "desc": "在这触控屏的时代，人性化的手势操作已经深入了我们生活的每个部分。现代应用越来越重视与用户的交互及体验，手势是最直接且最为有效的交互方式，一个好的手势交互，能降低用户的使用成本和流程，大大提高了用户的体验。"}, {"id": "6844903966631788558", "title": "基于 HTML5 WebGL 的医疗物流系统", "desc": "物联网( IoT )，简单的理解就是物体之间通过互联网进行链接。世界上的万事万物，都可以通过数据的改变进行智能化管理。IoT 的兴起在医疗行业中具有拯救生命的潜在作用。 不断的收集用户信息并且实时的进行诊断，所以未来 IoT 肯定在医疗行业的应用会呈覆盖性。下面是我最近做的一个…"}, {"id": "6844903646379900941", "title": "【译】像程序员一样思考：如何只使用 JavaScript，HTML 和 CSS 开发贪食蛇游戏", "desc": "翻译了一篇介绍如何用纯HTML、JS、CSS开发贪食蛇小游戏的教程， ps：好久没翻译了，翻得不好大家见谅"}, {"id": "6844903519040831496", "title": "CSS float相关详解", "desc": "float元素也称为浮动元素，设置了float属性的元素会根据属性值向左或向右浮动。浮动元素会从普通文档流中脱离，但浮动元素影响的不仅是自己，它会影响周围的元素对齐进行环绕。简单来说，就是让block元素无视float元素，让inline元素让流水一样围绕着float元素来实现…"}, {"id": "6917898288481959943", "title": "一文搞懂 script 标签", "desc": "前端开发应该都知道 HTML 中 &#x3C;script> 标签的作用——引入 JS 代码，不过由于脚手架和打包工具的普及，我想很少有人再亲手写 &#x3C;script> 了。本期就借机写一下这个快被遗忘了的 &#x3C;script> 教程，看看大家是否真的掌握了这个元素…"}, {"id": "6914202217947856909", "title": "HTML5相关规范解读（三）：其他web api", "desc": "本期讨论的是除了html和dom提到的以外的web api，web api就是js核心（es262）之外，由宿主提供的接口，这里的宿主指的是浏览器，其他宿主，比如node.js或者electron，会在其他专题里讨论。 其中对于偏api使用而不需要进一步理解的只会给出参考链接，…"}, {"id": "6958703326091444238", "title": "我的前端学习之路之html5", "desc": "互联网基本原理（HTTP），什么是前端和后端，HTML语法与基础，列表标签，多媒体与语义化，表单标签，表格标签"}, {"id": "6844903552578486285", "title": "再聊移动端页面的适配", "desc": "前端圈真乱，这话一点不假。但乱也乱的好处，乱则生变，有变化才有进步。今天还是老调重谈，聊聊移动端页面的适配。因为对于一枚前端而言，天天和页面打交道（H5页面），那么布局的活总是少不了，这也将面临不同终端的适配问题。不知道你是否和我一样，页面布局总是或多或少会有一些蛋疼的事情发生…"}, {"id": "6844904099326984200", "title": "HTML datalist了解一下，使用它创建自动完成输入女神小例子", "desc": "要实现这个功能，首先要创建一个标签和输入。 接下来，创建一个datalist列表元素。 在其中，为每个自动完成的选择添加一个 option 元素。使用上面的示例，我们将为每个女神创建一个选项。 最后，我们需要将 datalist 与 input 关联。为 datalist 提供…"}, {"id": "6844903700230569992", "title": "显微镜下的webpack4：路径操作", "desc": "对于打包工具来说，最简单也是最复杂的操作莫过于路径的安排了，原本都在src下的资源，想要打包到dist目录下，但是打包出来的文件路径甚不如人意。明明想要分门别类地放置文件文件，然后却像大杂烩一样js,html，css甚至图片都混在了一起。虽然打包之后运行没什么问题，但是这是要逼…"}, {"id": "6911287473863655437", "title": "常见的css html布局", "desc": "Flex 是 Flexible Box 的缩写，意为\"弹性布局\"，用来为盒状模型提供最大的灵活性。对于ie，其浏览器的兼容性，flex 只支持 ie 10+ 采用 Flex 布局的元素，称为 Flex 容器（flex container），简称\"容器\"。它的所有子元素自动成为容…"}, {"id": "6926425001474293768", "title": "学习移动端的必备知识（适配篇）", "desc": "媒体查询 @media 响应式布局中，会根据媒体查询功能来适配多端布局，必须对 viewport 进行设置，否则根据查询到的尺寸无法正确匹配视觉宽度而导致布局混乱。如不设置 viewport 参数，多说移动端媒体查询的结果将是 980px 这个节点布局的参数，而非我们通常设置的…"}, {"id": "6844903833374556167", "title": "基于 HTML5 的电力接线图 SCADA 应用", "desc": "在电力、油田燃气、供水管网等工业自动化领域 Web SCADA 的概念已经提出了多年，早些年的 Web SCADA 前端技术大部分还是基于 Flex、Silverlight 甚至 Applet 这样的重客户端方案，在 HTML5 流行前 VML 和 SVG 算是真正纯种 Web…"}, {"id": "6844903837656940551", "title": "基于 WebGL 的 HTML5 网络拓扑结构 3D 图", "desc": "现在，3D 模型已经用于各种不同的领域。在医疗行业使用它们制作器官的精确模型；电影行业将它们用于活动的人物、物体以及现实电影；视频游戏产业将它们作为计算机与视频游戏中的资源；在科学领域将它们作为化合物的精确模型；建筑业将它们用来展示提议的建筑物或者风景表现；工程界将它们用于设计…"}, {"id": "6844903862302687240", "title": "基于 HTML5 WebGL 的 3D 智慧隧道漫游巡检", "desc": "这次为大家展示的是通过 HT for Web 灵活的图型化编辑工具打造的智慧隧道监控系统。通过 HTML5 技术实现了桌面和移动端的跨平台性，同时现实了可视化运维。 这次主要跟大家分享里面的漫游巡检功能，完美进行第一人称视角体验整体结构环境，酷似游戏一样给人一种真实的感受，比平…"}, {"id": "6844903597721780238", "title": "SVG：浪啊，浪来了，大浪来了", "desc": "如果你问我当我们想在项目里加一个波浪效果的时候我在想什么？我的回路大概是这样的： 打开我的 铬 浏览器 进入 代码笔 网站 搜索 浪 多点几次下一页，我的老伙计，哦我的天，写这些波浪人都是怪物吗 emmm....这个这个！！这个像设计师要求的 打开链接，CV 二连 去和设计师去…"}, {"id": "6968667356507668511", "title": "列表标签", "desc": "问？ 前面我们知道表格一般用于数据展示的，但是网页中还是有很多跟表格类似的布局，如下图~~ 我们用什么做呢？ 答： 答案是列表， 那什么是列表？ 表格是用来显示数据的，那么列表就是用来布局的。 因为非"}, {"id": "6844903805562126344", "title": "!DOCTYPE —— HTML文档模式", "desc": "IE5.5引入了文档模式的概念，而这个概念是通过使用文档类型（DOCTYPE）切换实现的。 文档模式主要分为混杂模式和标准模式两种，而标准模式又可划分为标准模式，准标准模式，超级标准模式三种（其中标准模式和准标准模式非常接近，他们的差异几乎可以忽略不计）。具体区分如下图： 其I…"}, {"id": "6844903839024300039", "title": "基于 WebGL 的 HTML5 3D SCADA 主站系统", "desc": "这个例子的初衷是模拟服务器与客户端的通信，我把整个需求简化变成了今天的这个例子。3D 的模拟一般需要鹰眼来辅助的，这样找产品以及整个空间的概括会比较明确，在这个例子中我也加了，这篇文章算是我对这次项目的一个总结吧。 进入正题，整个例子仅仅是用了两百多行代码来实现，这就是我喜欢用…"}, {"id": "6987708555461656590", "title": "第十五章 嵌入内容", "desc": "自学HTML5权威指南时做的笔记，以便于后期使用时翻找。 本篇内容主要是该书的第十五章的内容，主要介绍的是嵌入内容，比如在超链接中嵌入图片，在浏览器中添加视频、添加另一个网页、进度条等。"}, {"id": "6844903517665116167", "title": "history API 和锚点链接在单页应用页面切换中的应用", "desc": "Ajax的流行和前端MVVM框架的快速发展给Web开发带来了极大的便利，也让Web应用体验越来越好，近些年单页应用也随之流行起来。Ajax的应用可以让网页实现无刷新更新数据，但其也会造成浏览器无法前进和后退（浏览器和手机的物理返回键）的问题。早期这个问题通常是借助iframe来…"}, {"id": "6918338067472318472", "title": "兼容性问题 | 七日打卡", "desc": "今天总结下目前为止，工作中遇到的一些兼容问题。主要从IE浏览器和移动端两方面入手，可能不是很全面，但都是工作中遇到到，比起一些长篇大论，我感觉反而更实际些。 现在很少用到低版本了，但是我的工作对兼容性要求很高，现在都2021年，还要兼容IE8，真的很无语，没办法，工作所需，那就…"}, {"id": "6992926283315281950", "title": "html布局结构初中高表现原则", "desc": "首先来看一个消息列表布局： 我们拿到这样一个布局页面时，不同的制作者对页面的结构（html）和样式（css）有不同的理解"}, {"id": "6898585563558281224", "title": "JS入门笔记", "desc": "2. 区分大小写 3. 不能有空格的 小驼峰命名法 第一个单词的首字母小写，后面的单词首字母大写，其它字母全部小写。 推荐使用 3. 匿名函数 (function(){}) 值类型：数值、布尔值、null、undefined、字符串。 变量的交换等于在一个新的作用域创建一个新的…"}, {"id": "6943497580361809933", "title": "HTML5获取地理位置定位信息", "desc": "定位功能(Geolocation)是HTML5的新特性，因此只有在支持HTML5的现代浏览器上运行，特别是手持设备如iphone，地理定位更加精确。首先我们要检测用户设备浏览器是否支持地理定位，如果支持则获取地理信息。注意这个特性可能侵犯用户的隐私，除非用户同意，否则用户位置信…"}, {"id": "6904091190371549192", "title": "网页设计：HTML标签语义化", "desc": "为了使我们的网站更好的被搜索引擎抓取收录，更自然的获得更高的流量，网站标签的语义化就显得尤为重要。所谓标签语义化，就是指标签的含义。 用于定义页面的介绍展示区域，通常包括网站logo、主导航、全站链接以及搜索框。也适合对页面内部一组介绍性或导航性内容进行标记。 定义页面的主要内…"}, {"id": "6844904196551114765", "title": "《30分钟重学HTML》之基础-HTML是什么？（一）", "desc": "⚡️ HTML (HyperText Markup Language) 不是一门编程语言，而是一种用来告知浏览器如何组织页面的标记语言。 HTML 可复杂、可简单，一切取决于开发者。它由一系列的元素（elements）组成，这些元素可以用来包围不同部分的内容，使其以某种方式呈现…"}, {"id": "6844903832703483911", "title": " 基于 HTML5 结合工业互联网的智能飞机控制", "desc": "从互联网+的概念一出来，就瞬间吸引了各行各业的能人志士，想要在这个领域分上一杯羹。现在传统工业生产行业运用互联网+的概念偏多，但是在大众创业万众创新的背景下，“互联网＋”涌出了层出不穷的“玩法”，智慧城市、隧道交通、智慧园区、工业生产，甚至是这次要说的智能飞机！异地协同制造的范…"}, {"id": "6844903505291902989", "title": "Functional CSS: 从试着改进可重用CSS做起", "desc": "回想起每次更新泊学网站，最让我头疼的，就是改写CSS。在不同的阶段，对CSS不断深入的理解，对网站内容的调整，对UI的重用需求，都影响着CSS的编写方式，因此，稍不留神，你的代码理解就会充斥着各种风格和各种作用的CSS，让你什么时候想起这些，都觉得心情不那么愉快。 因此，就和大…"}, {"id": "6844903590457245704", "title": "Web 表单的未来", "desc": "如何通过会话式的界面让数据收集更加人性化。 Web 表单是从纸质媒介进化而来的。即设计一组标签和线框来限制输入，同时让数据处理变得跟容易。 毕竟，表单的目的是收集数据，以便执行操作。为了执行该操作，我们需要把收集的数据统一汇总。我们在界面上设计了一些约束以便达到统一汇总的目的。…"}, {"id": "6844903866396327944", "title": "web worker 实现浏览器多线程", "desc": "JS 天然属于单线程环境，也就是说不能同时运行多个脚本。为何这样？因为JS的设计目标是实现网页和用户交互，试想当用户点击页面，操作 DOM 时，有两个线程同时操作了DOM，那么以谁的结果为准呢？最坏的情况一个线程需要给一个元素添加内容，另一个线程却把元素删除了，这将导致用户无法…"}, {"id": "6896468087009837063", "title": "H5原生拖拽相关事件简介以及基础实现", "desc": "公司项目需求，要实现任务卡片在不同任务列表之间进行拖拽实现任务类别的更改。于是找了一下相关文章，稍微学习了一下。实现效果如下图。 主要用到的是H5自带的拖拽效果。其实项目前端部分是使用React编写的，也是在使用H5实现了之后才了解到Dan Abramov大佬有个React-D…"}, {"id": "6844903811497066504", "title": "什么是可替换元素？", "desc": "前端面试中 HTML 的题目本来就最少，而且并不难，翻来覆去也就那几样。我们之前已经谈到过最经典的 HTML 语义化 ，今天就借此机会来谈谈可替换元素。 什么是可替换元素？顾名思义，就是会被替换的元素。😅 （尬笑…… 是浏览器去下载 src 属性给到的图片，并用该图片资源替换…"}, {"id": "6844904085888450567", "title": "JS-DOM事件流", "desc": "其实，DOM标准规定事件流包括三个阶段：事件捕获阶段、处于目标阶段和事件冒泡阶段。 事件捕获阶段：实际目标在捕获阶段不会接收事件。也就是在捕获阶段，事件从document到再到就停止了。 处于目标阶段：事件在上发生并处理。但是事件处理会被看成是冒泡阶段的一部分。 冒泡阶段：事件…"}, {"id": "6844903504226549767", "title": "iKcamp出品｜微信小程序｜小试牛刀(视频)+发布流程｜基于最新版1.0开发者工具初中级教程分享", "desc": "Step 1. 清理结构 修改后，看下控制台有报错信息，因为我们把页面全都干掉了。 从报错信息来看，很明显，小程序默认会从 pages 字段中读取第一个地址，作为首页加载 -- 知识点。 Step 2. 增加 flex 页面 Page() 函数接受一个 object 参数，其指…"}, {"id": "6899307845422956557", "title": "HTML总结04(新特性)", "desc": "HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能 的增加。 1. 新增元素 2. 移除元素 3. HTML5新标签的浏览器兼容性问题 IE8/IE7/IE6 支持通过 document.createElement 方法产生的标签，可以利用这一…"}, {"id": "6844903847337574408", "title": "HTML 里 inputmode 是如何使用的 | 会调用出不同的键盘", "desc": "The inputmode global attribute provides a hint to browsers for devices with onscreen keyboards to help them decide which keyboard to displa…"}, {"id": "6844903624657616910", "title": "基于 HTML5 的工业互联网 3D 可视化应用", "desc": "工业企业中生产线处于高速运转，由工业设备所产生、采集和处理的数据量远大于企业中计算机和人工产生的数据，生产线的高速运转则对数据的实时性要求也更高。破解这些大数据就是企业在新一轮制造革命中赢得竞争力的钥匙。因此，工业生产可视化系统是工业制造业的最佳选择。 工业生产可视化是将虚拟现…"}, {"id": "6844903552758841357", "title": "良好的HTML编码风格", "desc": "HTML作为描述网页结构的超文本标记语言，在百度一直有着广泛的应用。本文档的目标是使HTML代码风格保持一致，容易被理解和被维护。 使用 2 个空格做为一个缩进层级，不允许使用 4 个空格 或 tab 字符。 每行不得超过 120 个字符。 过长的代码不容易阅读与维护。但是考虑…"}, {"id": "6844903575626186760", "title": "反射式 XSS 的解释及其防御", "desc": "首先，我们来了解下什么是\"跨站脚本攻击(XSS)\"：它是通过向网站注入恶意代码实现的，当某个用户访问受感染的页面时，脚本就会在其浏览器中执行，这时，攻击者就可以窃取用户的私有信息，例如，cookie、账户信息；也可以以受害者的身份执行一些恶意操作。 反射式跨站脚本攻击（也叫做非…"}, {"id": "6844903550644912142", "title": "自定义字体", "desc": "一般来说，网页上的字体使用的都是我们电脑里面的字体，比如我们常说的微软雅黑、宋体就是 windows 系统自带的字体。所以你可以看到网页的字体一般都比较中规中矩，不像平面设计那样各种新花样。 但是我们在浏览一些网站时，还是可以发现一些非常酷炫和高…"}, {"id": "6972880368118530061", "title": "html 图片居中方式", "desc": "图片的居中方式有很多种吧，算是html基础，但是某一次我就给忘记怎么设置图片居中了。先写几个，后续再来补充其他方法 以上代码的效果图 解决方法一： 给img标签设置position定位，positio"}, {"id": "6844903498056728590", "title": "[译]HTML&CSS Lesson3: 了解CSS", "desc": "CSS是一门复杂的语言，拥有相当的大能力。 它我们允许为页面添加布局和设计，允许多个元素甚至多个页面共享样式。在我们有能力解锁所有功能之前，我们必须先充分理解它的基础点。 首先，我们要明确的了解样式是怎么被渲染的。 具体的来说，就是我们要知道不同类型的选择器是怎么样工作的，这些…"}, {"id": "6844903593124823054", "title": "VsCode中使用Emmet神器快速编写HTML代码", "desc": "Emmet (前身为 Zen Coding) 是一个能大幅度提高前端开发效率的一个工具. 在前端开发的过程中，一大部分的工作是写 HTML、CSS 代码。特别是手动编写 HTML 代码的时候，效率会特别低下，因为需要敲打很多尖括号，而且很多标签都需要闭合标签等。于是，就有了 E…"}, {"id": "6844903551160827917", "title": "HTML 5.2 有哪些新内容？", "desc": "就在不到一个月前，HTML 5.2 正式成为了 W3C 的推荐标准（REC）。当一个规范到达 REC 阶段，就意味着它已经正式得到了 W3C 成员和理事长的认可。并且 W3C 将正式推荐浏览器厂商部署、web 开发者实现此规范。 在 REC 阶段有个原则叫做“任何新事物都至少要…"}, {"id": "6844903518248108039", "title": "7 款前端开发者重制的经典游戏 总有一款能让你回味童年时光", "desc": "之前，在微博上发起#每日一Pen#话题时，在 CodePen 上看到的经典游戏重制。蛮有意思的，与大家分享下。"}, {"id": "6844903714109521933", "title": "关于这一次h5踩到的坑", "desc": "场景1：返回弹窗需求：页面返回的时候弹窗确认是否返回，确认返回，取消留在当前页面场景2：1px的borderios其实可以用0.5px，but安卓不支持，so只能忍痛割爱场景3：vue项目加入百度统计"}, {"id": "6844904066443640845", "title": "与Viewport有关的理解", "desc": "国内有关viewport的文章和信息，我想大多来源于PPK的文章（篇一，篇二）。从二手资料获取到的信息总是不够深， 也有限，我就有很多地方没法理解，看完原文才理解地透彻，推荐你去看看。有时间我想把这两篇文章翻译出来，既锻炼翻译能力，又学习技术，一举两得；若是对大家还有点帮助，那…"}, {"id": "6844903703913168909", "title": "HTML5游戏开发(五)：飞机大战之让所有元素动起来", "desc": "《HTML5游戏开发》系列文章的目的有：一、以最小的成本去入门egret小项目开发，官方的教程一直都是面向中重型；二、egret可以非常轻量；三、egret相比PIXI.js和spritejs文档更成熟、友好；四、学习从0打造高效的开发工作流。 本文我们将会让游戏的所有元素动起…"}, {"id": "6899370103826022413", "title": "必须知道的几款优秀可视化表单、流程开源设计器", "desc": "随着互联网的快速发展，越来越多的云建站平台快速崛起，不可避免的就是自定义可视化设计，如何不通过开发就能够简单快速的搭出一个可用的页面就成了大家头痛的问题，但是从零开始开发设计一套可视化设计功能并不是一个简单的事情，还好有很多开源的可视化设计项目/组件可以供我们使用，今天我们就来…"}, {"id": "6844903991650811911", "title": "如何实现选中复制的功能", "desc": "在一些博客系统，如掘金的博客中，可以复制代码，它是如何实现的它一般可以使用第三方库clipboard.js来实现，源码很简单，可以读一读主要有两个要点选中复制选中选中主要利用了SelectionAPI"}, {"id": "6844904121636487176", "title": "爱奇艺是如何实现第三方登录无刷新更新页面的", "desc": "最近在研究 iqiyi 的登录流程，发现他们的第三方登录体验挺好的。 在目标页面（以下目标页面均指用户当前浏览的页面）点击登录，弹出登录弹框，选择第三方登录，比如 qq，微信，点击则新开页面。 至于这个时机，就是登录成功之后。 PS：在测试过程中发现有 iqiyi 有两个bug…"}, {"id": "6844903696849960973", "title": "初尝微信小程序开发与实践经验分享", "desc": "一个java程序员最不务正业的一次分享了。 小程序的火热相信不用我多说了，年初的时候老婆去浦东某达面试，甚至都被问有没有小程序测试经验。俨然小程序成为了互联网公司自PC，WAP，安卓，IOS之后又一不可或缺的入口。正好这段时间公司也在做一款小程序，于是顺便也学习了一把。当然因为…"}, {"id": "6926055209496117256", "title": "轻松明白 CSS 和 JS 对页面渲染的阻塞", "desc": "前面有分析过页面的渲染逻辑（老生常谈之从输入URL到页面呈现的过程（全）），从上至下解析 HTML，构建 DOM 树和 Style Rules，其中构建 DOM 和解析 Style 是并行的，之后 DOM 树和 Style Rules 结合成 Render Tree。 JS 会…"}, {"id": "6844903912135213064", "title": "React实现底部footer针对页面进行自适应", "desc": "前言 大概构思 上代码 1.获取底部footer相对于顶部的高度 js 2.用页面整体的高度和底部footer相对于顶部的高度进行判断, js css 3.还需要判断一下底部footer相邻的元素对于"}, {"id": "6844903561894035463", "title": "持久化存储与HTTP缓存", "desc": "在此之前已经学习了Cookie的相关知识，但是Cookie有个缺点是可以人为修改，有一定的安全隐患。 一般来说Session是基于Cookie实现的，它利用一个sessionId把用户的敏感数据隐藏起来，除非暴力穷举才有可能获得敏感数据。 既然Session还是基于Cookie…"}, {"id": "6844903545989234696", "title": "HTML 文档之 Head 最佳实践", "desc": "每一个标准的 HTML 文档都包含一个 head 头部分，除了声明文档类型，编码方式和文档标题，引入外部资源这些基本功能外， 头还能做很多非常有用的事情，这篇文章整理了作者认可的一些最佳实践，写在这里与各位分享。"}, {"id": "6844903872150896648", "title": "浅谈 <details> 和 <summary>", "desc": "HTML5 引入的 <details> 元素好玩的一点是，用鼠标点点点，它包含的内容会在显示与隐藏之间切换。 <details> 元素有一个 open 布尔值属性，默认它包含的内容（除了 summary）是隐藏的，加了这个属性之后，内容就显示出来了。 <summary> 总是和…"}, {"id": "6895186469284282381", "title": "必看的 html 常用标签（二）", "desc": "作为了一个前端 帅小伙/靓姑娘，开发的时候总是会和 HTML 标签打交道。今天介绍的还是干货，纯干的那种，干柴烈火，呃呃呃那就是——HTML的常用标签，赶快来认识它们吧。 助记栏可以帮助大家记忆，读音可以参照欧陆词典。 1. 首先我们先写一个a标签 2. 效果 3. 用法说完了…"}, {"id": "6911985741174145032", "title": "前端学习-移动端常见布局方式", "desc": "流式布局，就是百分比布局，也称非固定像素布局。 通过将盒子的宽度设置成百分比，从而根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充。 流式布局方式是移动web开发使用的比较常见的布局方式。 制作过程中，需要定义页面的最大和最小支持宽度。 flex是flexible …"}, {"id": "6876259245835157511", "title": "移动端HTML5 input常见问题", "desc": "1. 去掉input 在iOS中的默认圆角和内阴影 2. 焦点在 input 时，placeholder 没有隐藏 3. input 输入框调出数字键盘 4. 搜索时，键盘的回车按钮文字设定为“搜索” 解决： input 使用 type=\"search\"，放在 form 表单内…"}, {"id": "6844903604688535566", "title": "electron-vue邮件客户端总结", "desc": "electron将chromium和nodejs合并到同一运行时环境中，可以用html、css、javascript来构建跨平台的桌面应用。说白了就是我们写网页的同时还可以调用nodejs的api(如调用fs模块存储数据到电脑)，然后electron帮我们打包成一个跨平台的桌面…"}, {"id": "6844903831193534471", "title": "摩拜前端周刊第6期", "desc": "Ladiesand乡亲们，摩拜前端周刊起航啦～摩拜前端团队会收集每周前端优秀文章，每周五发布至掘金平台，欢迎关注我们～Top榜深入探究Function&Object鸡蛋问题地址：https://mp."}, {"id": "6844903510543187982", "title": "文字编码的那些事", "desc": "我们经常听到纯文本格式和二进制编码，什么是纯文本，什么是二进制呢？以一个例子做说明。新建一个文件叫hello.txt，内容为： 这里看到了两种截然不同的输出结果，但实际上不管是纯文本文件还是二进制文件，硬盘或者内存里存储的都是0101，就看你如何解读它，或者说怎么解码。（只不过…"}, {"id": "6844904150535241735", "title": "面试官问：如何利用 random 计算 π", "desc": "前言这是基友面试RingCenter时被问到的一个题目表面上考察的是概率论等基础知识，实际可能还会问到事件循环等底层知识，以及ReactFiber蒙特卡洛法求π说蒙特卡洛可能不太理解，换个说法--随机"}, {"id": "6844903609864290312", "title": "Angular Directive 详解", "desc": "学习目的：为了更好的了解 ng directive 的使用方法。 这里直接return了一个object，对象中包括比较多的属性，这些属性都是对自定义directive的定义。详细的含义，下面会继续说明。 如上所示，return的对象中会有很多的属性，这行属性都是用来定义dir…"}, {"id": "6844903816295350286", "title": "（02）② HTML 元素、属性详解 | HTML", "desc": "前言： 上一篇《（01）① HTML 基础 | HTML》中，我们对 HTML 有了初步的认识，在完全掌握的基础上，这一篇我们将会接触大量常用的“标签元素”及其“属性”等。 知识点会很多，但是，请细细地看下去，收获一定很大。 随便打开一个页面，鼠标指到任意位置都知道该用什么标签…"}, {"id": "6992426479883649032", "title": "HTML与CSS、安全相关知识点", "desc": "HTML与CSS 介绍盒子模型 所有HTML元素可以看作盒子，在CSS中，\"box model\"这一术语是用来设计和布局时使用。 CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边"}, {"id": "6844903607834247181", "title": "人生苦短，我用 ES6 模板", "desc": "ES6（ES2015）为 JavaScript 引入了许多新特性，其中与字符串处理相关的一个新特性——模板字面量，提供了多行字符串、字符串模板的功能，相信很多人已经在使用了。模板字面量的基本使用很简单，但大多数开发者还是仅仅把它当成字符串拼接的语法糖来使用的，实际上它的能力比这…"}, {"id": "6844903657775857672", "title": "[贝聊科技]PWA初探", "desc": "HTML 5 曾被认为是移动应用的明天，却被原生App在性能和功能上轻易战胜，Web逐渐成为App的附属。然而，马云“爸爸”告诉我们：“梦想还是要有的，万一实现了呢？”如今，我们离梦想又近了一步。 PWA，全称「Progressive Web App」，是Google提出的为W…"}, {"id": "6844903504817946637", "title": "表格布局display: table的妙用", "desc": "说到表格布局，相信大家首先想到的是<table>标签，其实，在CSS2中还提供了一种表格布局：display: table，今天刚好用到，就有必要来深究一下了！ 虽然CSS3已经出现了display： flex（Flex布局）和display: grid（CSS：Grid布局）…"}, {"id": "6989437757877649439", "title": "编程入门：来了解HTML和CSS", "desc": "HTML和CSS之间的关系： 入门编程的伙伴，我们先从HTML和CSS这两个简单的语言开始入门，简单的语言能够提升我们对编程的兴趣，学习起来并不会感觉枯燥无味。 CSS是控制HTML内标签显示不同布局"}, {"id": "6844903983723593735", "title": "如何对span设置宽度", "desc": "这是一期分享HTML中span标签，如何设置宽度的问题。 span表示行内元素，相当于inline属性，只会根据元素的宽度自行展开，自己设置宽度，不起作用。 那如果我特别希望将span元素设置为宽度且不设置元素呢？下面通过几个方式去实现。 但是这样写就体现不了span这个标签的…"}, {"id": "6844903598304788494", "title": "基于canvas实现的高性能、跨平台的股票图表库--clchart", "desc": "ClChart是一个基于canvas创建的简单、高性能和跨平台的股票数据可视化开源项目。支持PC、webApp以及React Native和Weex等平台。在React Native和Weex上完全适配开源项目GCanvas，可轻松使用GCanvas来使得您开发的应用在andr…"}, {"id": "6844903666198003720", "title": "Element源码分析系列8-Cascader(级联选择器)", "desc": "Element中和该组件相关的文件有main.vue和menu.vue2个文件，前者代表输入框部分，后者代表下方的级联选择部分，以及附加的js文件popper.js以及vue.popper.js，用来处理弹出框逻辑，前面文章介绍过，这4个文件总代码量2000行左右，首先要明确，…"}, {"id": "6984427164170977287", "title": "「HTML+CSS」--自定义加载动画【036】", "desc": "前言 效果展示 Demo代码 HTML CSS 原理详解 步骤1 使用span标签，设置 宽度、高度均为96px 背景色：rgba(255, 255, 255, .2) 效果图如下 步骤2 设置spa"}, {"id": "6981282493450174478", "title": "微信引导用户右上角使用打开浏览器页面", "desc": "微信浏览器为了防止用户中病毒，常规下是不允许直接下载APP的，但我们又不能忽略用户使用微信扫二维码下载APP的事实，所以一个很好的解决方法就是引导用户使用其他浏览器打开下载页面。"}, {"id": "6995367141507596302", "title": "CSS解决网页HTML元素DIV等无法居中的方法", "desc": "CSS3解决网页web前端HTML元素DIV、a标签、h标签等无法居中的方法：1.水平居中 2.水平垂直居中 （1）绝对定位水平垂直居中 （3）flex弹性布局垂直水平居中"}, {"id": "6844903520437534727", "title": "简单易懂的 H5 页 REM 布局适配方法", "desc": "简单易懂的 H5 活动页之移动端 REM 布局适配实操方法介绍"}, {"id": "6844903792295542797", "title": "【译】Css Grid VS Flexbox: 实践比较", "desc": "在不久前，所有 HTML 页面的布局都是通过table、float和其他 CSS 属性来完成的，但其实这些属性并不适合设计复杂的网页。 紧接着，出现了flexbox ——一种专门为创建强大的响应式页面而设计的布局模式。 使得元素和内容的正确对齐变得很容易，现在是大多数网页开发者…"}, {"id": "6844903527697874952", "title": "canvas入门实战--邀请卡生成与下载", "desc": "写了很多的javascript和css3的文章，是时候写一篇canvas的了。canvas是html5提供的一个新的功能！至于作用，就是一个画布。然后画笔就是javascript。canvas的用途非常的广，特别是html5游戏以及数据可视化这两个方面。现在canvas给我的感…"}, {"id": "6844903679485542408", "title": "[贝聊科技]在微信小程序中渲染HTML内容", "desc": "大部分Web应用的富文本内容都是以HTML字符串的形式存储的，通过HTML文档去展示HTML内容自然没有问题。但是，在微信小程序（下文简称为「小程序」）中，应当如何渲染这部分内容呢？ 小程序刚上线那会儿，是无法直接渲染HTML内容的，于是就诞生了一个叫做「wxParse」的库。…"}, {"id": "6992004062405197855", "title": "解决浏览器记住密码输入框的问题", "desc": "chrome里面自动填充表单后，jquery的xxx.val()或者js的xxx.value获取到的值都是空字符串“”。试了autocomplete=“off” 但是并没有什么卵用。 百度之后又试了下"}, {"id": "6904828682242621447", "title": "不是吧，都2020年了，注释标签还要写吗", "desc": "用于在 HTML 插入注释。 注释：在开始标签中有一个惊叹号，但是结束标签中没有。 浏览器不会显示注释，但是能够帮助记录您的 HTML 文档。 条件注释定义只有 Internet Explorer 执行的 HTML 标签。 各种 HTML 软件程序也能够生成 HTML 注释。 …"}, {"id": "6844904198270615566", "title": "Web前端入门篇之旅(一)  web初识", "desc": "css是层叠样式表的意思，html的布局、样式修饰和一些简单的动画都是由css完成的。 1、HTML 标签原本被设计为用于定义文档内容。通过使用 <h1>、<p>、<table> 这样的标签表达标题、段落、表格之类的信息。同时文档布局由浏览器来完成，而不使用任何的格式化标签。 …"}, {"id": "6899685266303713288", "title": "权重计算，层叠，继承", "desc": "css权重：样式的优先级，有两条或多条样式作用于一个元素，就是同样的样式比较，具体采取谁，那个元素优先就由权重决定，比如多条样式比较，权重高的那条样式对元素才起作用，权重相同的，后写的样式会覆盖前面写的样式，我们可以叫他“后来居上”。 例如：a标签，有默认的样式，自己又写的样式…"}, {"id": "6844903874818473992", "title": "使用Referer Meta标签控制referer", "desc": "在某些情况下，出于一些原因，网站想要控制页面发送给 server 的 referer 信息的情况下，可以使用这一 referer metadata 参数。 社交网站一般都会有用户个人页面，这些页面中用户都有可能添加一些外网的链接，而社交网站有可能不希望在用户点击了这些链接的时候…"}, {"id": "6907484968616722440", "title": "事件代理功能点分享", "desc": "看过前面几篇文章的读者相信也应该有所了解了，我们借助于团队内部开发的编辑器实现了很多成功的项目案例，已经多次看到我们点击一个文本、一个按钮等等...去弹出一个表格之类的交互，有些同学难免有些好奇我们是如何实现在 canvas 图形对象上实现事件派发和监听的，接下来听我娓娓道来。…"}, {"id": "6898285140439465998", "title": "HTML入门", "desc": "HTML的首个公开描述出现于一个名为HTML Tags 页面存档备份，存于互联网档案馆的文件中，由蒂姆·伯纳斯-李于1991年底提及。它描述18个元素，包括HTML初始的、相对简单的设计。它的最大特点就是支持超链接，点击链接就可以跳转到其他网页，从而构成了整个互联网。 2004…"}, {"id": "6844903498052534285", "title": "[译]HTML&CSS Lesson1: 构建第一张页面", "desc": "可以的话，请想象一下互联网没有发明之前的日子。网站还不存在，纸质的书本是我们主要的信息来源，而在书本中查询我们想要的资料会耗费相当多的精力和时间。 而如今，你打开个浏览器用搜索引擎搜索，任何你能想到的信息都会呈现在你的指间。并且有可能某人在某地建立了一个跟你心中实际要搜索内容一…"}, {"id": "6907422977604714510", "title": "[译] Devtools 架构演进：向 JavaScript modules 迁移", "desc": "你或许知道，Chrome DevTools 作为一个 Web 应用是用 HTML，CSS 和 JavaScript 写成的。这些年来，DevTools 的特性越来越丰富，智能，其功能覆盖横跨整个 web 平台。随着 DevTools 这几年来的发展，它的架构和最初它作为 Web…"}, {"id": "6844903967126716424", "title": "n个容器元素实现无限滚动", "desc": "如何正确渲染多达10000个元素的列表。 无限下拉加载技术使用户在大量成块的内容面前一直滚动查看。这种方法是在你向下滚动的时候不断加载新内容。 当你使用滚动作为发现数据的主要方法时，它可能使你的用户在网页上停留更长时间并提升用户参与度。随着社交媒体的流行，大量的数据被用户消费。…"}, {"id": "6844903840563609607", "title": "深入理解HTTPS工作原理", "desc": "近几年，互联网发生着翻天覆地的变化，尤其是我们一直习以为常的HTTP协议，在逐渐的被HTTPS协议所取代，在浏览器、搜索引擎、CA机构、大型互联网企业的共同促进下，互联网迎来了“HTTPS加密时代”，HTTPS将在未来的几年内全面取代HTTP成为传输协议的主流。 HTTPS是在…"}, {"id": "6904923076345987079", "title": "HTML总结07（事件）", "desc": "1. 网络状态改变事件 navigator.onLine是一个只读属性。 2. insertAdjacentElement(position,element) insertAdjacentText(position,text) insertAdjacentHTML(positi…"}, {"id": "6844903939603693576", "title": "HTML常用标签", "desc": "alt定义描述图像的替换文本。如果图像的URL是错误的、该图像不在支持的格式列表中、或者如果图像还没有被下载，用户将看到这个显示。 width hight定义图像的高度，width/height只指定一个值，则另一个会根据原始图像进行赋值。 src图像的 URL，这个属性对im…"}, {"id": "6844903987909509134", "title": "被小白忽略的W3C和HTML5新特性", "desc": "W3C 于 2008年 1月 22日发布 HTML5工作草案。 通过制定如何处理所有 HTML 元素以及如何从错误中恢复的精确规则，HTML5改进了互操作性，并减少开发成本。"}, {"id": "6844903570458804232", "title": "使用HTML5和CSS3制作一个模态框", "desc": "模态框，前端开发必不可少的组件之一，广泛的用于：提示信息、操作反馈、加载动画、登录/注册表单等，它通常由 Javascript 来动态创建，而使用 JavaScript 并不能很好地适应渐进式增强或优雅降级，使用 HTML5 和 CSS3 也可以轻松创建一个模态框。"}, {"id": "6844903831617142797", "title": "a标签的使用，以及一些全局属性和链接类型。", "desc": "a标签要写上内容不然显示不出来。 是能跳转到其他文件的。 对于zip这类文件执行的是下载。对于txt,pdf,执行的是预览。 能跳转到绝对页面地址。例：< a herf=\"http:baidu.com\">< /a> 可以是Email地址。例：< a herf=\"email>请给…"}, {"id": "6844904083103416327", "title": "关于display:none ,visibility:hidden的关系和区别", "desc": "visibility：hidden 的元素会占据相应的空间位置，而display：none 不会。 在开始时，只有div3显示出来了，但是上面还有一个div2的空间，虽然div2消失。 上面三个div其实都是存在于dom树结构中的，并没有消失。可以通过控制元素样式来再次让其显示…"}, {"id": "6844903550804295688", "title": "网页在Safari快速滚动和回弹的原理： -webkit-overflow-scrolling : touch;的实现", "desc": "现在很多for Mobile的HTML5网页内都有快速滚动和回弹的效果，看上去和原生app的效率都有得一拼。 要实现这个效果很简单，只需要加一行css代码即可： 可用以下网页测试： 可以用手指滑动中间的蓝色区域，会发现回弹效果以及滚动得很快： （点击图片查看大图） 如果把-we…"}, {"id": "6844903616327712775", "title": "哇牛叉学院之基于 VoiceOver 的移动端无障碍阅读访问", "desc": "本文作者：张鑫旭。基于 VoiceOver 的移动端无障碍阅读访问"}, {"id": "6944984283828191262", "title": "HTML、CSS、JavaScript基础知识总结", "desc": "最近在一些博客上看到说：老前端在基础知识上也翻车了。 DTD全名Document Type Definition,意思为“文档类型定义”。 有两个作用，第一个可以帮助编写合法的代码，第二个让浏览器正确显示代码。 DTD应该放在每一个文档的第一行，这样才能告诉浏览器用的语言。 W…"}, {"id": "6844904190423089165", "title": "HTML的简介和历史发展过程", "desc": "这次写一篇对于HTML以及CSS的简介，平常我们大家都知道的编程语言有很多种，比如Java、C++、Python等等，每种编程语言都有其独具的特色，不论是语法格式还是表达形式，都能让每个程序员沉淀在知识的海洋里难以自拔。即每种编程语言都有无限的延展性。但如果我们考虑问题的时候能…"}, {"id": "6844903538217222151", "title": "H5自定义属性的一些方式", "desc": "可以看出来，dataset后跟的属性是驼峰命名原则，如果多个单词第二个单词首字母需要大写，检查元素可以看到神奇的变化。"}, {"id": "6844903609025445902", "title": "用纯前端的方式来实现图片转字符画", "desc": "最近花了几天时间，做了一个图片转字符画的工具，一开始想做成用服务器来生成图像的形式，但是后来发现可以不依赖服务器生成图片，顺便还能把项目托管到 Github Pages 上，因此就把项目做成了纯前端的形式。 仓库地址 演示地址 欢迎star，谢谢！"}, {"id": "6844903718370934791", "title": "聊聊浏览器的那些事儿", "desc": "目前我们使用的主流浏览器包括：chrome, firefox, ie, safari, opera, uc等等。其中chrome浏览器所占的全球市场份额最高，其次是IE。下面截图数据来源于统计网站 https://www.netmarketshare.com/ 浏览器的主要目的…"}, {"id": "6844903501550583815", "title": "React 开发实战（一）- Repeat 组件", "desc": "最近在写一个面向 React 初学者的系列教程玩转 React，内容对有 React 开发经验的同学来说可能太过于基础和啰嗦，不太感兴趣。所以我打算同时开始另外一个系列文章《React 开发实战》。该系列主要面向有 React 开发经验的同学，更侧重 React 实战，每一篇文…"}, {"id": "6844903826210701326", "title": "基于 HTML5 的 WebGL 自定义 3D 摄像头监控模型", "desc": "随着视频监控联网系统的不断普及和发展, 网络摄像机更多的应用于监控系统中，尤其是高清时代的来临，更加快了网络摄像机的发展和应用。 在监控摄像机数量的不断庞大的同时，在监控系统中面临着严峻的现状问题：海量视频分散、孤立、视角不完整、位置不明确等问题，始终围绕着使用者。因此，如何更…"}, {"id": "6844903546031177742", "title": "HTML5.2新特性", "desc": ""}, {"id": "6844903536157786126", "title": "2017前端技术发展回顾", "desc": "前端领域在 2017 年再次以狂热的节奏向前发展。以下列出过去的一年中最值得关注的一系列事情…"}, {"id": "6844903849820438542", "title": "html5 head 标签", "desc": "以前我们常用的是 <html lang=\"zh-CN\"> 或简写的 <html lang=\"zh\">，但实际上 W3 language tags 推荐使用 zh-Hans 简体中文、zh-Hant 繁体中文，可以提高一致性和准确。 通常我们会使用短的。实际上，在 HTML5 中…"}, {"id": "6844903735567581192", "title": "H5前端的关于像素解释", "desc": "阿树：(#‵′)，I know Google。。。 事实上，他们都是对的，只是谈的不是同一个「像素」。 设备像素设是物理概念，指的是设备中使用的物理像素。 比如iPhone 5的分辨率640 x 1136px。 CSS像素是Web编程的概念，指的是CSS样式代码中使用的逻辑像素…"}, {"id": "6844904039109361677", "title": "基于HT for Web矢量实现HTML5文件上传进度条", "desc": "从效果图可以看到，向服务器上传了一个mp4文件，并在最下方显示当前上传进度。 1. 需要一个背景，background 2. 需要一个当前进度值，value 3. 需要一个前景，foreground，根据当前进度值，绘制前景，盖过背景 我们定义了一个名字为progress的矢量…"}, {"id": "6844903504012640264", "title": "[译]HTML&CSS Lesson5: 定位", "desc": "CSS最大的用处之一就是可以将内容和元素定位到任何我们想要的位置，使我们的设计具有结构，使内容更加易懂。 CSS有好几种不同的定位属性，每种都有自己的使用场景。在这节课中我们会通过不同的案例——可复用的布局和针对单元素的布局——来介绍每种方法。 定位的其中一种方法就是使用flo…"}, {"id": "6899681337918095374", "title": "css权重（优先级）", "desc": "css权重：css权重：是指样式的优先级，有两条或多条样式作用于一个元素，多条样式比较，权重高的那条样式对元素起作用，权重相同的，后写的样式会覆盖前面写的样式权重需要计算权重计算(层叠)：声明冲突：同"}, {"id": "6844903877410553869", "title": "Web技巧(12)", "desc": "这一期中我们将围绕着Web中的font来展开。在现代Web中除了能使用font-family属性给Web应用指定字体之外，还有其他一些用于字体的特性，比如@font-face可以加载非系统的字体，字体变体属性font-variation-*让Web上排版和印刷上排版之间的差距在…"}, {"id": "6911594604680871944", "title": "HTML入门笔记1", "desc": "1、HTML简介HTML的英文全称是HyperTextMarkupLanguage，即超文本标记语言，是一种标记语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的Internet"}, {"id": "6844903801946800142", "title": "2019《去哪儿》春季校招第一站（含笔试题）", "desc": "PS：点进来的小伙伴，我想先声明，标题中的去哪儿指的是517Na这家公司。 离职已经过去了4天，这几天算是过上了悠闲而轻松的日子。瞌睡也睡了（忘记了早餐存在的价值），篮球也打了（下午一个人在小区里打篮球,唉以前的伙伴已经有更重要的事情要去忙碌了），游戏也玩了（炉石传说输的我卸载…"}, {"id": "6844903874105442311", "title": "前端HTML5 一些你没用过的特性", "desc": "HTML5的离线存储是基于一个新建的.appcache文件的，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示。HTML5离线缓存又名Application Cache，是从…"}, {"id": "6844903498052550670", "title": "[译]HTML&CSS Lesson2: 了解HTML", "desc": "我们初步了解了HTML和CSS，现在让我们深入挖掘HTML并了解哪些元素构成了这种语言。 建设网站前，我们需要了解什么元素适合排版什么内容。这对于理解元素如何展示在页面中以及元素的语义化都有非常重要的意义。 在工作中使用适当的元素排版需要长时间的实践，但接下来的学习中我们将会合…"}, {"id": "6844903841100464136", "title": "掌握移动web开发基础系列--viewport", "desc": "<meta>标签可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词等，也可以设置文档中的viewport。 <meta>标签位于文档的头部，不包含任何内容。<meta>标签的属性定义了与文档相关联的名称/值对。 我们说移动设备的…"}, {"id": "6844903854157332487", "title": "你想知道的HTML位置信息都在这里了", "desc": "在一次的波纹效果的实现中，因为用到了很多的HTML的位置信息，之前记得也就一两个，这次去翻阅MDN后发现，关于HTML的位置信息竟然后很多参数。于是觉得有必要将这些位置信息参数的含义做个总结，方便以后参考。 Element在是最通用的基类，一个DOM结构中所有的对象都是继承于它…"}, {"id": "6910810952682340365", "title": "超链接的noopener、noreferrer以及nofollow属性", "desc": "之前一直没去思考过为啥要这样，最近刚好看到一篇文章，对这个的理解清晰了些。 这个属性是为了防止钓鱼，如果你有一个新开页打开的外部链接并且没有加上rel=\"noopener\"的话，那么新开的那个页面就有了上一个页面的权限，它可以通过 window.opener.location.…"}, {"id": "6910609463573479431", "title": "HTML系列（1）：入门", "desc": "HTML 的全名是“超文本标记语言”（HyperText Markup Language），上世纪 90 年代由欧洲核子研究中心的物理学家蒂姆·伯纳斯-李（Tim Berners-Lee）发明。 1. 理解“超文本标记语言” “超文本”，指的是“超链接”，点击超链接即可跳转到其…"}, {"id": "7003958565228511262", "title": "HashRouter & BrowserRouter", "desc": "已知：使用HashRouter在浏览器加载页面时#后面的字符串是不会发送到后台的，不论hash怎么变后台接收到的都是#之前的请求，服务器只需要返回同样的HTML，然后由浏览器端解析 # 后的部分，完成"}, {"id": "6984612634557415455", "title": "纯 html + css 实现彩带效果", "desc": "这个效果看起来很酷，我们来实现一下。 代码 html - 一个容器，一个彩带 css translateY(-100%) translateX(var(--offsetX)) rotate(45deg"}, {"id": "6844903513848283143", "title": "一次 H5 「保存页面为图片」 的踩坑之旅", "desc": "1. 需求 最近丁香医生的产品大佬又双叒叕搞事情，想要在 H5 中做一个医生邀请提问的功能，可以将医生的二维码名片分享出去，支持移动、PC 和微信。之前的图片是由后端生成的，并且会缓存三天，导致信息更新不及时。由前端来做就能避免这些问题。 2. 方案 html2canvas.j…"}, {"id": "6844904116183891982", "title": "【适合收藏】让你减少加班的15条高效JS技巧！", "desc": "鱼头辛苦总结的15条非常高效的JS技巧，掌握这15个JS技巧，让你减少加班次数，多抽出点时间来陪女（男）朋友。 如果你喜欢探讨技术，或者对本文有任何的意见或建议，非常欢迎加鱼头微信好友一起探讨，当然，鱼头也非常希望能跟你一起聊生活，聊爱好，谈天说地。"}, {"id": "7002604863469322277", "title": "html面试题总结", "desc": "html高频面试题详解，1.DOCTYPE 的意义是什么2.html与xhtml和html5的区别3.HTML5有哪些新特性4.语义化的意义是什么5.哪些元素可以自闭合6.Html与Dom的关系"}, {"id": "7006868379457814536", "title": "查缺补漏系列之HTML", "desc": "由于公司的动荡，又燃起了学习的心（心里的小九九：其实就是为了更好的找下一份工作），开始进行查缺补漏，让自己的心重新强大起来，废话不多说，整起来。"}, {"id": "6992812010693984287", "title": "多种米字型布局方式", "desc": "学习过程中将笔记跟大家分享，希望对大家也有所帮助，共同成长进步~如果大家喜欢，可以点赞或留言~~~~，谢谢~~~一种米字型布局代码分享，思路首先分成四个大三角形上下左右，然后在在每个大的三角形分成两个"}, {"id": "7002555007253872654", "title": "使用 HTML、CSS 的新拟态动画", "desc": "这是我参与8月更文挑战的第21天，活动详情查看：8月更文挑战 前言 效果图 我在下面分享了有关我如何进行此设计的完整教程。希望下面的教程能帮到你。 为此，首先，你必须创建一个 HTML 文件。 第 1"}, {"id": "6923331849708109838", "title": "localStorage和sessionStorage本地存储 | 打卡每天一份劝退技能", "desc": "哪吒人生信条：如果你所学的东西 处于喜欢 才会有强大的动力支撑。 不要害怕做梦，但是呢，也不要光做梦，要做一个实干家，而不是空谈家，求真力行。 使用HTML5中的Web Storage API， 可以在客户端存储更多的数据，，可以实现数据在多个页面中共享甚至是同步，对于复杂的数…"}, {"id": "6844903890987515917", "title": "移动端中跳转支付宝、微信", "desc": "下单后，用户A根据用户B提供的银行卡、微信和支付宝账号进行转账。 1. 选择支付宝，转账给支付宝账户 2. 选择银行卡，打开支付宝转账给银行卡 就只能通过直接扫二维码才有用，不能直接使用a标签，而且这也不符合我们的场景。 3. 打开微信 4. 总结"}, {"id": "6992961262560739364", "title": "深入学习 CSS 中的伪元素 ::before 和 ::after", "desc": "伪元素是一个附加至选择器末的关键词，允许你对被选择元素的特定部分修改样式。例如 `::first-line` 伪元素可用于更改段落首行文字的样式。"}, {"id": "6997743210378297351", "title": "Figure Figcaption 标签属性含义及其用法", "desc": "概述   figure 用于定义一个可附加标题的内容元素，figcaption 用于为figure元素添加标题和描述信息。   页面中的插图卡片比较常见，卡片中包含有图片的描述信息、标题或者按钮等。 "}, {"id": "7001507039729942536", "title": "HTML中的表格以及对表格样式的处理", "desc": "这是【从头学前端】系列文章的第二十六篇-《HTML中的表格以及对表格样式的处理》 本篇文章将来学习HTML中的表格以及使用CSS对表格样式的处理，本篇文章包含的内容如下图所示："}, {"id": "6951062279760642062", "title": "是时候该罢黜 JPEG，独尊新编码了", "desc": "最新一代的图像编码尤其是 AVIF 和 JPEG XL，是对旧 JPEG 和 PNG 编码的重大改进。老旧的编码已经逐渐脱离时代，愈发不如人。我们究竟是不是到了应该罢黜 JPEG 编码，独尊新编码时候"}, {"id": "6844903630714519559", "title": "两天撸一个天气应用微信小程序", "desc": "II、d0e51c8 版本之后为小程序云开发版本，若未开通云开发功能，为不影响小程序正常运行，可以将版本号回退到 git reset d0e51c8 --hard，或，将云开发相关代码注释掉。具体可查看这里。 这是一个完整的已经线上运行的天气应用小程序，点击可查看源码，可随意 …"}, {"id": "7000692870499794958", "title": "HTML的拖拽事件", "desc": "写这一片文章的主要目的是因为项目最近做可视化的过程中，使用了拖拽操作，根据自己使用及查看资料学习写了这篇文章，希望对大家学习或者复习有所帮助。 可拖拽属性draggable 在一个网页中， 存在集中特"}, {"id": "6844903877217632264", "title": "浏览器播放rtsp视频流解决方案", "desc": "最近项目中需要实时播放摄像头rtsp视频流，于是就专门做了些研究。而浏览器不能直接播放，只有通过插件或者转码来实现这个需求。 要实现这个目的，可以采用的方案非常得多，有商业的也有开源的，这里主要列举一些开源的方案。这里的方案都是我尝试过了的，有些成功，有些没成功。但是因为每个项…"}, {"id": "7003187730679070756", "title": "HTML页面基本结构和加载过程", "desc": "重识HTML，掌握页面基本结构和加载过程。HTML和网页的关系；HTML和DOM的关系；浏览器怎么处理HTML内容，以及在这个过程中怎样处理来提升网页性能，从而提升用户体验"}, {"id": "6844903684015407118", "title": "[前端开发]--分享个人习惯的命名方式", "desc": "如果说计算机科学只存在两个难题：缓存失效和命名。那么我就觉得命名的难点只有两个：词汇量和坚持贯彻执行制定的规范。 最近在知乎上看到这个：作为程序员，有没有让你感到既无语又崩溃的程序命名？。顿时感慨万千，因为命名对于程序员来说是就是一个难题，有时候因为命名，可能会引起别人的误导，…"}, {"id": "6844903727552266254", "title": "2018 前端开发分享", "desc": "【2019-08-16】Hello 小伙伴们，由于 jsliang 对文档库进行了重构，这篇文章的一些链接可能失效，而 jsliang 没有精力维护掘金这边的旧文章，对此深感抱歉。请需要获取最新文章的小伙伴，点击上面的 GitHub 地址，去文档库查看调整后的文章。 查阅网上诸…"}, {"id": "6994337636378738725", "title": "HTML5(八)——SVG 之 path 详解", "desc": "path 是 SVG 基本形状中最强大的一个，不仅可以实现 预定义的 line、rect、circle、ellipse、line等形状，还可以绘制任意路径，控制动画路径等.."}, {"id": "6992501555635159070", "title": "HTML5(六)——Canvas 高级操作", "desc": "介绍canvas的高级操作。分别有canvas绘制动画，canvas绘制图片如何保存到本地、canvas制作滤镜效果......"}, {"id": "6844903694891220999", "title": "深度介绍：💾 你听说过原生 HTML 组件吗？", "desc": "在说原生 HTML 组件之前，要先简单介绍一下四大 Web 组件标准，四大 Web 组件标准分别为：HTML Template、Shadow DOM、Custom Elements 和 HTML Imports。实际上其中一个已经被废弃了，所以变成“三大”了。 HTML Tem…"}, {"id": "6971718506295328776", "title": "基础的HTML5+CSS3 知识", "desc": "1. HTML5 meta标签 语义化标签 三种html列表 超链接、图片、内联框架、音视频 实体（转义字符） 2. CSS3 选择器 复合选择器 关系选择器 伪类选择器 a伪类 伪元素一"}, {"id": "6844903821278199822", "title": "前端如何处理十万级别的大量数据", "desc": "写博客主要是用来总结、巩固知识点，加深自己对这个知识点的理解。同时希望帮助到有需要的人。如有不正确的地方。可以在评论区指出。你们的支持。是我不断进步的源泉。 这是一道面试题，刚开始面试官为我前端如何处理大量数据。我第一时间就脱口而出用分页呀！面试官说那是从后台的角度来考虑的。从…"}, {"id": "6969118313301573669", "title": "超赞圆形动画进度条，爱了爱了(使用HTML、CSS和bootstrap框架)", "desc": "这是我参与更文挑战的第2天，活动详情查看： 更文挑战 在本文中，我将向您展示如何仅使用HTML、CSS和Boostrap框架创建圆形的动画进度条。之前，我已经设计了更多类型的动画进度条，但是这种设计是"}, {"id": "6844904167618641927", "title": "打开控制台也删不掉的元素，前端都吓尿了", "desc": "运行完我的代码了，又切回element板块，想删掉它(谁叫你那么大坨的，被我盯上了)。点一下选中这个div，然后按一下删除 \"啪！\"，应该是我没按下。再“啪！”，啊？div闪了一下？“啪！”，我靠，删不掉！？ 那好，我改style。display: none， 安排! 怎么我一…"}, {"id": "6844903569632526344", "title": "Vue 服务端渲染（SSR）", "desc": "什么是服务端渲染，简单理解是将组件或页面通过服务器生成html字符串，再发送到浏览器，最后将静态标记\"混合\"为客户端上完全交互的应用程序。 于传统的SPA（单页应用）相比，服务端渲染能更好的有利于SEO，减少页面首屏加载时间，当然对开发来讲我们就不得不多学一些知识来支持服务端渲…"}, {"id": "6844903780278861831", "title": "H5 notification浏览器桌面通知", "desc": "Notification是HTML5新增的API，用于向用户配置和显示桌面通知。上次在别的网站上看到别人的通知弹窗，好奇之余也想知道如何实现的。实际去查一下发现并不复杂，且可以说比较简单，故写篇博客分享给大家,希望能帮你们了解这个API。 该通知是脱离浏览器的，即使用户没有停留…"}, {"id": "6984642364778233886", "title": "「HTML+CSS」--自定义加载动画【037】", "desc": "前言 效果展示 Demo代码 HTML CSS 原理详解 步骤1 使用span标签，设置 宽度、高度均为96px 边框大小及形状：4px solid 边框颜色：上/下边框为白色，左/右边框为透明 效果"}, {"id": "6986568849193697294", "title": "纯 html + css + javascript 实现篮球弹跳效果", "desc": "效果图 代码 html css javascript 在线演示 https://jsbin.com/labidan/edit?html,css,js,output"}, {"id": "6990215416903647263", "title": "HTML中 js刷新页面的几种方法", "desc": "HTML中 js刷新页面的几种方法 reload()、replace()、通过js代码自动刷新等、、"}, {"id": "7001439721557606431", "title": "XMLHttpRequest 如何发送 JSON/FormData/URLSearchParams 参数", "desc": "XMLHttpRequest 如何发送 JSON/FormData/URLSearchParams 参数"}, {"id": "6844903562070196237", "title": "用 preload 预加载页面资源", "desc": "本文主要介绍preload的使用，以及与prefetch的区别。然后会聊聊浏览器的加载优先级。 preload 提供了一种声明式的命令，让浏览器提前加载指定资源(加载后并不执行)，在需要执行的时候再执行。提供的好处主要是 目前我们支持的浏览器主要为高版本 Chrome，所以可放…"}, {"id": "6844903513491767303", "title": "HTML5原生拖拽/拖放 Drag & Drop 详解", "desc": "拖放（drap && drop）在我们平时的工作中，经常遇到。它表示：抓取对象以后拖放到另一个位置。目前，它是HTML5标准的一部分。我从几个方面学习并实践这个功能。 然后，我们一步步看下这个过程中，会发生的事情。 在HTML5标准中，为了使元素可拖动，把draggable属性…"}, {"id": "6844903516826255373", "title": "cookie、localStorage和sessionStorage 三者之间的区别以及存储、获取、删除等使用方式", "desc": "前端开发的时候，在网页刷新的时候，所有数据都会被清空，这时候就要用到本地存储的技术，前端本地存储的方式有三种，分别是cookie，localstorage和sessionStorage ，这是大家都知道的。本文的主要内容就是针对这三者的存放、获取，区别、应用场景。有需要的朋友可…"}, {"id": "7000973475351363621", "title": "HTML5语法与基础标签（一）", "desc": "访问互联网，常见的方式就是通过浏览器，浏览器发起请求到服务器，服务器返回数据由浏览器进行渲染，服务器相关功能的开发就是后端，浏览器相关的开发就是前端。"}, {"id": "6997761461002960933", "title": "不要再把script标签的`async`和`defer`的属性作用弄反了！！！", "desc": "这是我参与8月更文挑战的第18天，活动详情查看：8月更文挑战 不要再把script标签的`async`和`defer`的属性作用弄反了，其中在前面的一个脚本我加了defer属性 两个文件的内容如下所示"}, {"id": "7002865319597309988", "title": "【青训营】前端入门之HTML基础", "desc": "本文为参加字节跳动青训营时创作的第一篇笔记，内容为HTML基础，在课程的基础上，补充了自己学习过程中不理解的知识点"}, {"id": "6989513618781896740", "title": "网页中的多媒体添加基础", "desc": "视频、音频 一、在网页中添加单个视频：video元素 video属性： src(源)-指定视频文件的URL autoplay(自动播放）（个人学习笔记）"}, {"id": "6956393787811692575", "title": "H5开发实战二：响应式页面开发｜小册免费学", "desc": "对于响应式页面，需要做到：在不同特性的浏览器视窗中使用不同的样式；页面元素的尺寸可以根据浏览器视窗尺寸的变化而平滑变化。"}, {"id": "6844903507225477127", "title": "vscode 前端插件推荐", "desc": "推荐一波常用的 vscode 前端插件，让你的写代码的效率提高"}, {"id": "6844904058604486669", "title": "[译] 不要再用这么多 div 了，试试语义化标签吧", "desc": "我们都喜欢使用 <div> 写网页。它已经存在几十年了。几十年来，当你出于样式或结构的考虑需要将一些东西包装到一起时，<div> 已经成为首选元素。现在的线上网站普遍能看到下面的代码结构： 用了很多 <div> 啊。不管怎么说，这样用也是有效的。我的意思是说，这是我们需要的结构…"}, {"id": "6844903552431685639", "title": "使用 CSS 追踪用户", "desc": "点击 这里 你可以查看该仓库的一个 demo。index.html 实践了的上述的方法，访问 results.php 可以查看结果 此外，分辨率监测还不是特别的准确，因为目前只能监测最常用的屏幕宽度。最后还想说的是，监测用户实际屏幕的宽度并没有想象中的那么简单，因为 CSS 监…"}, {"id": "6844903558991577096", "title": "AMA：我是小问，你有什么问题要问我吗？", "desc": "Hi，大家好，我是小问。来自广东佛山，今年 21 岁的数学系理科生，FPS 游戏伪高端玩家，健身爱好者，摄影师。 我目前在七牛云大数据团队负责大数据产品的策划和架构、算法研发，做过一些数据相关的开源项目（https://github.com/iwillwen/mindb），也独…"}, {"id": "6994252442439254024", "title": "【动画消消乐】HTML+CSS 自定义加载动画 057+058", "desc": "这是我参与8月更文挑战的第9天，活动详情查看：8月更文挑战 前言 效果展示 - 1 Demo代码 HTML CSS 原理详解 步骤1 使用span标签，设置为 宽度、高度均为48px 背景色：白色 效"}, {"id": "6992184914867126279", "title": "HTML autocomplete 属性", "desc": "HTML autocomplete 属性为 <input> 字段提供了各种各样的选项。其作用是向浏览器指示值是否应在适当时自动填充。 autocomplete 允许浏览器预测对字段的输入。当用户在字段"}, {"id": "6994083936372523016", "title": "HTML面试手册", "desc": "HTML面试手册，帮助各位读者，过五关斩六将，斩获大厂Offer！一起学习HTML，一起巩固HTML知识点。"}, {"id": "6976994565764956167", "title": "重拾初心，回味iframe", "desc": "这是我参与更文挑战的第23天，活动详情查看： 更文挑战 前言 啊这，都1202年了，iframe居然还没废掉，我前年就唱衰它了啊。 是的，这是我当时第一反应，起因是公司的项目突然要多端显示，但是之前只"}, {"id": "6844903885472022535", "title": "​搞不懂JS中赋值·浅拷贝·深拷贝的请看这里", "desc": "为什么写拷贝这篇文章？同事有一天提到了拷贝，他说赋值就是一种浅拷贝方式，另一个同事说赋值和浅拷贝并不相同。 我也有些疑惑，于是我去MDN搜一下拷贝相关内容，发现并没有关于拷贝的实质概念，没有办法只能通过实践了，同时去看一些前辈们的文章总结了这篇关于拷贝的内容,本文也属于公众号【…"}, {"id": "6981286661141315591", "title": "html5响应式table表格布局", "desc": "给大家分享html5响应式table表格布局，学完后，你的网站表格会做得非常漂亮，页面好看才能体现前端程序员的价值。"}, {"id": "6844903583331123214", "title": "前端布局基础概述", "desc": "（点击上方公众号，可快速关注） 本文来自（作者蔡剑涛）的投稿 https://mp.weixin.qq.com/s/-LcNZWFFty2lWuND6uuNNA 1. 前言 前端圈有个“梗”：在面试时，问个css的position属性能刷掉一半人，其中不乏工作四五年的同学。在公…"}, {"id": "6844903516897542158", "title": "CSS定位属性详解", "desc": "在介绍postion之前，有必要先了解下文档流。 简单说就是元素按照其在 HTML 中的位置顺序决定排布的过程。HTML的布局机制就是用文档流模型的，即块元素（block）独占一行，内联元素（inline），不独占一行。 一般使用margin是用来隔开元素与元素的间距；padd…"}, {"id": "6844904122584399886", "title": "H5常见问题及解决方法", "desc": "作为一个开发了多个 H5 项目的前端工程师，在开发过程中难免会遇到一些兼容性等爬过坑的问题。现在我将这些问题一一汇总一下，并在后面给出坑产生的原理，和现阶段常规的填坑方案。由此来做一个阶段性的总结。 之前发过两篇文章已经详细的论述了1px 问题与 移动端适配，并给出了原理和方案…"}, {"id": "6953909594502463495", "title": "HTML 页面布局规则与布局方式", "desc": "浏览器页面布局规则 盒模型计算 内联元素与块状元素的布局规则 文档流布局 元素堆叠 盒模型计算 两个重要的场景： 有个宽度和高度都为100px的盒子，要怎么在调整边框大小的时候，不需要重新计算和设置宽"}, {"id": "6844904185163415565", "title": "HTML与CSS基础总结", "desc": "一. 认识WEB 二. HTML基础 3. 字符集 三. CSS选择器 四. CSS的三大特性 五. CSS布局问题与边框阴影样式 一. 认识WEB 二. HTML基础 3. 字符集 utf-8是目前最常用的字符集编码方式，常用的字符集编码方式还有gbk和gb2312。 一个是…"}, {"id": "6934951022074789895", "title": "这些HTML标签你可能没有见过但却非常实用", "desc": "在进行前端开发的时候，我们大部分的学习点都在JavaScript上面，花费在CSS上面的时间非常少，更别说花费在HTML上的时间，简直是少的可怜，可能到目前为止如果让你不使用UI组件库写出一个表单都要写一会~~（其实我也是）~~。 总而言之，由于UI组件库的原因，我们基本上只认…"}, {"id": "6844903540226261006", "title": "将 HTML 生成图片", "desc": "1.将管理员信息使用定位将其设置在指定背景图片上。 1. 使用方法 2. 基本常用API 3. 本地上传头base64编码（回显）"}, {"id": "7004051701401387045", "title": "HTML元素垂直居中", "desc": "HTML的全称为超文本标记语言，是一种标记语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的Internet资源连接为一个逻辑整体。HTML文本是由HTML命令组成的描述性文本，"}, {"id": "7004104291229270052", "title": "HTML&&CSS记录笔记第三天 HTML基本语法规范以及常用标签和CSS初识", "desc": "前提声明：所有内容均为之前学习过程中的笔记和个人总结，（无法避免雷同，敬请谅解，如有侵权，私信删除）。如有错误之处请各位大佬不吝赐教。"}, {"id": "6846687586430222343", "title": "BOM与DOM模块个人汇总", "desc": "本基础系列文章，笔者整理一下自己的前端知识点，整理一下个人所学习过的基础，本意是提高自己，同时分享出来，希望对你也有帮助。 包含个人抒写，如有理解错误，或者遗漏的的重要知识点，希望指出。 该系列，本意是提高自己，同时分享出来，希望对你也有帮助。 前端的发展史中，我们逻辑语言，曾…"}, {"id": "6985161855853395981", "title": "有趣的 SVG、Favicon", "desc": "favicons是在浏览器选项卡中看到的小图标，当浏览浏览器的书签和标签时，它们可以帮助用户清晰的知道是哪个网站。"}, {"id": "6979858310463766541", "title": "富文本编辑器：ContentEditable困境与破局", "desc": "contentEditable实际上是大家最为喜闻乐见的富文本编辑器实现方案，部分基础功能由浏览器实现。无数年轻的前端开发就美滋滋的用了起来，结果发现是一个无底的天坑..."}, {"id": "7001313023616892935", "title": "万物皆是 div?  让span == div !，解释为什么同样的样式不同浏览器显示的内容会不同", "desc": "在语义化的HTML的定义下 ，div 和span 没有特别的意义，如果我们在没有特别适用的标签时候就用他们，万事万物皆是div，但这是一个非常不好的习惯， 或者你觉得两个的唯一区别就是div 是块级元"}, {"id": "6844903508760608776", "title": "web调试优化-chrome开发者工具不完全指南", "desc": "chrome，对于web开发者而言，都是很熟悉的一个浏览器，无论是从事的是前端，后端或者是测试！简单、快捷和功能强大使它受到了许多开发者的青睐！在浏览器排行上，chrome最多人使用，而且占了浏览器份额的半壁江山。可见其欢迎程度。作为一个前端开发者，我也是注重chrome的使用…"}, {"id": "6995118812458647583", "title": "CSS 文档中定位指南：static、relative、absolute、fixed、sticky", "desc": "CSS 中 position 属性用于指定元素的定位方法的类型（static、relative、absolute、fixed、sticky）。"}, {"id": "6908593575093764109", "title": "Async Clipboard API来了", "desc": "恐怕没人不知道。我们每天都不知道自己要在电脑或手机上 “复制”、“粘贴” 多少回。每次 “复制”、“粘贴” 的背后，都会用到“剪贴板”。 The clipboard is a data buffer used for short-term data storage and/or…"}, {"id": "6906472194721710088", "title": "你不知道的 CSS 进度条", "desc": "进度条是一个非常常见的功能，实现起来也不难，一般我们都会用 div 来实现。 作为一个这么常见的需求， whatwg 肯定是不会没有原生组件提供（虽然有我们也不一定会用），那么就让我们来康康有哪些有意思的进度条实现方式。 这种方法的核心就是以当前盒子为容器，以 ::before…"}, {"id": "6994759666202837029", "title": "关于html中meta的一些属性", "desc": "这是我参与8月更文挑战的第10天，活动详情查看：8月更文挑战 关于html中meta的一些属性 html在前端是必不可少的内容，其中有一个标签叫做meta，这个标签可以定义html文档的元数据，给网页"}, {"id": "6983927031122067486", "title": "Audio 标签属性含义及其用法", "desc": "audio 用于在文档中嵌入音频元素。   audio元素是HTML5新增的行内标签，IE8及以下浏览器不支持audio标签。   若浏览器不支持video元素或者无法播放音频，则会显示替代文本（开始"}, {"id": "7001873961680109598", "title": "html创建表格有那些小技巧，表单中真的有这么多功能吗", "desc": "html基础篇（第二篇） 上一篇 html 我们聊了初识 html 的基本常识和所用的浏览器内核以及基础的标签等等，这次我们再聊一聊 html 的表格和表单等语法。这是html基础偏的最后一讲，下次就"}, {"id": "6844903997459922958", "title": "CSS简单的继承", "desc": "也许你瞧不起以前的 css ，但是你不该再轻视眼下的 css 。近年来 css 的变量系统已逐步得到各大浏览器厂商支持，自定义选择器等强势袭来，嵌套系统/模块系统也在路上...为了更好的掌握 css 这门语言，很有必要把之前零零散散的 css 知识回炉重造下。 css 作为一门…"}, {"id": "6844903989155217421", "title": "前端网页如何打开一个PC本地应用", "desc": "设想一个场景，当我们在浏览一个网页并且需要下载某个资源时，你的电脑可能经常会跳出一个提示框，询问你是否需要打开“迅雷”。当我们点击“是”，则会唤醒该本地应用进行下载任务。 本文针对Windows系统和MacOS系统进行讨论。 在薄荷FE的日常开发中，因为需要与app频繁交互，a…"}, {"id": "6973228648782364685", "title": "基于HTML的可定制轮盘🎡——帮你告别选择困难症", "desc": "这是我参与更文挑战的第13天，活动详情查看： 更文挑战 基于HTML的旋转转盘—小于30kb的可定制轮盘🎡 演示链接：http://haiyongcsdn.gitee.io/spin-the-whee"}, {"id": "6991396113576099870", "title": "微前端模式下子应用最常访问页面最佳实现", "desc": "前端如何实现用户最常访问页面top n？在微前端模式下，如何实现，有哪几种方案，可以不侵入子应用实现嘛？"}, {"id": "6844903569896767501", "title": "分享收集的一大波前端面试题和答案", "desc": "在github上看到的内容很好很丰富的一篇面试题（附带答案），不知道又没有被分享过，拿来分享一下，觉得不错的可以给个star给作者"}, {"id": "7001769043669549069", "title": "HTML 文件解析过程常见问题", "desc": "HTML 文件解析过程常见问题 前言 作为一个前端开发人员，每天面对的无非就是 HTML、CSS 、JS这几类文件。在浏览器解析 HTML 文件需要下载 CSS、JS 或者图片。这时浏览器是通过何种方"}, {"id": "6996638970616643597", "title": "H5知识点总结", "desc": "这是我参与8月更文挑战的第15天，活动详情查看：8月更文挑战 HTML5重点总结 一、HTML5新增的标签 二、低版本浏览器如何兼容HTML5的新标签 html5shiv.js 三、HTML5新增的表"}, {"id": "6850037265461149703", "title": "『真香警告』这33个超级好用的CSS选择器，你可能见都没见过。", "desc": "CSS 选择器是 CSS 世界中非常重要的一环。 在 CSS 2 之后，所有的 CSS 属性都是按模块去维护的。 CSS 选择器也是如此，然而如今也已经发布了第四版 —— CSS Selectors Level 4 ，这一版最早的草案发布于2011年09月29日，最后更新是20…"}, {"id": "6844903817968893960", "title": "【译】停止滥用div! HTML语义化介绍", "desc": "我们喜欢（使用）<div>标签。它们已经存在了几十年，这几十年来，当需要将一些内容包裹起来达到（添加）样式或者布局目的的时候，它们成为首选元素。查看线上站点时，看到像下面这些内容的情况依旧很常见： Hoo，那有很多的div标签。但是，它有效。我的意思主要是，它具有你需要的结构。…"}, {"id": "6844903814575685639", "title": "Audio使用总结", "desc": "原因：IOS设备系统是不允许视频音频自动播放的，需要用户明确指定播放（通过一定的交互动作），相关的音频或视频才能被加载。 问题描述：如果是在动画音效比较多的页面，此时此刻如果要根据场景的变换播放不同的音效。假如在我们动画播放过程中，音频还没有缓冲完毕，或者只缓冲了一部分，音频是…"}, {"id": "6844903828748238856", "title": "基于 HTML5 WebGL 的 3D 渲染引擎构建工厂运作系统", "desc": "设置后可以让场景在反序列化后能够显示出我们想要的展示角度，设置远端位置能够避免造成场景显示不完全等问题。 这个动画我们的思路是通过改变 camera 的位置来的实现，使用动画函数我们可以在指定的时间周期内完成动画，可理解为将某些属性由起始值逐渐变到目标值的过程。通过在 acti…"}, {"id": "6844904034818605070", "title": "你需要知道的HTML知识", "desc": "今天我们就来说一说HTML，可能很多人觉得这个太简单了，就是平常写网页的一堆元素。然而越是基础的东西人们越容易忽略，所以特意梳理了下相关知识，希望加深对它的理解。 HTML（HyperText Markup Language）超文本标记语言。顾名思义，它是一门语言，用来标记文档…"}, {"id": "6844904064791101448", "title": "移动端开发大混战--术语解释", "desc": "开发技术：使用和手机系统一致的开发语言，因此可以调用手机操作系统的任何功能。 优点：使用流畅。 缺点：针对IOS、Android要两个开发团队，精力太大；每次更新时，用户都要重新下载APP。 优点：每次更新时，用户无感知。 缺点：不能离线使用，无法使用推送消息，必须用浏览器才能…"}, {"id": "6844903972965220365", "title": "提升网页 SVG 文件可访问性的 7 个方案", "desc": "SA 团队 在自己的网站中使用 SVG 开发已经有一段时间了，根据在不同屏幕阅读器上的实验结果，总结了自己的一套经验。 下面是我根据他们发布的文章 《7 solutions for creating more accessible SVGs》，对 7 个方案做的扼要罗列，方便大…"}, {"id": "6844903965914562573", "title": "基于 HTML5 Canvas 的简易 2D 3D 编辑器", "desc": "我们首先将所有需要用到的 json 文件作为矢量图输出，矢量图的好处是组件上的图元缩放都不会失真，并且不再需要为 Retina 显示屏提供不同尺寸的图片， 在 devicePixelRatio 多样化的移动时代， 要实现完美的跨平台，矢量可能是的最低成本的解决方案。 这边我注册…"}, {"id": "6844904197607915534", "title": "《30分钟重学HTML》之基础-HTML头部（二）", "desc": "⚡️ HTML 头部即包含在<head>元素里面的内容。 ⚡️ 注意:<head>元素里面的内容不会在浏览器中显示。 它包含了像页面的标题,CSS，指向自定义图标的链接,元数据(描述 HTML 的数据，比如，作者，和描述文档的重要关键词), 脚本等。 下面分别介绍。 我们之前已…"}, {"id": "6844903986152079374", "title": "安利DeviceMotionEvent，带你手写一个摇一摇功能", "desc": "deviceorientation 提供设备的物理方向信息，表示为一系列本地坐标系的旋角。 devicemotion 提供设备的加速信息，表示为定义在设备上的坐标系中的卡尔迪坐标。其还提供了设备在坐标系中的自转速率。若可行的话，事件应该提供设备重心处的加速信息。 compass…"}, {"id": "6854573210470449166", "title": "返璞归真~原生html开发内网项目总结", "desc": "返璞归真~原生html开发内网项目总结「文章性质：一个小项目总结」「观看时间：5min」「内容：环境搭建，组件库使用总结」前言做的一个政府内网的项目，就是信息发布，公众号链接h5发布信息，参与时间为一"}, {"id": "6844903727048949774", "title": "关于如何使用原生HTML + JS + CSS绘制简单折线柱状图", "desc": "CSS确实很重要，且有点奇技淫巧，看起来规则十分简单，但是创意更重要，如何用css构造出自己想要的效果，写的代码好看优雅十分重要。 在看了不借助Echarts等图形框架原生JS快速实现折线图效果并自己重新实现了以后，实在是感慨CSS的强大之处，并作出记录。 1. 如何实现以下效…"}, {"id": "6904651086561280014", "title": "HTML常用标签", "desc": "一. a 标签 1. 属性 2. href 取值 1). 网址 三个都可以，建议选无协议网址。 2). 路径 前者虽然是绝对路径，但依然是对的，因为开始我是用http-server打开文件的，此根目录是http服务的根目录，所以不会出错；后者是相对路径，在当前目录下找，没问题。…"}, {"id": "6969330438145835039", "title": "网站优化三大标签", "desc": "SEO是由英文Search Engine Optimization缩写而来， 中文意译为“搜索引擎优化”！ 常见的搜索引擎，比如百度，谷歌，雅虎，搜狗等等.. SEO是指通过对网站进行站内优化、网站结"}, {"id": "6844903704588451847", "title": "Angular 学习笔记（一）", "desc": "理解 Angular，首先需要理解三大核心概念：模块、组件和服务，其余的特性都是基于这三大概念衍生出来的。比如组件与服务之间有依赖注入特性，模块为组件和服务提供了编译的上下文以及一些功能（指令、管道等）支持。视图的更新依赖于双向绑定，视图的变换对应着组件的切换，而组件的切换需要…"}, {"id": "6844903496001519623", "title": "vue2 + vue-router+ es6，vue2最新SPA项目实战-仿懂球帝-爆炸足球", "desc": "Vue2—爆炸足球模仿懂球帝移动端官网，欢迎各位童鞋stargithub地址：https://github.com/vqlai/vue2-football技术栈前端es6vue2vue-router2"}, {"id": "6844904050761138190", "title": "css复杂选择器及css字体样式、颜色属性", "desc": "通过 “>” 连接，这表示对div的直接子元素em里面的内容进行修饰。 这个时候要想2变色而其他的不变色，用标签选择器、属性选择器是办不到的（当然可以用加id选择器），所以这个时候就需要并列选择器，就是通过两个并列的元素来找到修饰对象，从而进行修饰。使用方法如下： 并列选择器（…"}, {"id": "6845166891342757902", "title": "HTML5学习之语义", "desc": "现在绝大多数前端开发都是使用下面的结构。 以<!--为前缀，以-->为后缀，即可对包裹内容进行注释。 一是对所有元素都适用，包括无效的元素。比如下面的 my 元素是一个无效元素，但 hidden 属性仍对其适用生效。 二是全局属性可能对一些元素不起作用。比如下面的 class …"}, {"id": "6844903773828038670", "title": "搭建 CocosCreator 组件库", "desc": "在近期使用CocosCreator（以下简称CC）开发HTML5游戏的工作中，发现公司许多游戏都有着相同的元素，比如倒计时条、结算页面等等。在早期的开发中，我们并没有摸索到复用的办法，只能在不同的游戏项目中从头开始写。随着需求越来越多，重复造轮子肯定不是一个好办法，那么对于CC…"}, {"id": "6844903619343581191", "title": "关于Http协议，你必须要知道的", "desc": "HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网服务器传输超文本到本地浏览器的传送协议。HTTP 是基于 TCP/IP 协议通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。它不涉及数据包（packet…"}, {"id": "6868460582623707143", "title": "BFC 深入理解（有案例和效果图）", "desc": "1. Block Container 2. Block-level Box 3. Block box 4. 什么属性会产生BFC column-span 为 all 的元素始终会创建一个新的BFC，即使该元素没有包裹在一个多列容器中（标准变更，Chrome bug）。 当id2…"}, {"id": "6844904205530955784", "title": "WebWorker，这次一定会！", "desc": "在【异步发展史，这次一定会！】中，因为js引擎是单线程的，所以我们需要异步编程，需要将耗时的操作异步处理。但是当这些执行异步任务时，它们先被放入浏览器的事件任务队列中去，等到执行栈空闲时才会按照队列先进先出的原则被一一执行，但终究还是单线程。若是复杂耗时的任务仍然会耗费较大的时…"}, {"id": "6995422700021743652", "title": "HTML5(九)——超强的 SVG 动画", "desc": "SVG 动画有很多种实现方法，也有很大SVG动画库，现在我们就来介绍 svg动画实现方法都有哪些？ 一、SVG 的 animation SVG animation 有五大元素，他们控制着各种不同类型的"}, {"id": "6989580018594611213", "title": "从零开发一个灰太狼游戏是什么样的体验？", "desc": "利用前端技术从零开发一个狂拍灰太狼的小游戏是什么样的体验，今天瓜哥利用 半小时时间带大家彻底搞懂其中的原理。"}, {"id": "6844903833944997896", "title": "大厂h5开源视频系列 - 搜狗:每一个人都是一句诗", "desc": "线上连接请戳👉👉 每个人都是一首诗大家可自行感受下。 天地造人，每个人内心深处都藏着一句诗，那就是这个人的灵魂。 我们一起学习一下这个h5里面比较有意思的几个部分 搜狗的loading采用最简单的进度条来展示。我们先来看看这个html的结构， 分析：从html中我们并不难看…"}, {"id": "6973267571004964872", "title": "前端冷知识：子资源完整性", "desc": "我给你一个口令，你要取东西就得告诉我口令，不通过的话，我就当你是假冒的，在前端中，有时候需要考虑是否会被劫持资源文件的情况，那么如何应对呢？"}, {"id": "6985429112567365646", "title": "【最全】canvas居中插入图片教程", "desc": "canvas居中插入图片，drawImage()居中插入图片，drawImage方法各个参数的含义。"}, {"id": "6844903552641564680", "title": "移动端H5多平台分享实践", "desc": "圣诞节和元旦团队策划了两个活动，都涉及到了在多个平台下的分享，如何按照产品要求实现多平台下一致的分享效果，包括分享文案的动态生成，在没有Native的帮助下是比较困难的。我们研究了很多分享方案，得到了一套较为完整的分享方案。 微信下的分享通过调用微信提供的JS-SDK和引导用户…"}, {"id": "6844903604445249543", "title": "JavaScript操作DOM常用的API", "desc": "文档对象模型 (DOM) 是HTML和XML文档的编程接口。它提供了对文档的结构化的表述，并定义了一种方式可以使从程序中对该结构进行访问，从而改变文档的结构，样式和内容。 文档对象模型 (DOM) 是对HTML文件的另一种展示，通俗地说，一个HTML 文件，我们可以用编辑器以代…"}, {"id": "6844904191396151310", "title": "那个炒鸡有趣的H5标签 —— <dataList>", "desc": "按照whatwg文档所展示的，截至到本文截稿之前，一共有 113 个HTML标签。 因为所出标签太多，所以我们很难都用得上或者意识到需要用。 但其实也有许多有趣但是我们未曾发掘的标签，本文所要介绍的 &#x3C;dataList> 便是一个。 &#x3C;dataList> 标…"}, {"id": "6844903585575108615", "title": "H5手机端开发问题汇总及解决方案", "desc": "少侠，请留步，相见必是缘分，赠与你一部《踏坑秘籍》 ios竖屏拍照上传，图片被旋转问题 解决方案 ios：DOM元素固定一边，另一边滚动，滚动很卡的问题 部分手机第三方输入法会将页面网上挤的问题 iPhoneX适配 某些机型不支持video标签的poster属性，特别是安卓 C…"}, {"id": "6984984347866562596", "title": "HTML5之input标签的新type属性", "desc": "新type属性介绍 首先让我们来看一张表 HTML5中的type.png 其中标有红色5的代表HTML5中推出的 测试代码: 运行效果 input新type属性.png 新type属性的注意要点 点击"}, {"id": "6940881373531996191", "title": "HTML/HTML5 基础知识 | 面试题专用", "desc": "DTD（Document Type Definition 文档类型定义）是一组机器可读的规则，它们定义 XML 或 HTML 的特定版本中所有允许元素及它们的属性和层次关系的定义。在解析网页时，浏 览器将使用这些规则检查页面的有效性并且采取相应的措施。 HTML（HyperTe…"}, {"id": "7005497774108049438", "title": "HTML5新增的部分标签和属性", "desc": "HTML5新增常用语义化标签 article,section,nav,aside,header,footer,search HTML5新增的部分表单输入类型"}, {"id": "6998335074307407879", "title": "HTML5(十二)——一文读懂 WebSocket 原理", "desc": "WebSocket 是一个持久化的协议，通过第一次 HTTP Request 建立连接之后，再把通信协议升级成 websocket，保持连接状态，后续的数据交换不需要再重"}, {"id": "6844904154142343182", "title": "HTML5抽奖转盘-CSS3超简单版本", "desc": "网上有很多关于抽奖转盘的代码和实例，有使用JavaScript控制动画的，有使用Canvas实现的，它们思路各不相同，本文将介绍一种采用CSS3的方式来实现转盘动画效果，非常简单，只需几行代码即可实现。 到此为止，一个简单的转盘抽奖程序就完成了，根据上面的思路，不仅可以旋转指针…"}, {"id": "6987223635643596807", "title": "CSS实现元素居中N种方法 ——比较全，附上 demo", "desc": "这阵子在准备面试，复习一些基础知识，发现元素居中的实现方式特别多，网上那些整理的也比较乱，就准备自己动手整理一下。影响元素居中的因素很多，不同元素类型。是否设置宽高、不同实现方式"}, {"id": "6844904051809714184", "title": "80%的前端会答错的问题：<img>是什么元素？", "desc": "于是我结合平时写页面的经验，脱口答道：“应该是内联元素吧。”但说出来就后悔了，因为肯定没那么简单。 果然，他像“非洲大山”穆托姆博那样对我摇了摇指头。 但通过图中可以发现，都提到了一个词：替换。于是我去了更权威的 MDN web docs，寻找替换元素 的定义。 简单来说，它们…"}, {"id": "6956115296058867720", "title": "【游戏系列】用js+html+css实现web端的2048小游戏", "desc": "前几年2048小游戏风靡一时，很多人下载这个游戏玩，但是作为一个合格且没多少头发的程序员，不应该想一想，这个游戏否是可以自己实现呢？"}, {"id": "6844903766613819400", "title": "HTML5拍照、摄像机功能实战", "desc": "最近在做一个chrome app的云相机应用，应用包括拍照、摄像、保存照片视频、上传文件等等核心功能，其中涉及到很多HTML5对媒体流相关的API。写这篇文章的目的，其一是总结梳理知识点，最重要是希望对有相关需求的读者提供一些指导。 注：本篇文章以实战为准，理论知识不做过多介绍…"}, {"id": "6844903623403503624", "title": "H5移动端获奖无缝滚动动画实现", "desc": "哈哈，上动态图真的是一下就明了了。 通过css3中的关键帧，可以得到跳步的效果。先通过一个短的看一下思路。 如果是写死的获奖，那么需要把前面的那个复制一份到后面去，如果是一个一个滚动那么就复制第一个，如果是两个两个滚动的就复制第一个和第二个。 然后计算需要滚动多少次，一次多少秒…"}, {"id": "6992417388545179656", "title": "HTML、CSS、JavaScript 总结", "desc": "1、开发技巧2、常见问题2.1、分割线标签、文字居中、背景图片充满全图2.2、HTML如何引入外部JS文件2.3、HTML中 块级元素 如何转为 行内元素??2.4、怎么在字的中间加一条横线表示这些字被划掉了，用css。2.5、用a标签在当前网页跳转和打开新页面再跳转2.6、锚点..."}, {"id": "6922729871365898248", "title": "事件捕获 or 事件冒泡", "desc": "事件流描述的就是从页面中接收事件的顺序。而IE和Netscape提出了完全相反的事件流概念。IE事件流是事件冒泡，而Netscape的事件流就是事件捕获。事件捕获事件捕获的思想是不太具体的节点应该更早"}, {"id": "6928387658850762766", "title": "HTML知识点（必知必会）", "desc": "使用伪元素替代dom元素解决方案，比如清除浮动，样式实现等。 不滥用dom标签，结构合理。 按需加载，减少不必要的渲染。 缓存dom对象，比如循环插入大量dom对象，将父dom在循环外获取，循环内插入。 使用document.createDocumentFragement创建文…"}, {"id": "6982179809791049765", "title": "Rewrite伪静态规则大全", "desc": "当我们的网站是动态页面（与后端交互的页面），而非真正的html静态时，为了更有利于SEO，我们可以考虑使用Rewrite伪静态, 伪静态的特点是从形式上看是一个静态地址，但是在服务器端，没有这个静态页"}, {"id": "6844903843264774151", "title": "基于 HTML5 WebGL 的挖掘机 3D 可视化应用", "desc": "在工业互联网以及物联网的影响下，人们对于机械的管理，机械的可视化，机械的操作可视化提出了更高的要求。如何在一个系统中完整的显示机械的运行情况，机械的运行轨迹，或者机械的机械动作显得尤为的重要，因为这会帮助一个不了解这个机械的小白可以直观的了解机械的运行情况，以及机械的所有可能发…"}, {"id": "6990365390136147976", "title": "手写Vue2.0实现-简易版", "desc": "目标 初步掌握Vue2框架的底层原理 要点 先来个HTML文件 来看下执行效果😇🤓🤡 补充 如果觉得上述代码太乱，可以到我的github看完整版✔"}, {"id": "6955773607926579214", "title": "强缓存与协商缓存", "desc": "在工作中，前端代码打包之后的生成的静态资源就要发布到静态服务器上，这时候就要做对这些静态资源做一些运维配置，其中，gzip和设置缓存是必不可少的。这两项是最直接影响到网站性能和用户体验的。 缓存的优点"}, {"id": "6844904084760166407", "title": "面试官问：什么是 canvas 污染", "desc": "这是最近面试 bd 时面试官问的一个问题，当时没有回答上来。 本篇就以问答的形式来讲解这题。当然以下内容纯属虚构，只是为了说明大厂面试是一环扣一环的。或许当你成为面试官时也可以采用这种形式。 “将一张跨域的图片绘制到 canvas 上，这个 canvas 就是被污染的，此时无法…"}, {"id": "6916808729753026568", "title": "移动端 Rem 适配", "desc": "在 PC 端浏览器下（以谷歌浏览器为主），字体的默认大小是16px，字体最小为12px 。 但是在移动端下字体没有默认大小。 但是上面的方法是有缺陷的，由于权重比较低，所以 font-size 的属性会被改变； 因此我们会想到 给属性加 !important 增加权重，但是 !…"}, {"id": "6844904116964032519", "title": "HTML5：给汉字加拼音？收起展开组件？让我秀给你看", "desc": "来看看 HTML 的历史和规范常识。HTML 规范是 W3C 与 WHATWG 合作共同产出的，HTML5 因此也不例外。其中： 说好听了是“合作产出”，但其实更像是“HTML5 有两套规范”。但话说天下大势合久必分，分久必合，如今（就在前几天，2018.5.29）它们又表示将…"}, {"id": "6844904007224262664", "title": "大多数前端工程师了解但并不擅长的HTML语义化", "desc": "读者可以先试试将上面例子中的代码进行语义化，再来看文末的答案。 HTML 语义化（按照 W3C 规范正确地使用标签元素和其属性，以下简称“语义化”，HTML 指 HTML5）被很多文章提到，但内容大多是先宣传语义化的必要性，然后劝说读者在开发中多使用语义化标签。 本文不宣传必要…"}, {"id": "6844903613278470152", "title": "浏览器原理", "desc": "0. 前言 身为前端，打交道最多的就是浏览器和node了，也是我们必须熟悉的。接下来我们讲一下浏览器工作原理和工作过程。从url到页面的过程，......，我们直接来到收到服务器返回内容部分开始。 浏览器引擎：在用户界面和呈现引擎之间传送指令。 渲染引擎：负责显示请求的内容。如…"}, {"id": "6844903718391906312", "title": "HTM - JSX 的替代品？还是另一种选择？", "desc": "所以，你可以直接在 react、preact 或者 omi 中使用并且直接在浏览器中运行，不需要任何编译。它利用了 Tagged templates 和浏览器自带的 HTML parser。 HTM最初的目标是在Preact周围创建一个包装器，使用它在浏览器中不受干扰。我想使用…"}, {"id": "6844904040216674311", "title": "postMessage", "desc": "postMessage是HTML5中新引入的API，它可以实现跨窗口以及跨域的通信。postMessage类似与Ajax但是它不受同源策略的限制并且通信双方都是客户端。 data表示发送的数据，在MDN中说到：data表示将要发送到其他 window的数据。它将会被结构化克隆算…"}, {"id": "6844903498136420366", "title": "前端编码规范", "desc": "开发灵活，稳定，可维护的 HTML, CSS 和 JavaScript 代码的规范 通过分析github代码库总结出来的工程师代码书写习惯"}, {"id": "6967603763167100935", "title": "web前端网页重构（划分网页，将PS与前端结合）", "desc": "一、划分规则 二、选择器（帮助找到要添加样式的标签） 三、清除网页自带的间距 四、还原文章封面的图片"}, {"id": "6989805921598144543", "title": "HTML常用标签", "desc": "本片文章将介绍几个常用标签的用法 a标签（a标签定义超链接，用于从一张页面链接到另一张页面。） href属性的取值： ①网址：http://baidu.com 、 https://xiaomi.com"}, {"id": "6844903839825395719", "title": "HTML5 Audio & Video - 兼容性总结（一）", "desc": "一、audio1、监听播放完成监听ended事件不准确，可以监听timeupdate事件，判断当前播放进度currentTime大于等于总时长duration时，就是播放完成；2、设置当前音频播放时间"}, {"id": "6854573210404831239", "title": "⭐️ 个人博客的创建之路1：hugo 搭建个人博客", "desc": "新建 blog 目录，运行 hugo new site xxx.github.io-generator ， xxx 为 github 用户名 。会在当前目录中创建 xxx.github.io-generator 文件夹（博客生成器） 编辑文章后，修改 draft: false。…"}, {"id": "6881661880784388104", "title": "<meta /> 妙啊", "desc": "开启全屏模式时，利用apple-mobile-web-app-capable可以隐藏网页的状态栏工具栏，让它看起来像一个app，默认值为no，显示状态。 先将网页添加到主屏幕，其中hi是未设置参数的，document是设置了的，打开后分别如下图所示。 第二个隐去头尾后，确实类似…"}, {"id": "6844904094272847880", "title": "3种方法实现CSS隐藏滚动条并可以滚动内容", "desc": "在本站的侧栏，你可以看到前端日报的那块内容并没有滚动条，但鼠标移上去却可以滚动内容。这是什么技术呢？ 其实我只是把滚动条通过定位把它隐藏了起来。 这个代码巧妙的向右移动了17个像素，刚好等于滚动条的宽度。这个值是我手动调试得来的。在chrome和IE没发现问题。 该代码最早是在…"}, {"id": "6989037352404385800", "title": "学习笔记 - html（持续更新）", "desc": "html 基础知识—— Shadow DOM 是HTML的一个规范，它允许浏览器开发者封装自己的HTML标签、CSS样式和特定的JavaScript代码。 同时也可以让开发人员创建类似这样的自定义一"}, {"id": "6989419228528902152", "title": "HTML入门笔记1", "desc": "一. HTML由谁发明的呢？ HTML的英文全称是 Hyper Text Marked Language，即超文本标记语言。HTML是由Web的发明者 Tim Berners-Lee和同事 Danie"}, {"id": "6989174890934992926", "title": "【2】「2021」前端总结之HTML篇", "desc": "1、HTML、XML、XHTML 的区别 HTML：超文本标记语言，是语法较为松散的、不严格的Web语言； XML：可扩展的标记语言，主要用于存储数据和结构，可扩展； XHTML：可扩展的超文本标记语"}, {"id": "6983310177093025799", "title": "html2canvas遇到的坑（记录一下）", "desc": "html2canvas，mui的h5+plus打包成App之后ios报html2canvas SecurityError: The operation is insecure的问题"}, {"id": "6993302552972361764", "title": "【JavaWeb基础 · HTML图片标签】", "desc": "“这是我参与8月更文挑战的第6天，活动详情查看： 8月更文挑战\" 图片标签<img/> <img> 标签用于展示 HTML 页面中的图像，使得页面能够“图文并茂”。 <img> 标签有两个必需的属性："}, {"id": "6844904017127047182", "title": "Web开发中最该知道却从不重视的 —— Accessibility", "desc": "Accessibility，通常缩写为 A11Y ，这缩写取的是首字母 + 中间字母长度 + 结尾字母，译为 “可访问性”。这是一种让尽可能多的人访问我们所开发的网站的技术概念，通过这个概念，让互联网访问公平变得可能。 A11Y是一件非常正确的事，在某些国家与地区，甚至提供无障…"}, {"id": "6933835228674949127", "title": "css基础（弹性布局和网格布局）", "desc": "容器指定了网格布局以后，接着就要划分行和列。grid-template-columns属性定义每一列的列宽，grid-template-rows属性定义每一行的行高。grid-gap用户设置行间距及列间距"}, {"id": "6916527678807867400", "title": "前端性能指标：白屏和首屏时间的计算|七日打卡", "desc": "页面性能优化是前端开发中一个重要的环节，而评判前端性能的优劣有两个比较经常听说的指标：白屏时间和首屏时间。 接下来我们一起来看看什么是白屏时间和首屏时间，如何去计算。 白屏时间(First Paint)：是指浏览器从响应用户输入网址地址，到浏览器开始显示内容的时间。 首屏时间(…"}, {"id": "6995789835600396319", "title": "HTML5中rel属性的prefetch预加载功能", "desc": "HTML5中rel属性的prefetch预加载功能使用 在HTML5中,有个很有用但常被忽略的特性,就是预先加载(prefetch),它的原理是: 利用浏览器的空闲时间去先下载用户指定需要的内容,然后"}, {"id": "6844903640893751304", "title": "你可能从未听说过这15个HTML元素方法！", "desc": "虽然现代化的 web 开发更多地依赖各种 MVC 框架，但开发者仍需要熟练掌握 HTML 与 DOM 方面的基础知识。不过，即使是有着多年经验的前端开发者，也会遇到一些不明所以的情况。本文首先将为初学者介绍 HTML 与 DOM 的基本常识，随后为大家介绍 15 个比较冷门的 …"}, {"id": "6844903718651953159", "title": "前端杂谈: DOM event 原理", "desc": "DOM 事件是前端开发者习以为常的东西. 事件的监听和触发使用起来都非常方便, 但是他们的原理是什么呢? 浏览器是怎样处理 event绑定和触发的呢? 让我们通过实现一个简单的event 处理函数, 来详细了解一下. 当我们点击上面这段 html 代码中的 a 标签时. 浏览器…"}, {"id": "6844904023544315918", "title": "前端渲染HTML与后端渲染HTML的区别", "desc": "一开始，Web App 直接由若干 HTML、CSS、 JS 组成，每一个页面需要特殊的逻辑，因此随着App规模的扩大，后端网站目录下的代码文件就越来越多，而且，彼此之间是没有同步的。比如你改了站点的布局风格，那么你很可能需要改动成百上千的HTML文件，这劳动量太大了。既然如此…"}, {"id": "6844903903331352590", "title": "前端战五渣学前端——FileReader预览本地文件", "desc": "这就是目前需要实现的功能。要实现这个功能，我目前感觉必须要实现网页可以预览本地图片，因为图片在展示的时候根本还没有上传，并没有图片地址这一说 网上一搜，果然html5的强大体现出来的，有原生API就可以实现————FileReader。 FileReader的实例拥有4个方法，…"}, {"id": "6844904106209853448", "title": "面试官：你用纯CSS来写个游戏吗？", "desc": "不知道大家小时候有没有玩过一款游戏叫『井字棋』的。 上面的就是本次文章的最终结果，一个用纯CSS实现的AI井字棋游戏，Mmmm，虽然看起来有点蠢。。。 游戏的规则比较简单，就是在一个九宫格（据说十六宫格，二十五宫格也行~反正是格子就行），只要你下的棋能连成一条直线，就算赢。 所…"}, {"id": "6844903542327607310", "title": "H5页面中尝试调起APP", "desc": "这种功能现如今应该非常普遍了，淘宝H5，知乎H5等等。。。 点击后会调起APP或者打开下载页面或者直接进行下载。 但是我这里发现知乎的这个功能有点不一样 他的逻辑是先提示我是否打开手机中的知乎APP（浏览器的机制询问用户操作许可），然后接着又弹出下载的提示。 URL s…"}, {"id": "6968656191689850910", "title": "表格 table", "desc": "1. 表格作用： 存在即是合理的。 表格的现在还是较为常用的一种标签，但不是用来布局，常见显示、展示表格式数据。 因为它可以让数据显示的非常的规整，可读性非常好。 特别是后台展示数据的时候表格运用是否"}, {"id": "6914948799550980110", "title": "如何更优雅的获取Form表单的数据？", "desc": "可以看到这些参数正是我们输入的参数。 json 格式也是非常常用的一种数据传递方式了，不过原生 form 并没有直接获取的方式，只能自己封装了。"}, {"id": "6844903598401257480", "title": "对HTML语义化的一些理解和记录", "desc": "为什么要使用语义化标签？我用DIV+CSS也能做出来一样的效果，确实单纯看效果两者并没有什么区别，但是页面不止是给人看的，机器也要看爬虫也要看。 标签语义化有助于构架良好的HTML结构，有利于搜索引擎的建立索引、抓取。简单来说，试想在H1标签中匹配到的关键词和在div中匹配到的…"}, {"id": "6844903696493445128", "title": "有人考了我一道CSS题目", "desc": "前段时间@快叫我韩大人私信我考了我下面这个CSS题目：在不改变HTML结构，同时保留元素高度前提下，实现某一个布局效果……我觉得还挺有意思的，在征得其同意的前提下输出了这篇文章，大家若有兴趣，也可以进来看看，自己能不能实现相关需求。"}, {"id": "6844903737257902094", "title": "基于eui的白鹭引擎H5小游戏入门总结", "desc": "由于实习公司要人做 H5游戏，使用白鹭引擎开发，语言是typescript。本着想学习ts的心态，就开始学习一波H5小游戏开发。几天时间看了下egret, eui, typescript的文档，花了3天半的时间，导师让仿一个360的小游戏。没啥游戏逻辑，入门小项目，现在写个小总…"}, {"id": "6994241096872099854", "title": "HTML 常用标签", "desc": "HTML 常用标签 a 标签（11.1） 网址 http://baidu.com https://baidu.com //baidu.com (推荐这种，因为浏览器会自动适配网站) 路径 /a/b/c"}, {"id": "6844903639274749959", "title": "还在为网页渲染性能优化而苦恼吗？", "desc": "博客 有更多精品文章哟。 在讨论性能优化之前，我们有必要了解一些浏览器的渲染原理。不同的浏览器进行渲染有着不同的实现方式，但是大体流程都是差不多的，我们通过 Chrome 浏览器来大致了解一下这个渲染流程。 处理 HTML 并构建 DOM Tree。 处理 CSS 并构建 CS…"}, {"id": "6844904131346300942", "title": "深入理解浏览器解析渲染HTML", "desc": "这一过程叫做Critical Rendering Path。 Critical Rendering Path，中文翻译过来，叫做关键渲染路径。指的是浏览器从请求HTML，CSS，JavaScript文件开始，到将它们最终以像素输出到屏幕上这一过程。包括以下几个部分： 值得注意的…"}, {"id": "6984667814497878023", "title": "HTML的秘密(1)基础知识总结", "desc": "HTML是一种标记语言, 讲究兼容并包. 超文本标记语言. 它真的不是编程语言, 本问介绍了基本知识: 元素, 属性, 标签, 版本声明, head头部,访问路径, 字符实体, 以及书写规范"}, {"id": "6987301742673133581", "title": "「HTML+CSS」--自定义加载动画【043】", "desc": "前言 效果展示 Demo代码 HTML CSS 原理详解 步骤1 使用span标签，设置 宽度、高度均为48px 背景色：白色 效果图如下 步骤2 span标签圆角化 效果图如下 步骤3 为span添"}, {"id": "6844903569590583304", "title": "我的HTML会说话——从实用出发，谈谈HTML的语义化", "desc": "与同为人类的程序员沟通，帮助程序员快速掌握当前代码。这一点其实是可以通过注释来实现的，不过用上语义化HTML多多少少可以省点注释，哈哈。 与同为代码构筑的系统（例如残疾人士阅读器以及搜索引擎爬虫等）沟通，帮助其快速、准确达到目的。由于这类系统与人类的智能相比起来实在有限，因此需…"}, {"id": "6940072226020392991", "title": "资源文件加载 async/defer/preload 实践篇", "desc": "最近复习了下浏览器的加载过程，看到了关于资源文件的加载顺序。MDN 的浏览器的工作原理 里面说到 对于&#x3C;script>标签（特别是没有 async 或者 defer 属性）会阻塞渲染并停止HTML的解析，说明有async、defer属性的script标签不会阻塞 ht…"}, {"id": "6844903826881773575", "title": "快速上手前端框架layui", "desc": "好了，有关layui的介绍就到此为止，更加详细和深入的了解请移步layui官网。"}, {"id": "6844903507640713223", "title": "FileReader与URL.createObjectURL实现图片、视频上传预览", "desc": "之前做图片、视频上传预览常用的方案是先把文件上传到服务器，等服务器返回文件的地址后，再把该地址字符串赋给img或video的src属性，这才实现所谓的文件预览。实际上这只是文件“上传后再预览”，这既浪费了用户的时间，也浪费了不可轻视的流量。 最近上网查资料才知道其实可以很轻松地…"}, {"id": "6844903593670246414", "title": "HTML5 video视频字幕的使用和制作", "desc": "HTML5允许我们使用元素为视频指定字幕。这个元素的各种属性允许我们指定这样的东西，比如我们添加的内容的类型，它所在的语言，当然还有对包含实际字幕信息的文本文件的引用。 label被赋予一个值，指示该字幕集所用的语言 - 例如English或Deutsch- 这些标签将出现在用…"}, {"id": "6844903592915107847", "title": "Webpack 4 和单页应用入门", "desc": "是的，即使是外国佬也在吐槽这文档不是人能看的。回想起当年自己啃 webpack 文档的血与泪的往事，觉得有必要整一个教程，可以让大家看完后愉悦地搭建起一个 webpack 打包方案的项目。 官网新的 webpack 文档现在写的很详细了，能看英文的小伙伴可以直接去看官网。 可能…"}, {"id": "6996639604166098981", "title": "HTML常用标签", "desc": "1. a标签 1.1 属性 target 内置名字 _self在当前页面中打开超链接，默认值 _blank在新建页面中打开超链接 _top，_parent用于配合iframe指定打开的窗口 程序员的命"}, {"id": "6899262851769171975", "title": "文本超过N行折叠内容并显示“...查看全部”", "desc": "多行文本超过指定行数隐藏超出部分并显示“...查看全部”是一个常遇到的需求，网上也有人实现过类似的功能，不过还是想自己写写看，于是就写了一个Vue的组件，本文简单介绍一下实现思路。遇到这个需求的同学可"}, {"id": "6986855459101605918", "title": "「HTML+CSS」--自定义加载动画【042】", "desc": "前言 效果展示 Demo代码 HTML CSS 原理详解 步骤1 使用span标签，设置为 宽度、高度均为96px 背景色：quamarine（这里只是为了先显示span，后面会删除的） 相对定位 效"}, {"id": "6844903696875126798", "title": "网页性能优化之异步加载js文件", "desc": "一个网页的有很多地方可以进行性能优化，比较常见的一种方式就是异步加载js脚本文件。在谈异步加载之前，先来看看浏览器加载js文件的原理。 上面所说的，就是我们平时最常见到的，将<script>标签放到<head>中的做法，这样的加载方式叫做同步加载，或者叫阻塞加载，因为在加载js…"}, {"id": "6902733543530184717", "title": "waterfall瀑布流布局+动态渲染", "desc": "由此可以知道，这种布局要用到绝对定位的思想来做。 上面的五个正常排列，到了第六个以后就要找最矮的追加了。 放进去之后这一列的高度变化，记录下来生成新的高度，然后进行下一轮高度的比较。以此类推。 waterful是一个组件，基于jquery的一个组件。 最外边的左右两边是没有间距…"}, {"id": "6988764123051851789", "title": "html中显示\\n为换行符", "desc": "html中显示\\n为换行符 html中显示\\n为换行符 html中显示\\n为换行符 html中显示\\n为换行符"}, {"id": "6993648235264868383", "title": "JavaWeb基础 · HTML列表标签和超链接标签", "desc": "“这是我参与8月更文挑战的第7天，活动详情查看： 8月更文挑战” HTML列表标签 在HTML中列表标签分为有序列表和无序列表。 无序列表标签 <ul> 标签表示HTML页面中项目的无序列表，一般会以"}, {"id": "6982844789288861727", "title": "HTML入门笔记1", "desc": "HTML的全名是超文本标记语言（HyperText Markup Language），是万维网之父Tim Berners-Lee在上世纪90年代发明的，一种用来结构化 Web 网页及其内容的标记语言。"}, {"id": "6983837680761045000", "title": "HTML__CSS 高频面试题", "desc": "1、你是怎么理解HTML语义化 使用语义化标签的意义： 可访问性：帮助辅助技术更好的阅读和转译你的网页，利于无障碍阅读； 可检索性：有了良好的结构和语义，可以提高搜索引擎的有效爬取，提高网站流量 国际"}, {"id": "6844904063327272968", "title": "为什么不用rAF进行滚动节流", "desc": "也就是说，滚动事件回调受渲染时机影响，仅执行更新渲染时才执行该回调。 换句话说，该事件自带节流。 如果是动画效果，实时绘制的界面等，则不需要额外的节流了。 以长列表为例，每次执行滚动回调，会计算新的渲染列表项及滚动偏移位置。如果应用更大时间周期的节流，会出现某一帧出现滚动但界面…"}, {"id": "6844903860079689735", "title": "基于 HTML5 WebGL 的 3D 模型斜面生成", "desc": "3D 场景中的面不只有水平面这一个，空间是由无数个面组成的，所以我们有可能会在任意一个面上放置物体，而空间中的面如何确定呢？我们知道，空间中的面可以由一个点和一条法线组成。这个 Demo 左侧为面板，从面板中拖动物体到右侧的 3D 场景中，当然，我鼠标拖动到的位置就是物体放置的…"}, {"id": "6979230324857241637", "title": "初学HTML+CSS小结", "desc": "个人第一篇博客哈哈哈，给之前刚学html和css时的手写笔记做个小梳理~虽然花了好久写的第一篇，但还是逃不了写得很烂的命运..."}, {"id": "6844904016732749838", "title": "通读 HTML Standard", "desc": "视工作类型而定，有时候想掌握 N-1 层的原理，可能还需要了解 N-2,N-3 ... 于前端程序员而言，第 N 层的抽象即 HTML/CSS/JS 语法，N+1 层是各种前端框架，N-1 层是语法的内部实现和浏览器的工作原理，N-2 层可能就是渲染引擎，JS 引擎，JS Ru…"}, {"id": "6924645527191715853", "title": "老生常谈之从输入URL到页面呈现的过程（全）", "desc": "面试中经常会遇到这个问题，简述从输入URL到页面呈现的过程，根据应试者的经验，理解程度不同，答案也是五花八门，下面说说我自己的理解。 1. DNS查询 在互联网中的不同主机是通过 IP 来标识的，IP 就相当于网络资源的门牌号一样，帮助我们寻找网络资源的所在主机。但是为了记忆的…"}, {"id": "6940967188467548173", "title": "《图解HTML》第二节 浏览器的工作原理简介", "desc": "由第一节 浏览器简介中我们知道，浏览器有很多种，由不同的商家生产，功能上也有所不同。那么浏览器是如何渲染HTML、CSS、JS成一个漂亮且有用的网页的呢？ 浏览器内核分成两部分：渲染引擎和js引擎。由于js引擎越来越独立，内核就倾向于只指渲染引擎。 渲染引擎其实就是网页浏览器的…"}, {"id": "6844903568164700174", "title": "Chrome 66 开发者工具新特性介绍", "desc": "我们都知道，Network面板中的请求列表中有一个“发起者（Initiator）”列，该列会给出资源被请求的原因。例如，某段Javascript代码发起了一个图片请求，那么“发起者”列将会给出发起该请求的代码所在的文件及其行号。 上图中，“发起者”列显示所有的请求的“发起者”都…"}, {"id": "6898890725082169358", "title": "HTML知识点总结02(HTML元素)", "desc": "1. 行内元素 HTML4 中，元素被分成两大类: inline （内联元素）与 block（块级元素）。一个行内元素只占据它对应标签的边框所包含的空间,没有换行效果。 常见的行内元素有 a b span img strong sub sup button input labe…"}, {"id": "6844903910025625608", "title": "部分安卓手机10rem不全屏的解决方案", "desc": "在使用了flexible的布局方案后，部分安卓手机会出现10rem不能填充满整个页面宽度的情况，或小于页面宽度，或大于页面宽度。笔者在vivo x21上发现10rem小于页面宽度，而在galaxy note5上又发现10rem大于页面宽度。 10rem的宽度是1069，而页面宽…"}, {"id": "6844903585344389128", "title": "web语义化之SEO和ARIA", "desc": "在快速理解web语义化的时候，只知道web语义化有利于SEO和便于屏幕阅读器阅读，但并不知道它是如何有利于SEO和便于阅读器阅读的，带着这个疑问，进行了一番探索总结。"}, {"id": "6952050803251085319", "title": "HTML常用标签之——a标签、table标签、img标签", "desc": "a标签:<a href=\"\"></a>作用：跳转外部页面跳转内部锚点跳转邮箱/电话属性（部分）：href、target1. href：超链接，hyper reference用于指向页面的ULR地址，"}, {"id": "6877803761624940552", "title": "html 和css总结 — 品优购", "desc": "再html里面， head 之间 引入 代码。 2. 制作ico图标 我们可以自己做的图片，转换为 ico图标，以便放到我们站点里面。 首先把我们想要的切成图片。 要把图片转换为 ico 图标，我们借助于第三方转换网站： http://www.bitbug.net/。 比特虫 …"}, {"id": "6844903849187082247", "title": "HTML5-焦点管理", "desc": "在开发TV web 应用时，发现在交互方式上和传统web开发很不一样。PC上的页面上都是通过鼠标进行交互，而TV则不同，它是通过遥控器按键进行交互，它有点击、移动(上下左右)、返回、主页等操作。 移动的实质则是切换焦点，所以我们需要去理解什么焦点。 接下来我们需要了解一下 ta…"}, {"id": "6844903711022514190", "title": "vue 博客优化，服务端渲染(SSR)指南", "desc": "，服务器阿里云 Ubuntu 16.04，web服务器nginx。 面临的问题。1：单页应用首屏加载过慢；2：无法被搜索引擎抓取；3：首屏白屏时间过长（重要）； 解决一：首屏加载过慢。 经过分析，页面首屏慢主要是首次需要加载的js文件过大。 1：对webpack打包过程进行优化…"}, {"id": "6844903619574120461", "title": "不一样的ZTree，权限树.js插件", "desc": "每一个有趣的创新，都源于苦逼的生活。 在最近的工作中，遇到一个做权限管理筛选的需求。 第一次遇到这样的需求，花费了很多时间去解决，在解决的过程中闪现一个灵感，觉得可以结合函数的递归用更少的代码去解决这个需求。"}, {"id": "6844904178871975943", "title": "道友请留步，<meta>了解一下", "desc": "meta是用来表示不能够由其他HTML元素(<link> <base> <script> <style>)表示的元数据信息。 在MDN中是这样描述元数据概念的 in its very simplest definition — data that describes data.…"}, {"id": "6844903938982936589", "title": "mPaaS H5 容器知识清单 | FAQ · 第一期", "desc": "Hybrid 开发模式已不是什么新鲜的话题，不仅可以快速发布新业务，同时无需考虑 App 发版时间，为业务更新迭代提供了极强的灵活性。相比于 Web 开发，Hybrid 开发模式提供了丰富的设备 API，让业务形态可以更加多元和丰富。 mPaaS 离线包源自于支付宝原生方案，经…"}, {"id": "6844903592952856584", "title": "JavaScript 是如何工作的：渲染引擎以及优化建议", "desc": "这是专门探索 JavaScript 及其构建组件的系列 #11。 在识别和描述核心元素的过程中，我们也分享了我们在构建[SessionStack](https://www.sessionstack.com/?utm_source=medium&utm_medium=blog&ut"}, {"id": "6917866356280918030", "title": "编程学习之路：痛并快乐着", "desc": "我的编程之路开始于一个名叫 learn HTML 的手机app，有时心血来潮我会打开它做几个小任务，然后就好几个月都不碰它了。 有一天我又坐下来像往常一样开始玩这个app，完成了几个小任务，新学了一点HTML。 但这一次——我也不知道为啥——我停不下来了。 连续好几个小时，我完…"}, {"id": "6844903520437534733", "title": "Zepto这样操作元素属性", "desc": "已经知道了如何使用attr方法，在开始分析attr实现源码之前，我们先了解一下这几个函数。 它的主要作用就是设置或者删除node节点的属性。当value为null或者undefined的时候，调用removeAttribute方法移除name属性，否则调用setAttribut…"}, {"id": "6940630750798544903", "title": "估计这两个 HTML 标签，你听都没听过： <details> 与 <summary>", "desc": "众所周知， HTML5 已经出了很多年，其迭代版本都出到了 HTML5.3 。这其中有趣的 API 跟 标签有许多，这里就简单介绍两个：&#x3C;details> 跟 &#x3C;summary> 。 &#x3C;details> 就是一个展示附加内容的原生组件。 而 &#x…"}, {"id": "6844903987666223112", "title": "HTML基础知识学习笔记", "desc": "$\\quad$ 每次写文档的时候，总是有一些文章的布局想法想去实现，但是碍于自己知之甚少，所以基本上要么是效果打折，或者是用重复啰嗦的简单语句去实现。在学完HTML基础知识之后，感觉最大的收获还是在于学到了更多设计页面的技巧与方法，同时，也了解了网页后面的一些标签知识。 1. …"}, {"id": "6844903949116375047", "title": "你知道却不常用的HTML标签（二）", "desc": "之前写过一个 你知道却不常用的HTML标签（一） ,今天接着之前的继续来学习一下 HTML 的不常用但又特别实在的标签吧。Follow me~~ vedio、audio 和 track 三者都是 HTML5 的产物，相信很多小伙伴，都肯定使用过<video>和<audio> ，…"}, {"id": "6844903630189887502", "title": "前端跨域问题及其解决方案", "desc": "其实我们通常所说的跨域是狭义的，是由浏览器同源策略限制的一类请求场景。是指浏览器不能执行其他网站的脚本。是浏览器对JavaScript实施的安全限制。 同源策略/SOP（Same origin policy）是一种约定，由Netscape公司1995年引入浏览器，它是浏览器最核…"}, {"id": "6844903779913957389", "title": "[译]What's New in HTML 5.2", "desc": "不到一个月前，HTML 5.2 成为 W3C 官方推荐标准 (REC) 。当规范达到 REC 阶段时，这标志着它已经得到 W3C 成员和主管的正式认可，W3C 正式建议由用户代理部署规范，由 Web 开发者实现规范。 在 REC 阶段，任何新事物都应该至少有两个独立的实现。作为…"}, {"id": "6844903600498409480", "title": "你不知道的那些DOM", "desc": "DOM2级和3级的目的在于扩展DOM API，以满足操作XML的所有需求，同时提供更好的错误处理及特性检测能力。从某种意义上讲，实现这一目的的很大程度意味着对命名空间的支持。 有了XML命名空间，不同XML文档的元素就可以混合一起，共同构成格式良好的文档，而不必担心发生命名冲突…"}, {"id": "6850418113884880910", "title": "《30分钟重学HTML》之嵌入-视频与音频（六）", "desc": "<video> 元素 用于在 HTML 文档中嵌入媒体播放器，支持文档内的视频播放。 你也可以将 <video> 标签用于音频内容，但是<audio>元素可能在用户体验上更合适。 同 <img>标签使用方式相同。提供视频资源的 URL。 Gecko 会提供用户控制，允许用户控制…"}, {"id": "6899996104478326798", "title": "简单易懂BFC", "desc": "BFC 的英文缩写是 Block Formatting Contexts (块级格式化上下文)，通俗一点来讲，可以把 BFC 理解为一个封闭的大箱子，箱子内部的元素无论如何翻江倒海，都不会影响到外部。 BFC内部的Box会在垂直方向，一个接一个的放置。 每个元素的margin …"}, {"id": "6899644882755780615", "title": "你想知道的所有关于inputmode的事情，这里都有", "desc": "inputmode全局属性，提供了一种机制让开发者可以定制input和textarea元素需要的键盘类型。 与type属性不同的是，inputmode属性并不会改变浏览器对input的处理。它仅仅是决定如何展示键盘。 inputmode属性由来已久，但是仅仅在最近几年才被主流的…"}, {"id": "6928237157706858510", "title": "前端二向箔02-HTML语义化", "desc": "语义化标签应该是HTML5基本的规范要求, 对于良好的web语义化, 不单是说表义上理解的标签语义, 语义化最大的好处是方便机器识别. 特别是在一些视障人群和阅读模式的适配. 良好的语义化更有利于网页SEO, 增加曝光. 这些应该是初级入门时了解到的语义化的相关程度. 而对于深…"}, {"id": "6903496766626316295", "title": "前端编程之路一一form表单标签（详解）", "desc": "&#x3C;form>表单是可以把浏览者输入的数据传送到服务器端，这样服务器端程序就可以处理表单传过来的数据。 所有表单控件（文本框、文本域、按钮、单选框、复选框等）都必须放在 &#x3C;form>&#x3C;/form>标签之间（否则用户输入的信息可提交不到服务器上哦！）。…"}, {"id": "6844903637672525832", "title": "「译」CSS语义化是怎么往原子化进化的？", "desc": "想要复用CSS，请放弃语义化使用CSS。"}, {"id": "6844903561801777159", "title": "可拖动table表头的实现", "desc": "自己做的项目碰到这样一个需求，就是对所有的表格添加表头可以拖动的效果。我一想，这不简单，分分钟钟给你做出来。拿起我的电脑，啪啪啪就敲起来了。 一定是哪里不对，以我的聪明才智，结果应该不是这样的，然后净下心来，好好理了下思路后，总算是做出来了。 至于结果嘛，我肯定是做出来的，像下…"}, {"id": "6951670014260805646", "title": "移动端WEB开发之响应式布局", "desc": "1.0 响应式开发原理1.1 响应式开发原理就是使用媒体查询针对不同宽度的设备进行布局和样式的设置，从而适配不同设备的目的。设备的划分情况：小于768的为超小屏幕（手机）768~992之间的为小屏设备"}, {"id": "6844904068112973832", "title": "小白如何自己亲手制作一个防疫地图？", "desc": "答案当然是肯定的，这里面涉及到的技术点就是地图上的那些点是如何标记出来的。 这里的地图我们使用腾讯地图来实现，首先进入到腾讯位置服务的首页（ https://lbs.qq.com/index.html ），进行登录操作，用 QQ 也好微信也好，反正先登录上去。 这里我们新建一个…"}, {"id": "6844903854010548238", "title": "Html-iframe", "desc": "contentDocument和contentWindow：返回的是iframe对应的document和window与当前页面的document和window对应。 ok，总结起来就是，iframe可以嵌入第三方资源，并且可以对第三方资源进行策略限制，为了安全，毕竟第三方，需要…"}, {"id": "6844903874118041607", "title": "你可能不知道的 10 个 HTML 元素", "desc": "Emma Wedekind 原作，授权 New Frontend 翻译。 我都记不得听到过多少次「HTML 很容易」的说法。尽管我同意，相比其他编程语言，HTML 也许学起来要容易一些，但你不该理所当然地认为它不值一提。 HTML 是强大的标记语言，在运用得当的情况下，可以为 …"}, {"id": "6844903844661592077", "title": "你所不知道的HTML5——语音合成", "desc": "曾经在我迷茫的时候，我去阅读一些大牛的文章，读到一些前辈对前端开发的思考。其中有一点令我印象深刻："}, {"id": "6844903619054010382", "title": "1kb的前端HTML模板解析引擎，不限于嵌套、循环、函数你能想到的解析方式", "desc": "html做点小功能（什么都没有），如果是要手动生成html这种操作，容易把代码搞得乱七八糟，如果使用模板并解析成html，就会简单很多。 这段代码是以前在多个项目中使用的（包括PC端、移动端、还有Android、IOS Hybrid App），代码简单轻巧，但功能一点都不简单。…"}, {"id": "6844904017680662536", "title": "对web标准的理解", "desc": "万维网联盟（World Wide Web Consortium）标准不是某一个标准，而是一些列标准的集合。 用一个程序语言来说，我们是转换器........adapter，我们想方设法让我们的页面、我们的程序能够支持所有浏览器，能够满足尽可能多的用户。我们要满足所有的用户，即使…"}, {"id": "6844903957169438728", "title": "meta元素内容含义", "desc": "打开VSCode，输入html:5，按下tab，一个基本的html结构出来了，却从未注意过里面某些元素的含义。今天就来总结总结这些重要却不起眼的元素标签meta。 The <meta> tag provides metadata about the HTML document.…"}, {"id": "6994381139968262175", "title": "【JavaWeb基础 · HTML块标签】", "desc": "“这是我参与8月更文挑战的第9天，活动详情查看： 8月更文挑战” 我们不难发现，基本上每一个网页都是由一块一块区域组成的，那么如何使用HTML来实现这样的功能的，那就是块标签<div></div>和<"}, {"id": "6844904083166347271", "title": "从输入URL到页面打开", "desc": "2.浏览器查找当前URL是否存在缓存，并比较是否过期。 客户端获取SYN + ACK 并发送ACK（ACK = y + 1， seq = z）包至服务端，链接建立成功。（即将开始发送数据） 服务端接受通知，向客户端发送ACK报文，确认序号为收到的序号加1，和SYN一样，一个FI…"}, {"id": "6844904148480049166", "title": "基于 HTML5  的 PID-进料系统可视化界面", "desc": "随着 工业物联网 和 互联网技术 的普及和发展，人工填料的方式已经逐渐被机械设备取代。工业厂商减小误操作、提升设备安全以及追求高效率等制造特点对设备的要求愈加高标准、严要求。同时机械生产以后还需遵从整个项目流程的规范管理，如何实行管理与交接也是一大严峻的挑战。因此，整个生产流程…"}, {"id": "6844903850340515854", "title": "摩拜前端周刊第9期", "desc": "Ladiesand乡亲们，摩拜前端周刊起航啦～摩拜前端团队会收集每周前端优秀文章，每周五发布至掘金平台，欢迎关注我们～Top榜探索Serverless中的前端开发模式地址:https://juejin"}, {"id": "6994780121487900708", "title": "【JavaWeb基础 · 表单标签(一)】", "desc": "“这是我参与8月更文挑战的第10天，活动详情查看： 8月更文挑战” <form></form>标签 <form> 标签用于创建供用户输入的 HTML 表单。创建一个表单区域，表单区域中可以有多种表单元"}, {"id": "6844903673810649095", "title": "如何打造一款静态开源站点搭建工具", "desc": "诸如github pages的静态托管服务的兴起，静态生成+托管对托管环境要求低、维护简单、可配合版本控制，但又灵活多变，这一系列的优点，使得静态站点生成器在近年有了极大的发展，涌现出一系列优秀的静态站点生成器。 笔者负责整个部门的开源站点搭建，要想提高开发效率，没有一个称手的…"}, {"id": "6871937593861210120", "title": "HTML5新增相关标签的和属性", "desc": "流表示图表、照片、图形、插图、代码片段等独立的内容。在 h5之前没有专门去实现的这个目的的元素。h5通过figure和figcaption引入流，其中figcaption是流标题，流标题不是必须的，但是如果包含它，它必须是figure的最前面或者最后面的一个元素。 图标大小一般…"}, {"id": "6844903665803722760", "title": "京晚8点--H5单页面手势滑屏效果实践", "desc": "京晚8点作为内容平台重点打造的内容IP，通过优质的内容形式，潜移默化中让用户了解产品，建立对京东开始玩内容的心智和认知，目前这个项目已经迭代到第5期，最开始的时候我们的首页效果是一个卡片形式的时间轴，首页的背景大图会随着时间轴拖动到不同的卡片而进行切换： 从第5期开始，我们采用…"}, {"id": "6844903958620831752", "title": "使用postMessage让 iframe自适应高度", "desc": "有时候，我们会使用 iframe标签，将前端分离项目无感的嵌入 如以Freemark为主体较老的项目中。 我们知道，当iframe内部内容比父页面所指定的宽高大的时候，会出现滚动框。 所以，让iframe的宽高能根据自身内容自动改变，就成了一个必须要解决的问题。 使用HTML5…"}, {"id": "6844903535146958862", "title": "Webpack多页面实现公共头部尾部和分离生产环境", "desc": "在日常开发中，经常会遇到这种类似头部和尾部，多个页面的拥有相同的HTML结构，如果每个页面都添加这种一样的代码，会让文件显得臃肿，且后期维护成本也很大。因此，我们可以将这些共用的HTML抽取出来形成类似组件的形式，在页面中直接引入就可以 不推荐，因为无法实时编译。 这样就可以实…"}, {"id": "6844903848985755656", "title": "移动端网站开发要点-meta设置", "desc": "另外，建议X-UA这样写更多：https://www.cnblogs.com/supershare/p/5709846.html"}, {"id": "6844904052682129415", "title": "还在用div的span打天下吗：你应该了解的HTML标签", "desc": "说起HTML，很多人觉得它非常简单，确实，从本质上来说，它都算不上一种语言，只是一种描述型的标签。所以，在写业务的时候，大多数人都是全屏的div和span，完全满足要求，完美实现效果。但HTML仍然提供了很多其它标签，那些都没有用吗？ 嗯... 当然不是。 合理使用语义话的标签…"}, {"id": "6922801430864592909", "title": "HTML常用标签", "desc": "在了解了html的起手式和基本的章节标签、内容标签以及全局属性之后，就可以进一步学习html的重点标签的含义及应用。本文分享我学习html几大类常用标签所作的笔记。 若href里面添加网址，则会直接跳转到该网址，需要注意的是，如果添加“//google.com”这类的无协议网址…"}, {"id": "6844903652197400590", "title": "[译] 组件、Prop 和 State ", "desc": "React Native vs. Cordova、PhoneGap、Ionic，等等 (待翻译) 今天我们来学习 React 里最重要的三个概念: 组件、prop 和 state ，以及 prop 和 state 之间的区别。 如同之前的文章，我还是会尝试用通俗的语言来解释这些…"}, {"id": "6844903543699144711", "title": "基于HTML5陀螺仪实现ofo首页眼睛移动效果", "desc": "用ofo小黄车App的时候，发现以前下方扫一扫变成了一个眼睛动的小黄人，觉得蛮有意思的，这里用HTML5仿一下效果。"}, {"id": "6844903678692818957", "title": "脆弱的HTML邮件模板", "desc": "在开展我们的项目时，在一些方面，如：注册确认、营销推广等，都需要以给用户发邮件的方式，进行沟通，但是我们编写的HTML邮件，很多主流邮箱都会或多或少的过滤掉一些东西，所以就要考虑如何编写才是能兼容各种。 iframe为代表的模版不支持特殊标签包括html5新特性：如：butto…"}, {"id": "6976968267994759175", "title": "HTML基础知识点(F2)", "desc": "1.超链接标签【a】 使用方式、参数值、作用 2.图片标签【img】 使用方式、参数值、作用、图像地图"}, {"id": "6844903687383416840", "title": "[译]从内部了解现代浏览器(3)", "desc": "这是本系列文章的的第3部分。 在前2篇，我们介绍了多进程架构和导航流程。在这篇文章中，我们将看看渲染器进程内部发生了什么。 渲染器进程涉及Web性能的许多方面。 由于渲染器过程中发生了很多事情，因此本文仅作为一般概述。 如果您想深入挖掘里面的细节，the Performance…"}, {"id": "6898979548935749639", "title": "HTML5", "desc": "以前制作网页布局时基本使用div来做。div就是一个普通的块级标签，对于搜索引擎来说，是没有语义的。 多媒体标签：使用它们可以很方便的在页面中嵌入音频和视频，而不再去使用落后的flash和其他浏览器插件。 HTML5在不使用插件的情况下也可以原生的支持音频格式文件的播放，当然支…"}, {"id": "6981739020258639879", "title": "web开发三大件", "desc": "由于个人兴趣需要学react，简单学习一下web开发的基础，中级以及高级这些剩余的部分可以直接查看源码边查边学，有用到在看"}, {"id": "6844903874143191047", "title": "详解 HTML attribute 和 DOM property", "desc": "在大多数的文章中，attribute 一般被翻译为“特性”，property 被译为“属性”。 把结论写在最前面，如果你全都懂，后面就不用看了。 我们写了一个 input 标签，并给他定义了 2 个特性 (id 和 value)。当浏览器解析这段代码的时候，会把 html 源码…"}, {"id": "6980249431660560392", "title": "A 标签属性含义与详细用法", "desc": "a 元素可通过其href属性创建指向其他网页、文件、同一页面内的位置或其他URL的超链接。   其基本属性及含义如下。 href：链接目标的URL hreflang：指定目标URL的语言 rel：指定"}, {"id": "6951576602392133646", "title": "从输入URL到浏览器显示页面发生了什么", "desc": "1、输入网址当你开始输入网址比如www.cnblogs.com时游览器就可以在书签或者历史记录里面去搜索相关的网址推荐给你。2、游览器查找域名的IP地址导航的第一步是通过访问的域名找出其IP地址。DN"}, {"id": "6844904133921619982", "title": "offsetLeft、offsetWidth、clientWidth、scrollWidth、style.width···你都分清了吗？", "desc": "还是先来点前戏，哦不，前言吧，主要想说一下为什么我会想把这些东西拿出来做一个区分，这还要从二十多年前的夏天说起······扯远了扯远了，主要还是前不久经历了一次面试。哪里的面试我就不说了，他们的面试还是很有含量的，其中就问到了这些东西。怎么说呢，这要是平时敲代码这些东西我这种马…"}, {"id": "6901870658747219975", "title": "HTML5 桌面通知：Notification API", "desc": "想要向用户显示通知消息，需要获取用户权限，而相同的域名只需要获取一次权限。只有用户允许的权限下，Notification 才能起到作用，避免某些网站的广告滥用 Notification 或其它给用户造成影响。那么如何知道用户到底是允不允许的？ default ：不知道用户的选择…"}, {"id": "6951669264923230238", "title": "移动web开发之rem布局", "desc": "rem基础rem单位rem (root em)是一个相对单位，类似于em，em是父元素字体大小。不同的是rem的基准是相对于html元素的字体大小。比如，根元素（html）设置font-size=12"}, {"id": "6988002005813821454", "title": "Html jq 图片（大小判断）上传 删除", "desc": "##简介 Android开发仔一枚，以前只是简单的使用webview添加过简单js代码，这是第 一次完全的抛弃Andoird，下面我会写一篇基于原声Html input jq + java 后端的博客"}, {"id": "6844903503056338957", "title": "记HTML5 <a> 标签的一个小坑", "desc": "今天写了段简单的代码，点击<a>标签时却抛出了这个错误：Uncaught TypeError: download is not a function。代码如下： 把<a>标签换成别的标签，尝试了<button>标签，结果点击按钮后，download函数就可以正常执行了，说明do…"}, {"id": "6844904053369995278", "title": "[译] HTML 能做什么？", "desc": "看完之后，你会发现，原来只使用 HTML，就能实现这么多的效果。 拨号链接与邮箱发送（ mailto）链接书写类似，不过使用的是 tel。 删除文本使用 <del>...</del>，插入文本使用 <ins>...</ins>。 为标签添加 contenteditable 属性…"}, {"id": "6911643621377146888", "title": "【移动端】px、em、rem、vw、百分比的区别", "desc": "px: 是固定单位，其他几种都是相对单位。 em: 默认字体大小的倍数。比如给元素设置font-size：2em rm: 根元素（html节点）字体大小的倍数。 1%: 对不同的属性有不同的含义。 需要注意的是Chrome 浏览器下的最小是12px，设置低于12px的值最终也会…"}, {"id": "6982857769288204301", "title": "超级链接", "desc": "使用a标签引用超级链接 通过 a标签的href属性可以引用地址链接进行网页的跳转，target 打开窗口方式 默认的值是_self 当前窗口打开 blank 新窗口打开。 可以将href的属性都设置为"}, {"id": "6844904078703591438", "title": "MPM 卖场可视化搭建系统 — 架构流程设计", "desc": "这是 MPM 分享系列的第二篇，在上一篇 MPM 卖场可视化搭建系统 — 要素设计 中，我们介绍了 MPM 作为一个面向卖场场景的页面可视化搭建系统，最基础的系统要素都有哪些，并给出了系统要素的推导和设计过程。系统要素是一个庞大系统链接各个模块的纽带，也是系统设计的基石，而要素…"}, {"id": "6992527261668737054", "title": "HTML基础知识之新增表单元素与HTTP协议", "desc": "一、H5新增元素 datalist标签 progress 二、HTTP协议 表单：提交数据 交互：HTTP协议 客户端大前端 请求------> <------响应 服务端 后端 HTTP报文的分类有"}, {"id": "6844903888852631566", "title": "利用 CodePen 打造个人Demo演示平台", "desc": "学习前端开发的过程中免不了要写一些 Demo 来验证和实践学到的知识，常见的做法就是在自己电脑上建一个文件夹专门用来存放 Demo，简单快速，但不利于分享和传播，所以很多人都会选择一些在线Demo网站，如 JSFiddle、JSBin、CodePen，各平台都有自己的优势，看个…"}, {"id": "6844903625299492878", "title": "H5页面PC富文本内容自适应显示", "desc": "接上篇博客，现在增加一个新需求：h5页面B区显示富文本HTML片段。 看到需求时，第一想到的是只是显示一段富文本内容，为什么要用iframe，直接显示不就行了。 代码复杂，无法被一些搜索引擎索引到，这一点很关键，现在的搜索引擎爬虫还不能很好的处理iframe中的内容，所以使用i…"}, {"id": "6855129006291992589", "title": "⌨️ Vue项目给应用优雅的绑定快捷键", "desc": "想必各位前端看官也一定做过这样的需求，给我们的应用某些主要的功能绑定一个快捷键。尤其是工具类的产品，让用户可以使用快捷键操作，能大大提高工具使用效率。 但是实际实践过的你也可能知道，这种绑定按键事件的方式都是绑定在了当前 ViewModel 上的。也就是模版字符串 templa…"}, {"id": "6844903592361459719", "title": "七行JSON代码将你的网站变成移动应用", "desc": "本文介绍了借助Jasonette将Web视图和原生组件融合构建真正“混合”应用的做法。如果我告诉你，只需要上述7行橙色的JSON代码就可以将一个网站变成移动应用，你相信吗？完全不需要使用某种框架API"}, {"id": "6844903560186953735", "title": "H5首评秒开方案探讨", "desc": "本文作者：蚂蚁金服高级无线开发专家bang阿里妹导读： 越来越多的APP内业务使用H5的方式实现，怎样让H5页面启动更快是很多人在探索的技术点，本文梳理了启动过程中的各个点，分别从前端和客户端角度去探"}, {"id": "6890371528387952653", "title": "前端，到底什么来路？", "desc": "关注可了解更多的前端教程。问题或建议，请留言; 最开始，万维网是作为学术交流而出现的，是欧洲核子研究组织的一帮科学家为了方便看文档、传论文而创造的，这就是为什么Web网页都基于Document。Document就是用标记语言+超链接写成的由文字和图片构成的HTML页面，这样的功…"}, {"id": "6978842970724401182", "title": "使用 HTML5 download 属性创建可下载的链接", "desc": "HTML5 引入了许多我们日常开发经常用到的一些方便的特性。其中之一便是在 <a> 标签上的 download 属性。 默认情况下，锚定标签 <a> 的默认值是导航链接，它将转到您在 href 属性中"}, {"id": "6844903664008560647", "title": "30 分钟理解 CORB 是什么", "desc": "我当前的 chrome 版本是 v68，如果是 v66 或更低版本可能提示的警告信息略有不同。印象中只对 CORS 比较熟悉，CORB 是个什么鬼？好奇心迫使我想要了解一下它到底是什么，于是暂时把手头工作放下查了一些资料并花时间汇总了一下，就有了这篇文章。 再介绍 CORB 是…"}, {"id": "6866980589493288968", "title": "html 本地引入vue+element+axios 开发复杂页面", "desc": "一，需求产生公司要做一个html页面，这个页面功能挺复杂的，用到了滑动条，省份联动，单选框组等等。首先想到了，jq+bootstrap去实现，环境都搭建好了，感觉以后处理数据，代码太繁杂，vue双向绑"}, {"id": "6844903613366534152", "title": "将一个前端项目改写为chromo插件（一）", "desc": "编写chrome插件完全就是前端知识加上一些专门的知识。 嗯，现在看来他只是普通的html，其实，你只要在当前文件夹下加上manifest.json文件，chrome浏览器就可以把它识别为插件，成为浏览器右上角的小图标。 name、version不用解释，manifest_ve…"}, {"id": "6844903570874056717", "title": "webpack从入门到放弃", "desc": "注册所有配置的插件，让插件监听webpack构建生命周期的事件节点，以做出对应的反应。 从配置的entry入口文件开始解析文件构建AST语法树，找出每个文件所依赖的文件，递归下去。 在解析文件递归的过程中根据文件类型和loader配置找出合适的loader用来对文件进行转换。 …"}, {"id": "6971402961217912839", "title": "前端优化Web动画(setInterval、setTimeOut、requestAnimationFrame )", "desc": "用requestAnimationFrame解决setInterval和setTimeOut的一些问题"}, {"id": "6844903741838082062", "title": "HTML5中Audio使用踩坑汇总", "desc": "原因：在调用play()时，现代浏览器返回的是一个promise，对于执行失败的，会触发一个Unhandled Promise Rejection，但是对于低版本的浏览器，调用play()并不会返回一个promise。 原因：对于还没有设置src的audio，就直接设置curr…"}, {"id": "6844903504000057357", "title": "现代浏览器性能优化-JS篇", "desc": "浏览器自上而下读取html文档（此过程叫html parser），当发现style.css文件时，浏览器parser停下来去搞css，等style.css下载并解析完毕，浏览器继续parser。紧接着发现header.js， 于是html parser又停了，浏览器下载并执行完…"}, {"id": "6844903695927214094", "title": "HTML高亮关键字真麻烦", "desc": "有这么一个功能：在网页中高亮关键字。 本以为一个 innerHTML replace 就能实现的简单操作，却遇到了许多的问题。本文就记录这些问题和最终的完美解决办法， 希望能对有同样遭遇的小伙伴有所帮助。只对结果感兴趣的，忽略过程，直接跳过看结果吧~ keyword 如果是 (…"}, {"id": "6844904193841430536", "title": "面试遇到html常见兼容性问题，解决思路！", "desc": "解决方案：做成PNG8，也可以引用一段脚本处理. 2. 浏览器默认的margin和padding不同 解决方案：加一个全局的 *{margin:0;padding:0;} 来统一。 3. IE6双边距bug：在IE6下，如果对元素设置了浮动，同时又设置了margin-left或…"}, {"id": "6995166796449841160", "title": "【JavaWeb基础 · 表单标签(二)】", "desc": "“这是我参与8月更文挑战的第11天，活动详情查看： 8月更文挑战” 这期我们来学习选择框标签和文本域标签。 选择框标签 <select> 元素用来创建下拉列表。 <select> 元素中的 <opti"}, {"id": "6930958539263311880", "title": "前端二向箔03-HTML元数据和链接", "desc": "html元数据即在head标签中的部分, 主要是描述了网页的一些重要的信息和媒体链接. 大多情况下是提供给浏览器爬虫和机器阅读的. 链接作为网页的互联的基石, 在head中链接有link和script两种形式. 本文归纳常见的元数据和链接的重要知识. head本身没有意义, 只…"}, {"id": "6844903600506798093", "title": "HTML5触摸事件实现移动端简易进度条", "desc": "HTML中新添加了许多新的事件，但由于兼容性的问题,许多事件都没有广泛的应用，接下来为大家介绍一些好用的移动端触摸事件: touchstart、touchmove、touchend。 touchstart： 当手指触摸屏幕时候触发，即使已经有一个手指放在屏幕上也会触发。 tou…"}, {"id": "6978313058170961933", "title": "HTML 基础知识", "desc": "本文介绍 HTML 的基础知识，如概念、版本区别、常用标签的含义和使用、表单控件的使用以及 HTML 元素的分类"}, {"id": "6844903624330461198", "title": "页面渲染机制", "desc": "将HTML构建成一个DOM树（DOM = Document Object Model 文档对象模型），DOM 树的构建过程是一个深度遍历过程：当前节点的所有子节点都构建好后才会去构建当前节点的下一个兄弟节点。 根据DOM树和CSSOM来构造 Rendering Tree（渲染树…"}, {"id": "6844903710850547725", "title": "react-router v4 路由规则解析", "desc": "react-router升级到4之后，跟前面版本比有了很大的差别。 例如包的拆分，动态路由等详细的差别就不说了，各位大神的总结也很到位，详细可以点击看看，All About React Router 4这篇文章。 此外还有个差别是路由规则的变化。 一直有着上个版本的习惯，所以稍…"}, {"id": "6844904152393318413", "title": "从零开始实现一个消息提示框", "desc": "消息提示框在实际应用场景当中比较常见，最常用的就是element ui的消息提示框，我们通常都是直接使用它们,但是我们有没有尝试过去探究其实现原理，并自己动手实现呢？为了提升我们的个人能力和竞争力，我们可以尝试来实现这样一个消息提示框。 这样一来，准备工作就完成了，接下来就是我…"}, {"id": "6844903878857588750", "title": "HTML5新增的标签与属性", "desc": "<figcaption>标记定义 figure 元素的标题。 <source> 标是为媒介元素定义媒介资源，不可以在<source>开始标签里添加，而且<source> 标签是单标签，没有结束标签。 text, search, url, telephone, email, pa…"}, {"id": "6844904125918871560", "title": "面试官：前端该如何选择图片的格式", "desc": "想当初，这个问题在面试实习的时候被问到。问题看着简单，但是想要回答好还需要下一番功夫来了解的。 如果不想看文章的话直接翻到文末去看结论即可。 so，在开始之前我们先补充一下图片的一些基本知识。 首先，我们需要来了解图片的类型。 所谓位图就是用像素点拼起来的图也叫点阵图，平时我们…"}, {"id": "6985540445874946078", "title": "《图解HTML》第四节 HTML标签分类与实践", "desc": "通过上一节的了解，我们知道html标签是构建网页结构的关键，而且它的种类繁多。为了更好的了解和使用它们，本章节将在功能上对它们进行分类，了解这些标签的功能。如果有分类不太精准的地方，还望不吝指正。 当"}, {"id": "6988462549666627598", "title": "如何给框架中的button按钮设置背景色", "desc": "1.去掉背景颜色 2.设置背景颜色 ### 1.去掉背景颜色 ```js <ele-button type=\"primary\" style=\"background-color:unset;borde"}, {"id": "6844903950907342861", "title": "关于\"异步加载CSS\"的相关思考，以及最简单的实现方式😅", "desc": "我们想提高网页性能的最有影响力的措施之一，就是以不延迟网页渲染的方式加载CSS。 在默认情况下，浏览器在加载CSS时将终止页面的样式呈现（同步加载），也就是加载CSS会阻塞DOM树的渲染（但并不会阻塞DOM树的构建），可以简单理解为：当在加载CSS的同时，也在构建DOM树，只是…"}, {"id": "6898714694941409293", "title": "如何将HTML表格转换成精美的PDF，几种方案比较", "desc": "包含表格、图表和图形的Web应用程序通常包含将数据导出为PDF的选项。你有没有想过，作为一个用户，当你点击那个按钮时，幕后发生了什么？ 作为开发人员，如何让PDF输出看起来更专业？大多数免费的在线PDF导出器实际上只是将HTML内容转换为PDF，而不进行任何额外的格式化，这会使…"}, {"id": "6936943306089693221", "title": "译|使HTML 5数字输入仅接受整数", "desc": "这两年我看到很多关于这方面的文章和帖子，这的确是一个非常方便的东西。但是，太多的实现还是有漏洞，残缺不全的实现，等等。 整体概念是合理的：使用HTML 5属性来限制可以发送到服务器的内容，然后使用Javascript增强它，以限制用户可以在第一个地方输入的内容。 所以让我们来看…"}, {"id": "6932769062909018125", "title": "文档模式：标准模式、混杂模式", "desc": "由于历史的原因，不同浏览器对页面的渲染是不同的，甚至同一浏览器的不同版本也是不同的。然后这时候就出现了一个至关重要的标准规范：W3C标准。 在W3C标准出台之后，随着W3C的标准越来越重要，众多的浏览器开始依照W3C标准进行文档解析，不同浏览器对页面的渲染有了统一的标准，这时的…"}, {"id": "6844903673357713422", "title": "webpack多页面入口生产项目开发配置", "desc": "这不是一个纯粹的学习帖子，最开始为了生产项目考虑的。公司有个新的、小的活动项目。以此为假想，所以我希望学习一些新的技术应用在上面；这个新的项目是作为旧项目的一个子系统存在的，所以又必须在一定程度上保持一致。 而这个旧项目的原有使用构建工具fis的版本比较老旧，不敢升级，怕出什么…"}, {"id": "6844903830291742728", "title": "在 <link> 标签里使用 preload, prefetch, preconnect 等属性提升页面加载体验", "desc": "There’re multiple ways to improve web performance (see Web Performance 101 for a full overview). One of those ways is to preload content yo…"}, {"id": "6844903633708908551", "title": "浏览器缓存和webpack缓存配置", "desc": "协商缓存：也称304缓存，向服务器发送请求，由服务器判断请求文件是否发生改变。如果未发生改变，则返回304状态码，通知客户端直接使用本地缓存；如果发生改变，则直接返回请求文件。 强缓存是最彻底的缓存，无需向服务器发送请求，通常用于css、js、图片等静态资源。浏览器发送请求后会…"}, {"id": "6844903608215945229", "title": "精读《现代 js 框架存在的根本原因》", "desc": "组件化。 拥有强大的开源社区。 拥有大量第三方库解决大部分问题。 拥有大量现成的第三方组件。 拥有浏览器拓展/工具帮助快速 debug。 友好的支持单页应用。 不，这些都不是根本原因，最多算前端框架的营销手段。作者给出的最根本原因是： 解决 UI 与状态同步的难题。 作者假设了…"}, {"id": "6844904041068101645", "title": "[html]咦🤔, H5还有这些操作呢", "desc": "返回一个字符串,表示浏览器所在的系统平台类型. open 是用指定的名称将指定的资源加载到浏览器上下文（窗口 window ，内嵌框架 iframe 或者标签 tab ）。如果没有指定名称，则一个新的窗口会被打开并且指定的资源会被加载进这个窗口的浏览器上下文中。 close 该…"}, {"id": "6844903825963221006", "title": "前端面试：H5 如何清除Input输入框多次输入的历史记录？", "desc": "autocomplete 属性规定输入字段是否应该启用自动完成功能。 自动完成允许浏览器预测对字段的输入。当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项。 autocomplete 属性是 HTML5 中的新属性。"}, {"id": "6844903618559098894", "title": "作为一名前端开发工程师，你必须掌握的WEB模板引擎：Handlebars", "desc": "关于为什么要使用模板引擎，按照我常对学生说的一句话就是：不用重复造轮子.。 简单来说，模板最本质的作用是“变静为动”，一切利于这方面的都是优势，不利于的都是劣势。 1. 可维护性（后期改起来方便）； 2. 可扩展性（想要增加功能，增加需求方便）； 从以上四点来看，前端模板引擎体…"}, {"id": "6844903503496740871", "title": "React系列---React（一）初识React", "desc": "React系列---React（一）初识React"}, {"id": "6844904186925023239", "title": "5分钟上手Egg.js+nunjucks模板引擎快速开发SEO友好的官网项目", "desc": "在日常的项目中，有时候还是不可避免的会维护一些jq官网项目等。面对此类需求，很多还是以前的老套路，前端写页面交给后端去套数据。很烦有木有～～而改动之后还得交给后端再次修改，时间和沟通都是个麻烦。同时开发中，写静态页面也很麻烦，不能复用，不能使用现在的工具，心累有木有～～当然了，…"}, {"id": "6844903784464777224", "title": "序列帧&一镜到底H5开发实现分析", "desc": "我们遇到的一类H5，其中包括“强动画”效果，UI设计提供的是一系列序列帧的素材时，前端将序列帧素材还原成动画进行展示的H5. 采用gif格式的图片来展示序列帧动画，会存在图片文件大，移动端失真以及安卓端卡顿，以及循环播放情况下有时只会播放一次的情况。只能作为零碎的点缀素材时使用…"}, {"id": "6844903582274174984", "title": "快速理解web语义化", "desc": "本文简单快速描述了什么是web语义化、语义化的特点以及常用的几个html标签和CSS语义化的命名方式。希望更多的人关注到web语义化并在实践中有意识的去使用它。"}, {"id": "6994254280475705352", "title": "前端入门！不容错过！HTML基本标签知识大盘点", "desc": "HTML基本标签，即超文本标记语言（HyperText Markup Language）。 标签是由小于号(<)+中间字符+大于号(>)组成的代码（英文字符）组成的，主要是用来标记内容模块的，也可以用"}, {"id": "6995175981841383438", "title": "了解 HTML", "desc": "这是我参与8月更文挑战的第11天，活动详情查看：8月更文挑战 HTML 超文本标记语言（英语： HyperText Markup Language，简称：HTML ）是一种用于创建网页的标准标记语言。"}, {"id": "6844903511210065927", "title": "JavaScript核心参考", "desc": "对于那些希望学习JavaScript和已经开始使用JavaScript的程序员来说，如果想让自己对JavaScript语言和Web平台的理解和掌握再上一个台阶，可以通过阅读这篇文章，会让你的JavaScript编程基本更加夯实。"}, {"id": "6985106235729117197", "title": "a标签锚点，平滑滚动，innerHtml，v-html", "desc": "实现功能 单页中点击a标签实现单页中的定位，并平滑滚动到目标点。 试验innerhtml与v-html将包含html的模板字符串转化为真实html，依旧达到以上功能 a标签锚点，平滑滚动 这里使用id"}, {"id": "6989817998148108301", "title": "Col Colgroup 标签属性及其用法", "desc": "col   col 用于定义表格中的列。   col为表格内单标签元素，只能在table元素或者colgroup元素中使用。   其属性值主要包括如下几种，均能通过CSS属性实现。 span：指定co"}, {"id": "6993370351560294414", "title": "html中script脚本的存放位置", "desc": "项目开发久了，尤其是长期使用开发工具的快捷键实现html默认文档，突然使用txt创建html文档，竟对标签的存放位置产生了不确定性。 下面是最通用的html文档标签存放模板: script标签位置 h"}, {"id": "6844903944565555213", "title": "你知道却不常用的HTML标签（一）", "desc": "作为了一个前端 帅小伙/靓姑娘，开发的时候总是会和 HTML 标签打交道。一来二往的就熟悉的开始使用 div + css 的布局了，今天介绍一篇很早以前就出现，但是没有太多人（我认识的人使用的不是很多）使用的HTML的其它标签，赶快来认识它们吧。 HTML <pre> 元素表示…"}, {"id": "6844903507405848589", "title": "打造丝般顺滑的 H5 翻页库", "desc": "打造丝般顺滑的 H5 翻页库"}, {"id": "6988806487523098632", "title": "纯 html + css 实现彩虹蝴蝶", "desc": "代码 解释 mask 可以看作一个遮罩，作用在其他元素上时，黑色的部分会被隐藏，白色的部分与元素原来的背景合成新的背景。 用渐变的背景填充 rect，然后使用一个背景为黑色，主体部分为白色的蝴蝶图像作"}, {"id": "6989516578865823752", "title": "HTML的元素", "desc": "一、什么是元素 二、HTML元素语法 HTML标签以开始标签起始，以结束标签终止 元素内容是开始标签与结束标签之前的内容 某些HTML元素具有空内容（empty content）。 如 空元素在开始标"}, {"id": "6999556085845590029", "title": "浏览器 缓存区别 HTML&CSS", "desc": "浏览器内核和JS引擎 缓存区别 盒模型 常用布局 H5新特性 C3动画 垂直水平居中 SVG"}, {"id": "6995118561098203143", "title": "七夕福利：程序员如何通过H5绘制手掌地图表白", "desc": "今年的七夕节马上就要来了！给女友送花送巧克力是不是太普通了呢？程序员给人的刻板印象是不懂浪漫的钢铁直男，扭转的时刻到了！用H5技术给自己的女友或心仪的人一个惊喜怎么样？手掌地图表白视频你值得拥有。"}, {"id": "6987677915953496101", "title": "前端 HTML5 知识总结 渡一学习记录 剩余知识", "desc": "33.audio与video播放器 以上：太丑，不同浏览器不统一 34.视频播放器 加载不出来https://blog.csdn.net/qq_40340478/article/details/108"}, {"id": "6844903513651150856", "title": "详解前端响应式布局、响应式图片，与自制栅格系统", "desc": "什么是响应式？同一个页面在不同屏幕尺寸下有不同的布局。 传统的开发方式是PC端开发一套，手机端再开发一套，而使用响应式布局只要开发一套就好了，缺点是CSS比较重。 栅格系统用于处理页面多终端适配的问题。栅格的响应式能力，得益于CSS3媒体查询（Media Queries）的强力…"}, {"id": "6918011549231775751", "title": "必学必会-音频和视频 | 七日打卡", "desc": "哪吒人生信条：如果你所学的东西 处于喜欢 才会有强大的动力支撑。 希望可以通过这篇文章，能够给你得到帮助。(感谢一键三连) 学习深入理解HTML5的audio和video。 编解码器可以理解为一些算法代码，用于处理视频，音频或者其元数据的编码格式。对音频或视频文件进行编码，可使…"}, {"id": "6982003657705259045", "title": "H5 视频项目开发技巧及注意事项", "desc": "视频的比特率越大，单位时间需要加载的数据里越多，过大的比特率会使视频开始播放的等待时间变长，在弱网络下也会出现卡顿的现象；但是过低的比特率又会造成视频画面质量过低，影响视觉"}, {"id": "6992410628321181704", "title": "【动画消消乐】HTML+CSS 自定义加载动画 053", "desc": "这是我参与8月更文挑战的第4天，活动详情查看：8月更文挑战 前言 效果展示 Demo代码 HTML CSS 原理详解 步骤1 使用span标签，设置 宽度、高度均为96px 相对定位 步骤2 利用sp"}, {"id": "6993914871179903012", "title": "HTML重点标签", "desc": "HTML重点标签 a标签 1.常见属性 href (常用) target（常用） download rel=noopener href取值： 1.网址： 2.路径： /a/b/c.html，a前面的/"}, {"id": "6993145872951279623", "title": "H5+APP移动端开发的一些碎片整理", "desc": "1.移动端H5+获取手机状态栏高度： 移动端页面底部使用fiexd固定时，会出现底部显示不全的问题 ；一般也是因为状态栏高度导致的，所以底部position:fixed的bottom设置为手机状态栏高"}, {"id": "6844903750239272973", "title": "那些你不知道的meta标签", "desc": "http-equiv是meta标签内容中非常重要的一环，从字面上看是跟HTTP相关，事实上其该属性的内容值都是特定HTTP的头，该属性与服务器和浏览器进行交互，让网站内容显示的准确和及时。 该属性中content-type、content-language和set-cookie…"}, {"id": "6844903548904275976", "title": "每个前端工程师都应该了解的HTML5.2", "desc": "一般在W3C当中.对版本的发布会经过四个阶段分别是:工作草案（WD）、备选推荐标准（CR）、提案推荐标准（PR）和最终的W3C正式推荐标准（REC）.而当一个规范到达REC阶段时，就意味着它已经得到了W3C成员的正式认可，并推荐它由用户代理部署，前端工程师进行使用。 现在,就在…"}, {"id": "6988386005128577038", "title": "左侧宽度固定，右侧自适应的两栏布局", "desc": "HTML结构和基本样式 HTML的结构为最外层一个div，内层两个div分别代表左右两个div。 给最外层div加上边框。左侧div宽度固定为200px。 之后的所有样式都在这个样式的基础上进行修改。"}, {"id": "6982005110746382349", "title": "vue-next 从模板到看到HTML发生了什么", "desc": "最近倒是在写vue-next的源码解析，内容倒是挺多的，目前更新到了transform阶段，后面还会有generate（生成block tree 用于渲染）、生成VNode、渲染等内容仍未更新。大概内"}, {"id": "6999269779244744711", "title": "HTML 列表和语义化", "desc": "列表是网页中最常用的一种数据排列方式，在 HTML 中，列表分为三种：有序列表、无序列表和定义列表。"}, {"id": "6844903695143043086", "title": "记一次 VUE 项目优化实践", "desc": "爱康体检宝 PC（https://www.tijianbao.com/) 算是一个“老”项目，为什么说“老”呢，因为在前端技术日新月异，每天都有新知识、新概念，甚至新框架的今天，它还是基于vue-cli 2.x、webpack 3.x构建，显然有些老了。其次，在早期开始这个项目…"}, {"id": "6844903709218963469", "title": "H5+CSS3实现说话气泡点击动画", "desc": "还是要先把需求拿出来。 整体还是比较简单的，所以这里做一下记录。"}, {"id": "6899260378383908878", "title": "Web 标准：前端的原力", "desc": "Web 标准是构成 Web 基础、运行和发展的一系列标准的总称。如果把前端开发人员比喻成 “孙悟空”，那么 Web 标准就是 “如来佛的手掌”。可以毫不夸张地说：对前端从业者来说，Web 标准意味着能力，代表着舞台，象征着空间，指引着发展。 Web 标准并不是由一家标准组织制定…"}, {"id": "6987356895228985381", "title": "HTML常用标签", "desc": "a标签的作用以及属性 ，img标签的作用以及属性，table标签的作用以及属性，form标签的作用以及属性"}, {"id": "6844903558345654285", "title": "如何实现兼容 PC 和微信 H5 的全屏播放小视频", "desc": "PC 端只有声音没有图像。这是因为 PC 端不会打开专门的播放器，只会在 DOM 节点处直接播放，此时 DOM 节点未设置显示区域 点击封面时增加一个 loading 效果，PC 环境在视频播放时取消；微信环境则在视频暂停时取消。(在 iOS 中 play() 方法会触发播放事…"}, {"id": "6844903711714574349", "title": "H5 移动调试全攻略", "desc": "随着移动设备的高速发展，H5 开发也成为了 F2E 不可或缺的能力。而移动开发的重中之重就是掌握调试技巧，定 Bug于无形。"}, {"id": "6997026969892159501", "title": "一起了解一下h5新增的语义元素", "desc": "这是我参与8月更文挑战的第15天，活动详情查看：8月更文挑战 HTML5是什么？ 一般广义而言的HTML5，则包含了HTML、CSS 和JavaScript三个部分，不单单只是HTML部分而已，CSS"}, {"id": "6985087489547436045", "title": "前端通过 a 标签下载本地文件、跨域文件", "desc": "前端通过a标签下载本地文件、跨域文件分析。 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 跨域下载实现。"}, {"id": "6844903582924275719", "title": "自动化生成 H5 骨架页面", "desc": "骨架页面（Skeleton Page）指的是当你打开一个 H5 页面，在页面解析和数据加载之前，首先给用户展示页面的大概样式。在骨架页面中，图片、文字、图标都将通过灰色矩形块来展示，在真实页面展示之前，用户能够感知到即将加载页面的基本 CSS 样式和页面布局。饿了么移动 web…"}, {"id": "6844903721097232392", "title": "【译文】CSS 与网络性能", "desc": "承蒙抬爱，我被称为 CSS 魔术师已经十多年了，但最近在博客上，CSS 相关的文章却不多。那就结合 CSS 与性能这两大主题，为大家带来一篇文章吧。 CSS 是页面渲染的关键因素之一，（当页面存在外链 CSS 时，）浏览器会等待全部的 CSS 下载及解析完成后再渲染页面。关键路…"}, {"id": "6944286031990489101", "title": "一个前端失败者的自我剖析与反思", "desc": "最近面试的检讨与反思，希望各位能从我的经历中获得点什么。在一家公司待三年了，最近找工作两个星期了，小公司还好，大公司屡屡碰壁，今天在面试官问我还有什么问题要问他的时候。我说，我比起哪些优秀者来说，缺了"}, {"id": "6844903777208631310", "title": "[译] 设计一个页面原则上应该指的是编写 HTML 和 CSS", "desc": "在 90 年代后期的互联网泡沫期间，我做了一堆 Photoshop 切图工作。如你所知，设计师将 PSD 文件切片后交给切图仔拼接到 HTML 上，这很悲惨。 这些 mock 式的设计总是专注于像素的完美契合，但这却逐渐歪曲和偏离了 web 的本质。间隔像素，还记得吗？我们制作…"}, {"id": "6844903704378900493", "title": "用python3教你任意Html主内容提取", "desc": "上篇文章中的对话机器人，其一问一答还是挺流畅的，那么我们不禁思考，为什么“机器人”能根据我们的问句，回答出符合逻辑、语义的答案呢？其实这一切的一切都是源于自然语言训练的基础——语料。 本文将和大家分享一些从互联网上爬取语料的经验。 requests是一个Python第三方库，处…"}, {"id": "6844903854148943885", "title": "iframe特性全解读", "desc": "在平时的开发中，或多或少会用到iframe，大部分时候我们只需要简单的使用iframe标签，设置个宽高即可，很少回去深究iframe的别的特性。比如这种用法： 但直到产品经理要求说，iframe嵌入的页面可不可以让主页面的url地址发生变化呀？好吧，一下子懵圈了，我得去查查资料…"}, {"id": "6844903529098772494", "title": "CSS常用Mixin封装", "desc": "个人在做项目的过程中总结归纳的一些常用Mixin，现在分享出来供大家学习。 基于Less编写。但是CSS预处理器都是相通的，你可以很轻易的修改成Sass、Stylus"}, {"id": "6844903629292322830", "title": "HTML5.2新标签 —— dialog", "desc": "主要内容： 1.HTML5.2的一个新标签：原生html弹窗标签dialog 2.基本用法：两个属性、三个方法、两个事件 3.一个css伪元素，用于设置遮罩样式 4.三个例子简单明了，由简到繁，由不兼容到兼容"}, {"id": "6844903670568452110", "title": "Spring Boot 最佳实践（四）模板引擎Thymeleaf集成", "desc": "Thymeleaf是一种Java XML / XHTML / HTML5模板引擎，可以在Web和非Web环境中使用。它更适合在基于MVC的Web应用程序的视图层提供XHTML / HTML5，但即使在脱机环境中，它也可以处理任何XML文件。它提供了完整的Spring Frame…"}, {"id": "6844903732421853191", "title": "合适的meta，你选对了吗?", "desc": "meta标签用来描述一个HTML网页文档的属性，例如作者、日期和时间、网页描述、关键词、页面刷新等。它提供的信息虽然用户不可见，但却是文档的最基本的元数据。 对于网页来说，meta data就是通过一些字段信息来描述一下当前网页，以便浏览器和搜索引擎在访问到此网页的时候，可以通…"}, {"id": "6967042131894468644", "title": "自学前端——html第二天", "desc": "脑图如下 1.表格 1.1表格标签 1.<table>：表格标签；双标签。 2.<tr>：行标签； 双标签。 3.<td>：单元格标签；双标签。 总结：表格由 <table> 标签来定义。每个表格均有"}, {"id": "6844903701069430792", "title": "【实战】通过 JS 将 HTML 导出为 PDF 文档", "desc": "某老人院信息管理系统项目，甲方要求将财务模块的各种报表导出为PDF文档，方便打印。 目标很明确，将 HTML 内容导出为PDF。 时间有限，先找轮子，一通谷歌后选定了前端工具 jspdf。具体使用方式比较简单，参考下列两个链接： 导出 pdf 的函数我参考了这条github链接…"}, {"id": "6844904090409893901", "title": "网页外链用了 target=\"_blank\"，结果悲剧了", "desc": "今天给大家分享一个 Web 知识点。如果你有过一段时间的 Web 开发经验，可能已经知道了。不过对于刚接触的新手来说，还是有必要了解一下的。 我们知道，网页里的a标签默认在当前窗口跳转链接地址，如果需要在新窗口打开，需要给 a 标签添加一个target=\"_blank\"属性。 …"}, {"id": "6954011988380876831", "title": "娓娓道来为什么移动端会有 1px 问题以及解决方案（附demo）", "desc": "工作中接触到了移动端的开发，所以最近学习一下移动端相关内容。 为什么会有1px问题 在开发移动端项目时，针对屏幕分辨率为 375*667 的设备，UI设计师给的设计稿是 750*1334 像素的，对于"}, {"id": "6987634668891963400", "title": "HTML5+CSS3学习总结(完结)", "desc": "一、HTML5 1）什么是HTML5 1. HTML5简介 万维网的核心语言、标准通用标记语言下的一个应用超文本标记语言(HTML)的第五次重大修改，作为HTML语言，具有新的元素、属性和行为。 2."}, {"id": "6955511373560283150", "title": "你不知道的三列布局之圣杯布局和双飞翼布局", "desc": "前言 三列布局相信大家都见过，像上面淘宝、豆瓣等很多平台界面都有使用。他们用到的是圣杯布局和双飞翼布局。圣杯布局和双飞翼布局是一些大厂可能问的问题，圣杯布局与双飞翼布局针对的都是三列左右栏固定中间栏边"}, {"id": "6988467705909248014", "title": "HTML文本及图像和锚基础", "desc": "一、HTML文本结构 添加段落：要在网页中开始一个新的段落，使用 p元素。（通过 css 可以为段落添加样式，包括字体、字号、颜色等。以及控制内行间距，段落文本对齐方式等。） 指定细则：small元素"}, {"id": "6964644611822190622", "title": "一次性搞懂行内元素和块级元素的区别", "desc": "HTML (超文本标记语言) 元素当中大多数都是行内元素或块级元素。接下来就看看这两种有什么分别。 一、定义 什么是行内元素？什么是块级元素 这里是MDN的定义， 行内元素的定义 块级元素的定义 根据"}, {"id": "7000639589765349412", "title": "测试开发之前端篇-Web前端简介", "desc": "给大家简要介绍下，网页在浏览器中展现和互动时，主要涉及到的以下几个方面的技术。希望此系列文章，对大家工作中的Web测试用例设计、自动化测试，以及网站问题定位有所帮助。"}, {"id": "6844903670878830600", "title": "前端要凉？微软开源Sketch2Code，草图秒变代码", "desc": "用户界面设计过程涉及大量创造性的迭代工作。这个过程通常从在白板或白纸上画草图开始，设计师和工程师分享他们的想法，尽力表达出潜在的客户场景或工作流程。当他们在某个设计上达成一致之后，通过照片的形式将草图拍下来，然后手动将草图翻译成 HTML 代码。翻译过程需要耗费很多时间和精力，…"}, {"id": "6844903623583891469", "title": "再谈 load 与 DOMContentLoaded", "desc": "window 的 onload 事件对于前端童鞋来说肯定是熟的不能再熟了，相信大家在刚入门时，见的最多的可能就是 load 事件了。load 事件接触多了，大家就会接触到它的闺蜜 DOMContentLoaded 事件，网上有很多介绍这两个事件的文章，对它们的解释无外乎以下两种…"}, {"id": "6989458455912284167", "title": "HTML5(一)——新增元素和属性", "desc": "自 H5 诞生以来，在 html4.0 中有些元素已被 H5 废弃，但是在 H5 中添加了很多新元素以及功能，今天我们学习 H5 中新增的元素和属性都有哪些？ 新增语义结构标签 标签 描述 artic"}, {"id": "6844903887179137038", "title": "H5 唤醒 APP 实现以及注意点", "desc": "作为前端开发人员经常会有这样的需求，如果某个用户安装了自己的APP就打开APP首页或则指定页面，如果没有安装APP就跳转到相应下载页面。这样的一个需求也是拉新和裂变必不可少的环节，所以是需要我们去解决的。今天来看看到底如何实现呢？ 目前实现该功能的有两种比较好的方式：URL S…"}, {"id": "6980993786377666573", "title": "小程序开发小经验——如何对活动弹窗中的透明元素进行定位", "desc": "小程序开发——如何对活动弹窗中的透明元素进行定位 相信每个前端开发人员都或多或少的写过弹出层，这里分享一下我在工作实践中对弹出层中透明元素定位的1个方案"}, {"id": "6844903607041523725", "title": "手机web前端调试页面的几种方式", "desc": "PC端web页面调试比较容易，这里主要说几种移动端调试的方法，从简单到复杂、从模拟调试到远程调试，大概分为几部分： 1、Chrome DevTools（谷歌浏览器）的模拟手机调试 2、weinre(web inspector remote)远程调试工具 3、微信的“web开发者…"}, {"id": "6844903610019512328", "title": "浅谈 2018 移动端跨平台开发方案", "desc": "“一次编写，到处运行”，这是 SUN 公司用来展示 Java 语言跨平台特性的 slogan，它意味着 Java 可以在任何平台上进行开发，编译后就可以在任何安装有 Java 虚拟机（JVM）的设备上运行。 最近这两年，在移动端各种跨平台的开发方案如雨后春笋般涌现，一方面是因为…"}, {"id": "6844903671742857229", "title": "前端跨域方法论", "desc": "本着学习和总结的态度写的技术输出，文中有任何错误和问题，请大家指出。更多的技术输出可以查看我的 github博客。 整理了一些前端的学习资源，希望能够帮助到有需要的人，地址： 学习资源汇总。 跨域指的是协议（protocol ），域名（host），端口号（post）都不相同的资…"}, {"id": "6844903961812549646", "title": "图解直到今天也没什么人知道的原生dialog标签😑", "desc": "在html5中，新增了很多语义化的标签。如footer、header之类的，今天的主角是dialog标签😂 顾名思义，就是用来定义对话框的。目前只有Chrome和Safari支持该标签，所以用的不多，不过确实挺好用的🤞 别担心，有官方的polyfill。 1. 基础的用法 …"}, {"id": "6844903505354817544", "title": "HTML5 桌面通知：Notification API", "desc": "Notification API 是 HTML5 新增的桌面通知 API，用于向用户显示通知信息。该通知是脱离浏览器的，即使用户没有停留在当前标签页，甚至最小化了浏览器，该通知信息也一样会置顶显示出来。 想要向用户显示通知消息，需要获取用户权限，而相同的域名只需要获取一次权限。…"}, {"id": "6844903828735655950", "title": "前端适配：移动端/web端适配方案", "desc": "这样整个网页在设备内显示时的页面宽度就会等于设备逻辑像素大小，也就是device-width。 在scale为1的情况下，device-width = 设备的物理分辨率/devicePixelRatio 。"}, {"id": "6998360776285093918", "title": "HTML5新特性", "desc": "一、概述 1、概念 狭义：指HTML语言的第五个版本 广义：HTML5本身+CSS3+JavaScript技术的综合 1、HTML5优势 提高可用性和改进用户的友好体验 更好的语义化标签 可以给站点带"}, {"id": "6844903656827912206", "title": "带你走近Vue服务器端渲染（VUE SSR）", "desc": "上篇文章（《服务器端渲染与Nuxt.js》）介绍了服务器端渲染和一些Nuxt.js的概念，现在我们就Vue SSR方面，从基础开始，分低、中、高三个层面，来手写实现下传说中的服务端渲染。 在正式搭建项目之前，我们还是要回顾下vue服务器端渲染的一些特性。 服务器端渲染的 Vue…"}, {"id": "6844903697768529927", "title": "WordPress中实现Markdown编辑的终极解决方案", "desc": "欢迎访问Oldpan博客，分享人工智能有趣消息，持续酝酿深度学习质量文。 总之一句，这个问题必须解决，也有必要解决。 解决方法其实并不难，不要被吓到，我们把所有需要的基础环境都搭好之后，就可以实现很方便快捷地去按照markdown的格式写文章，渲染好，直接将html源码粘贴到我…"}, {"id": "6945659678500061215", "title": "最近对于ipad端开发和移动端开发的一些总结和一些小功能总结分享，foreach不是同步函数", "desc": "废话老规矩，废话部分，也是很久没写博客了。主要是最近都被工作缠身，没什么太多独立学习的内容。一、forEach不是一个纯粹的同步函数年前到年初的一段时间重构一个功能，需要接收话术市场数据结构，然后前端"}, {"id": "6844903538238341134", "title": "Canvas粒子背景效果", "desc": "最近有人问我博客的背景效果怎么实现的，其实就是一个canvas效果，今天抽空写篇博客简单分享下思路"}, {"id": "6901539621537546254", "title": "挑战的第一天", "desc": "第一天我们没有过多的讲什么，只是初步了解网页、搭建网页的开发环境，还有一个小例子来看看网页的基本制作过程，下一课我们来综合做一个小布局。"}, {"id": "6844904099184377870", "title": "HTML meta 标签 看这篇就够了", "desc": "通常情况下，meta 元素被用于规定页面的描述、关键字、文档的作者、最后修改时间等，也会包含 header 头中的一部分信息。 下面就说说 meta 的常用用法。 最常见的一个 meta 标签可能就是<meta charset=\"UTF-8\">了，读者可能会有疑问了，这里的 c…"}, {"id": "6844903776835502093", "title": "一步步教你用HTML5 SVG实现动画效果", "desc": "SVG是一种基于XML的，用于定义缩放矢量图形的标记语言。 它允许你通过在2D平面中确定的一组点来绘制路径、曲线和形状。 此外你还可以通过在这些路径上添加动态属性（例如笔触，颜色，粗细，填充等）来生成动画。 从2017年4月起，CSS Level 3 填充和描边模块开始支持从外…"}, {"id": "6844904113331765261", "title": "监听 Element Resize 的有趣之处", "desc": "监听元素尺寸的变化一直以来，都是一个很常见的需求，但是又不那么容易去实现。因为浏览器都有实现针对窗口变化的监听，而却没有针对元素变化的监听。这个常常发生在一些内部元素大小变化的情况。 比如飞书 Admin 的管理页面，当左侧侧边栏收起或者展开的时候，右侧的宽度会发生变化，而浏览…"}, {"id": "6844903854690009102", "title": "preload 让加载和解析解耦", "desc": "preload大白话的意思是，”嗨，浏览器！这个资源在这个页面后面会用到，现在先加载它吧。“ 资源的提前加载。<link rel=\"preload\" href=\"late_discovered_thing.js\" as=\"script\"> 字体的提前加载。<link rel=\"…"}, {"id": "6977645175082319886", "title": "XML语言数据读写理解8", "desc": "现在我们来看一个具体的实例： 考虑我们的工程里有各种各样的xml文件，上面那个xml只是其中一个。我们应该怎样去设计一个公共程序接口，然后再在它的基础上实现我们上面那个文件所需要的功能呢？ 首先，我们"}, {"id": "6933506549935505416", "title": "前端二向箔05-HTML表格表单和ARIA", "desc": "本篇博客大致回忆下表单表格的特点, 用法和注意事项. 还有重点复盘下ARIA系统的概念. 你要是看了高赞的分析, 估计对table的弊端有大致的了解了. 个人认为web的发展并没有改变多少table的本质. table本意就是拿来渲染表格数据的, 按道理来说没什么问题, 各司其…"}, {"id": "6860391519644303367", "title": "YprogressBar,html5进度条样式,js进度条插件！", "desc": "简介YprogressBar是一款基于HTML5的进度条插件。YprogressBar是一款轻量级进度条插件，使用方便，资源占用少，模仿好压的解压界面，带有数字显示，同时支持在描述中增加参数，以动态显"}, {"id": "6844903550493917191", "title": "深入CSS优先级", "desc": "现在越来越多的CSS框架，比如Bootstrap，flat UI等等。当我们使用这些UI框架时，由于审美不一样或某些爱好，我们或多或少会去修改一些样式，当然，直接修改源文件是一个方法，但这是一个笨方法，并不推荐。这时，我们就需要自己写一些样式去覆盖，有时你会发现无效或只是一部分…"}, {"id": "6844904071627800583", "title": "【前端】仿 Android TextView 实现完整的文本溢出截断省略效果", "desc": "在未通过的草案中还将支持 <string> 类型的值， fade 以及 fade() 方法，并允许配置两个值用于控制前后溢出内容的行为。但是浏览器基本都未支持，仅火狐支持了 String value 和 双值。详见浏览器兼容性 dir HTML 属性用于决定文本总体的书写方向。…"}, {"id": "6967289667955736606", "title": "HTML5(1)简介+标签", "desc": "简介 html4声明方式 html5声明方式 新增标签 <header></header> <div id=\"header\"></div> <footer></footer> <div id=\"foo"}, {"id": "6992742384308060167", "title": "第 9 题：XHTML 和 HTML 有什么区别？", "desc": "## 主要是体现在代码规范上，XHTML 规范会更加严格 ## XHTML 元素必须被正确地嵌套 - 正确示范 ``` <b><i>This text is bold an"}, {"id": "6844903510937436174", "title": "jQuery核心解读", "desc": "jQuery如此强大和好用，关键得益于以下特性： 丰富强大的语法（CSS选择器），用来查询文档元素 高效的查询方法，用来找到与CSS选择器匹配的文档元素集 一套有用的方法，用来操作选中的元素 强大的函数式编程技巧，用来批量操作元素集，而不是每次只操作单个 简洁的语言用…"}, {"id": "6844903922025365518", "title": "HTML/CSS - 块级非块级 & 替换非替换", "desc": "行内元素起边距作用的只有margin-left、margin-right、padding-left、padding-right，其它属性不会起边距效果。 替换元素浏览器根据元素的标签和属性，来决定元素的具体显示内容。 替换元素一般有内在尺寸，所以具有width和height。 …"}, {"id": "6844903740936306696", "title": "HTML+CSS知识点大杂烩（二）", "desc": "这一次我想讲解一下HTML+CSS的两栏、三栏布局以及垂直居中的实现方式。因为个人所学有限所以可能不会罗列出所有的实现方法，不过我会继续努力查漏补缺。 先写出初始样式和结构。 右固定，左适应同理。 以上这些实现方式，虽然实现了但还不够好。因为main是主要的显示区域，所以我们应…"}, {"id": "6950910023300022280", "title": "记录一次公司官网改版的开发过程（静态页面）", "desc": "技术栈：html + css + jquery + bootstrap主要使用html+css实现静态布局，除此之外，就是jQuery对元素进行增删改，或者对元素属性进行增删改。"}, {"id": "6899046464928874509", "title": "HTML常用标签总结 [建议收藏]", "desc": "1. 标题标签 为了使网页更具有语义化,我们经常会在页面中用到标题标签。HTML提供了6个等级的网页标题 2. 段落和换行标签 在HTML中,一个段落中的文字会从左到右依次排列,直到浏览器窗口的右端,然后才自动换行。如果希望 3. 文本格式化标签 4. &#x3C;div>&#…"}, {"id": "6844904170026172424", "title": "DD每周前端七题详解-第一期", "desc": "你盼世界，我盼望你无bug。Hello 大家好！我是霖呆呆！ 从这周起呆呆每周都会分享七道前端题给大家，系列名称就是「DD每周七题」。 系列的形式主要是：3道JavaScript + 2道HTML + 2道CSS，帮助我们大家一起巩固前端基础。 所有题目也都会整合至 LinDa…"}, {"id": "6956607438904623112", "title": "SVG 咋用？", "desc": "在开发过程中，我们免不了会使用图片等素材来引导用户操作，或优化我们产品的体验。本文讲介绍如何使用 SVG 🥳"}, {"id": "6844903689094692871", "title": "可能是最全面最易懂的解析前端浮动的文章", "desc": "瞬间浮想联翩，一个女神，轻轻地漂浮在水中。开心的拍打着水花，哇靠。。。 我觉得很多人连float是啥意识都不知道，要知道很多特性的原理是和其命名的单词或者字母有密切关联的，不是随便命名的。从名字中可以看到一些当初设计的初衷。 其实我个人理解，浮动造成的最核心的问题就是破坏了文档…"}, {"id": "6901124887847403527", "title": "巧用 currentColor 属性来实现自定义 checkbox 样式", "desc": "在 CSS3 中，有一个常被忽视的颜色属性值，叫做 “currentColor”。 它可以作为属性值作用于元素的 color、background-color、border 等属性中，也可以作用于 SVG 和 Canvas。 currentColor 的语义是表示将颜色设为当前…"}, {"id": "6990534958431338509", "title": "Vue深入学习—指令和生命周期", "desc": "1.Vue是怎么识别 v- 指令的？ 首先将HTML结构解析成属性列表，存入到数组中，接着遍历数组中的每一个节点，获取到不同指令对应的方法。 涉及到一个优先级的问题，v-for 比 v-if优先执行，"}, {"id": "6995744656264790046", "title": "第4章 HTML5多媒体实现网站“家庭影院”", "desc": "带着问题去看书学习啦~ HTML5＋CSS3＋JavaScript Web 前端开发案例教程（慕课版），微信读书中找到的学习Web前端书籍，第4章开始啦，耶(＾－＾)V"}, {"id": "6844903558576341000", "title": "简单聊聊H5的pushState与replaceState", "desc": "HTML5引入了 history.pushState() 和 history.replaceState() 方法，它们分别可以添加和修改历史记录条目。这些方法通常与window.onpopstate 配合使用。 这将使浏览器地址栏显示为 http://mozilla.org/b…"}, {"id": "6994042241845035044", "title": "HTML高频重点", "desc": "这是我参与8月更文挑战的第7天，活动详情查看： 8月更文挑战 1.src和href的区别 src用于替换当前元素，href用于在当前文档和引用资源之间确立联系 src ​ 指向外部资源的位置，指向的内"}, {"id": "6844903702621323278", "title": "Egret白鹭H5开发-围住神经猫", "desc": "简单地说，白鹭引擎就是一套H5游戏开发解决方案，拥有以下产品，其中最核心的就是Egret Engine，其他的都是一些开发辅助工具。关于这些的介绍，还是直接戳上方官网链接去看看吧。 点击屏幕上的白色格子，将神经猫围起来，别让猫跑到上下左右四个边界上，最后猫无路可走就玩家赢了，如…"}, {"id": "6844903663383609352", "title": "H5移动端弹幕动画实现", "desc": "已知20条内容要有弹幕效果，分成三层，速度随机。 所以这里不考虑填写生成的。只是一个展现的效果。"}, {"id": "7001677618235850760", "title": "html再学习(21年8月)", "desc": "我的看法 我对html的学习分为四部分：标签、属性、语义，只要掌握好这些就够了。 head内标签 base标签，有两个属性：href target link标签，主要有三种用法 加载css：<link"}, {"id": "6844903604923400199", "title": " 从HTML5 WebSocket到Socket.io", "desc": "作为新一代的web标准，HTML5为我们提供了很多有用的东西，比如canvas，本地存储（已经分离出去了），多媒体编程接口，当然还有我们的WebSocket。WebSocket是HTML5开始提供的一种浏览器与服务器间进行全双工通讯（full-duplex）的网络技术，可以传输…"}, {"id": "6844903717574017031", "title": "浅聊HTTP缓存 (HTTP Cache)", "desc": "HTTP缓存一直是一个老生常谈的问题，前端在日常发布、部署工作中，常常要面对。 项目会在静态资源（如:css,js）使用chunkHash来处理，因此能保证修改后与旧代码文件名字不会重复。以避免无法更新改动。 在该项目中部署后，进行代码进行一次location.reload，改…"}, {"id": "6844903652289675278", "title": "[贝聊科技]首屏视频的优化过程（补充moov的研究）", "desc": "我司的官网首页——贝聊官网，首屏有一个自动播放的背景视频，一直被诟病视频加载慢、播放卡。刚开始以为是文件太大，或者是网速太慢，但当我去优化它的时候，发现并没有预想的简单。本文记录了优化过程和经验总结，希望能对读者有所帮助。 官网的首页由6屏组成,首屏主要内容是一个自动循环播放的…"}, {"id": "6844904168294088717", "title": "dom元素滚动条滚动控制详解", "desc": "那么接下来我们一边学习一些dom元素滚动相关的知识点，一边实现一个上图的效果和一些其他滚动相关的功能。 scrollTop属性是一个描述容器元素内容的top值与容器元素(viewport)视口顶部top值之间的差值，即容器中内容向上滑动后超出容器视口的部分。可以通过修改此属性控…"}, {"id": "6844903844778868744", "title": "基于 HTML5 Canvas 的交互式地铁线路图", "desc": "前两天在 echarts 上寻找灵感的时候，看到了很多有关地图类似的例子，地图定位等等，但是好像就是没有地铁线路图，就自己花了一些时间捣鼓出来了这个交互式地铁线路图的 Demo，地铁线路上的点是在网上随便下载了一个，这篇文章记录自己的一些收获（毕竟我还是个菜鸟）以及代码的实现，…"}, {"id": "6844903512581603335", "title": "CSS3热身实战--过渡与动画（实现炫酷下拉，手风琴，无缝滚动）", "desc": "在自己的专栏上写了十几篇文章了，都是与js有关的。暂时还没有写过关于css3的文章。css3，给我的感觉就是，不难，但是很难玩转自如。今天，就用css3来实现三个特效，希望这三个特殊能让大家受到启发，利用css3做出更好，更炫的动画效果，并且对比这三个特效和JS特效的对比，希望…"}, {"id": "6844903758778859527", "title": "使用<a>标签时，你可能会忽略的一个安全问题", "desc": "在一个新窗口中打开链接是前端开发中一个很常见的逻辑，它可以将用户引导到一个新的域名。我们可以用target='_blank'来实现这个功能。我敢肯定，每个人都会在他的某个项目中使用过target='_blank，但是我不确定是否每个人都知道这种用法的缺陷。 当一个外部链接使用了…"}, {"id": "6986531145902981157", "title": "「HTML+CSS」--自定义加载动画【041】", "desc": "前言 效果展示 Demo代码 HTML CSS 原理详解 步骤1 使用span标签，设置 宽度、高度均为48px 使用flex布局 其中的元素左右居中 效果图如下 步骤2 使用span::before"}, {"id": "6844903650939109384", "title": "Webpack 4 和单页应用入门", "desc": "可以说是我目前看到最详细的 webpack 4 入门文章。 基本看完这个，基本也算一个合格的初级webpack配置工程师了。"}, {"id": "6844903983052488717", "title": "渲染树的形成原理你真的很懂吗?", "desc": "原因一：该文章系列不管你是前端开发者，还是后端开发者在面试中经常会被问到一个问题 “从浏览器输入url到页面显示经历了哪些？” 一个非常常见的问题，看了该系列绝对能惊到面试官，可能就因为这一道面试题就收了你呢！嘿嘿。 原因二：自己主要是后端方向，该系列文章也是为了学习记录，方便…"}, {"id": "6844903624552759304", "title": "[杂谈]了解一些额外知识，让前端开发锦上添花", "desc": "在前端学习里面，很多人都是注重学习代码（html，css，js）。或者是一些框架，库（jquery，vue，react）,或者是各种工具（webpack，gulp）。在以往的文章里面，或者自己和别人交谈，都有建议过别人多练，不要闷头就写代码，多深入了解当中的原理，学习其中的思想…"}, {"id": "6855448306517344263", "title": "熬夜总结了 “HTML5画布” 的知识点（共10条）", "desc": "html5Canvas的知识点，是程序员开发者必备技能，在实际工作中也常常会涉及到。 Canvas使用的场景有：1，动画；2，H5游戏；3，图表。 使用Canvas画直线，矩形，圆形以及设置它们的样式。 Canvas中的图形变换，渐变，文字和图片。 Canvas的像素获取，阴影…"}, {"id": "6906691409115283463", "title": "H5 必知必会之像素级还原设计稿", "desc": "本文是 “H5 必知必会” 系列第二篇。我们提到过，所谓 “H5” 本来应该是 HTML5 的简称。但是，在中国，“H5”并不是 HTML5 的简称那么简单，它更多地被用于指代内嵌在手机 App 中的网页。无论国外有没有 “H5” 这个说法（应该没有），反正在国内只要说到 Ap…"}, {"id": "6844903687362445326", "title": "微信小程序 bug 集中营", "desc": "2019-08-16 13:41:40 由于这篇文章可能比较久远，文章进行了微调，一些 bug 可能修复，或者其中一些链接坏了，请小伙伴们前往 GitHub 获取最新文章。 总结1: 在页面制作商，需要 3 周工作日（工作 15 天）搞定，前后端对接口另计。实际上，12 个工作…"}, {"id": "6991788985009831944", "title": "移动端h5丶小程序自定义凹陷tabbar中间悬浮按钮思路分享 ", "desc": "最近要开发一个微信小程序，然后看到了别的小程序的凹陷tabbar，自己也想这样做，所以研究了一下，分享实现思路出来"}, {"id": "6844904117605761031", "title": "Web 视频播放的那些事儿", "desc": "对于视频的在线播放，按视频内容的实时性可以分为点播（VOD）和直播（Live Streaming）。现如今在 Web 环境下需要进行视频播放时，通常可以使用 video 标签，通过它将视频播放的各个环节都托管给浏览器。 视频的在线播放，站在视频消费者这一侧来看，主要的技术环节在…"}, {"id": "6862599699334725639", "title": "纯CSS免费让掘金社区拥有暗黑模式切换功能", "desc": "暗黑模式这个概念最早起源于MacOS系统的Mojave，提供浅色主题和深色主题两种皮肤供用户选择，深色主题就是我们常说的暗黑模式。为了眼睛健康，笔者在手机、平板和电脑上都选择了暗黑模式。 随着苹果官方逐渐要求各大系统平台都得适配暗黑模式，所以笔者也探索出一种应该是市面上最低成本…"}, {"id": "7001126417568104485", "title": "HTML中的列表以及对列表样式的处理", "desc": "这是【从头学前端】系列文章的第二十五篇-《HTML中的列表以及对列表样式的处理》 本篇文章我们将来学习HTML中的列表以及CSS中对列表的样式操作，本篇文章涉及的内容如下所示："}, {"id": "6844903671143088136", "title": "rem布局解析", "desc": "移动端的屏幕大小各异,尤其是安卓机,千奇百怪,各种尺寸的机型都有,而且有1倍屏,2倍屏，3倍屏之分，作为精益求精的前端，我们希望找到一种完美适配各种机型的方案。rem是现在主流的移动端自适应布局方案，本文主要介绍了rem布局的原理和通用方案 首先说一下，我们想要达到的自适应效果…"}, {"id": "6999275716445470733", "title": "HTML关于文本的元素以及CSS对字体的处理", "desc": "这是【从头学前端】系列文章的第二十篇-《CSS对字体的处理以及HTML中关于文字的元素》 本篇文章我们将来HTML关于文字元素和CSS中对字体的处理，通过本篇文章可以掌握以下内容："}, {"id": "6995107872090619934", "title": "第 19 题：让一个 div 水平垂直居中有几种方式？", "desc": "<img src=\"https://noxussj.top:3000/19/1.png\"></img> 实现上方效果，下面列举几个常用的方法，个人比较推荐用 flex 布局实现 ## 方式 1（"}, {"id": "6844903550280024071", "title": "合格前端系列第九弹-前端面试那些事", "desc": "选一个你觉得印象最深的项目讲一讲，然后会从项目里面切入到 web 基础（html/css/js），这一块大概会聊 20-30 分钟，所以一定要提前选好一个自己做过的得意的项目，花一点时间捋一捋你觉得项目中出色的点，用到了比较 hack，比较酷炫的方法解决了哪些痛点。 this：…"}, {"id": "6844903795613237261", "title": "HTML5 移动端自适应方案与踩坑", "desc": "最近刚接触前端开发，接手了一个移动端H5项目。着实体会掉了前端的坑之多，和H5移动端的坑之多多。 介绍方案之前，首先还是交代一下项目背景与需求，毕竟一切方案也不能脱离实际需求。 总的来说主流的方案有rem和vh两种。 rem（font size of the root elem…"}, {"id": "6996816152437456932", "title": "HTML meta 标签总结与属性使用", "desc": "<meta> HTML 元素表示其他 HTML 元相关元素无法表示的元数据，例如 <base>、<link>、<script>、<st"}, {"id": "6844903609667158030", "title": "解密Vue SSR", "desc": "最近笔者和小伙伴在研究Vue SSR，但是市面上充斥了太多的从0到1的文章，对大家理解这其中的原理帮助并不是很大，因此，本文将从Vue SSR的构建流程、运行流程、SSR的特点和利弊这几方面对Vue SSR有一个较为详细的介绍。最后还将附上一个笔者实现的去除Vue全家桶的Dem…"}, {"id": "7000015242537205773", "title": "HTML中的超链接(a元素)用法详解", "desc": "这是【从头学前端】系列文章的第二十二篇-《HTML中的超链接》 本篇文章我们将来学习HTML中的链接，通过本篇文章的学习可以掌握的内容如下图所示："}, {"id": "6844903661743636494", "title": "两周撸一个掘金微信小程序", "desc": "这并不是掘金官方小程序（貌似没有搜到掘金 APP 对应的官方小程序），完全为第三方开发者开发，仅用于学习交流，禁止用于其他用途。若要使用官方正版，可访问掘金 官方网站，或下载掘金官方 APP，或访问掘金官方其他途径。 该小程序所有 API 均来自掘金官方 web 网站和官方 A…"}, {"id": "6989446345530867720", "title": "web项目中使用iframe的方式引入腾讯IM即时通信，应用场景为客服、聊天", "desc": "最近公司有项目需要客服聊天功能，我们选择了腾讯的IM，对于前端来说很好控制，前端只需对应传参即可，大多由后端控制。百度了很多都没找到想要的教程，所以自己写下来对于引用IM的实践。 功能： 官方demo"}, {"id": "6844903831973675015", "title": "iframe跨域的几种常用方法", "desc": "随着业务的发展，自然地会有一些公共的业务被抽离成为公共组件共各个项目使用。但是由于各个项目用到的技术栈都有所不同，所以这个公共组件就不能方便地被引用了。为解决这个问题，我们把这个组件写成了单独的页面挂到一个域名下，其他项目采用iframe或者webview的方式去加载这个页面，…"}, {"id": "6844903920716759053", "title": "【译】浏览器如何呈现页面（一）", "desc": "知道浏览器是怎样把网页呈现给你的这个过程之后，就能够帮助你去优化你的网页应用，从而提升速度和性能。 我马上就会阐述这个过程，但是首先，需要回顾一些基本概念。 一个网页浏览器从远程服务器上（或者本地文件）加载文件来显示给你看，允许你进行操作。 浏览器里有一个浏览器引擎。 不同的浏…"}, {"id": "6844904094977490951", "title": "前端浅入门-HTML", "desc": "由于自己菜的也因为想写一写东西，同时也想与大家分享，一起进步，所以准备写一系列关于前端的内容。 前端三大块：HTML（HyperText Markup Language，超文本标记语言）、CSS（Cascading Style Sheets，层叠样式表）、JavaScript。…"}, {"id": "6951802348419317774", "title": "VS Code修改html默认模板代码(Win10)", "desc": "VScode新建html文件后,使用'!+tab'会自动生成一个html模板,通过修改文件内容可以实现修改每次默认生成的html代码段"}, {"id": "6844903607825858568", "title": "浏览器恢复滚动行为~了解一下", "desc": "直入主题。之前做移动端的需求时，经常遇到一种常见，就是: 再从b页面回到a页面，这时候浏览器的滚动条会自动回到我们跳转前的位置，也就是 100px 的位置。 氮素!!! 如果只是说setTimeout大法的话，就没我什么事了。 今天要说的是 history.scrollRest…"}, {"id": "6948430810722598919", "title": "精进之HTML5篇", "desc": "GML： 是第一代置标语言，使文档能明确将标示和内容分开。 GML主要用来解决不同系统中文档格式不同的问题。 SGML（标准通用标记语言）是一个标准，告诉我们怎么去指定文档标记。在 GML 的基础上进行整理，形成了一套非常严谨的文件描述方法。它的组成包括语法定义，DTD(W3C…"}, {"id": "6844903989159411726", "title": "从URL开始，网页如何被渲染", "desc": "从在地址栏输入域名地址开始，到被展示在屏幕上，中间是怎样一个过程。以下对该过程进行一下探讨。 浏览器发送域名给DNS客户端，客户端查找浏览器缓存中有没有请求过这个域名地址（检查本地hosts文件是否有这个网址映射关系），如果有不用再向DNS服务器查询，这个时候拿到的ip地址，会…"}, {"id": "6844903546073137160", "title": "js 简单的推箱子小游戏步骤解析--大家都玩过的", "desc": "推箱子小游戏大家肯定都玩过，之所以写这篇文章，是觉得这个小游戏足够简单好理解，大家看完文章之后，自己也能花上半天功夫敲出一个推箱子小游戏来，如果喜欢的话可以点波赞，或者关注一下，希望本文可以帮到大家。 本文代码已经放在了github上面了,里面也进行了很详细的代码注释，可以co…"}, {"id": "6844903854383841294", "title": "Web技巧(07)", "desc": "在这一期中咱们一起来聊聊HTML5中的表单。说到HTML，可能很多同学会说，HTML5有什么好聊的，不就是一些HTML的标签吗？事实上并非如此，就拿HTML中的表单中的input元素为例吧，input元素及其相关属性和类型的支持情况都会因为浏览器的不同而存在较大的差异。甚至在支…"}, {"id": "6844903559255834637", "title": "小白记Canvas实现的一个小玩意 - 你的名字头像生成", "desc": "第一次写文章，如果有不对的地方请大家帮忙指出来."}, {"id": "6844903840400015368", "title": "console小结", "desc": "今天突发奇想，准备总结下console的各个函数。以前都是只用一个console.log(),查了一下发现有好多，就记下来，方便以后查阅。 在控制台中显示指定JavaScript对象的属性，并通过类似文件树样式的交互列表显示。 注：该方法在使用时不会将输出的时间返回到js,它只…"}, {"id": "6940892794504347684", "title": "关于canvas绘制模糊问题", "desc": "首先，需要理解canvas的展示机制。 我绘制了一张375px的canvas，iphone6的宽度也是375px，ok，canvas铺满了整个屏幕。 如果遇到了屏幕宽度400px的手机，那么图片会 拉伸，canvas也会拉伸，拉伸则必然会模糊。 那么iphone6确实是375p…"}, {"id": "6861024986958675982", "title": "一篇文章教会你使用HTML打造一款颜色配对游戏", "desc": "【一、项目背景】createjs是一个基于canvas的制作H5游戏、动画、交互的库。包括EaselJs、TweenJs、SoundJs、PreloadJs四个部分。它基于容器进行展示，其中根容器是s"}, {"id": "6899612443858468877", "title": "HTML标签", "desc": "http-server . -c-1 （运行服务，可以简写为hs，-c-1代表不要缓存 2. method：post | get 用什么方式提交"}, {"id": "6844904056108892168", "title": "文字溢出处理、背景图片、企业开发经验", "desc": "很多时候，单行文字所占宽度大于容器宽，就会产生文字溢出，所以现在主要是介绍一下文字溢出的解决办法和背景图片的一些知识。 先让行高和容器的高成比 显示（比如容器40px，line-height是20px，你也就只能放两行，所以得把数字算好），然后溢出部分隐藏处理。 就是禁止平铺，…"}, {"id": "6844904114007048199", "title": "DIY技术资讯抓取工具的实践与研究", "desc": "相信每一个技术人员都有周期性获取技术资讯的诉求，而获取的方式也多种多样。例如，用资讯类APP，进行RSS订阅，参加行业大会，深入技术社区，订阅期刊杂志、公众号，等等，都是可选的方式。这些方式看到信息的成本都很低，有“开箱即得”的感觉。但缺点也很明显，有点像“大班课”，可以满足一…"}, {"id": "6844903504847306766", "title": "Front-End-Checklist(前端清单)", "desc": "现代化网站需要考虑的前端细节问题汇总。。。。总结的挺全面的"}, {"id": "6978084449455980558", "title": "XML语言数据读写理解11", "desc": "有了前10节的基础，以及我在自己的博客里发布了那个简单的QT调试窗口类，一共两个，一个是有单例的，一个不是。大家想使用的话只需要加个头文件就可以调用了。 我们现在需要把存好的内容给显示出来，看看是不是"}, {"id": "6978083843089629214", "title": "XML语言数据读写理解12", "desc": "首先我们从最底层的Nodets开始写起，然后逐步往上层实现。 在类里面定义一个函数： QDomElement writeNodets(QDomDocument &doc); 注意参数是QDomDocu"}, {"id": "6941262201025986591", "title": "html基础之元素的分类", "desc": "可以发现span标签的border-top不是不生效，而是不在当前的视口区域了，上面span标签上面还空着(还没使用)150px的高度，而这150px的高度恰好是其设置的padding-top的高度，当div元素的高度设置为150px，使用了之前空着的150px的高度，所以bo…"}, {"id": "6897117909437710343", "title": "HTML快速全解—HTML入门笔记1", "desc": "   很荣幸，笔者小剑将在今天开始写博客，以记录学习过程中的一些知识和问题，欢迎一起讨论！（声明：本文图片部分来自网络以下不再一一声明）第一节HTML这玩意是谁发明的？我们都知道HTML是一种超文本标"}, {"id": "6985431626461233166", "title": "你真的熟练运用 HTML5 了吗，这10 个酷炫的 H5 特性你会几个？", "desc": "「本文已参与好文召集令活动，点击查看：后端、大前端双赛道投稿，2万元奖池等你挑战！」 HTML5不是什么新鲜事。自初始版本（2008 年 1 月）以来，我们一直在使用它的几个功能。我再次仔细查看了 H"}, {"id": "7002186401802371109", "title": "奇技淫巧之当你不得不 decode HTML Entity 字符串", "desc": "在 HTML 中遇到一些类似“<”，“>”等符号与标签混合的case时，通常做法是用 HTML Entity 对符号做一层转义编码，但这在某些场景下会遇到一些 bug。"}, {"id": "6844903926110617613", "title": "灵活运用CSS开发技巧", "desc": "何为技巧，意指表现在文学、工艺、体育等方面的巧妙技能。代码作为一门现代高级工艺，推动着人类科学技术的发展，同时犹如文字一样承托着人类文化的进步。 每写好一篇文章，都会使用大量的写作技巧。烘托、渲染、悬念、铺垫、照应、伏笔、联想、想象、抑扬结合、点面结合、动静结合、叙议结合、情景…"}, {"id": "6844903673009553416", "title": "2018前端面试总结，看完弄懂，工资少说加3K | 掘金技术征文", "desc": "文章涉及的内容可能不全面，但量很多，需要慢慢看。来源于各个地方，我花了很长的时间整理，希望对大家有帮助。但是难免会有打字的错误或理解的错误，希望发现的可以邮箱告诉我236490794@qq.com，我会及时的进行修改，旨在能帮到大家，谢谢。 意义：根据内容的结构化（内容语义化）…"}, {"id": "6997647786632019999", "title": "使用 HTML、CSS、JS 和 API 制作一个很棒的天气 Web 应用程序", "desc": "本文已参与掘金创作者训练营第三期「高产更文」赛道，详情查看：掘力计划｜创作者训练营第三期正在进行，「写」出个人影响力。 ⛅ Weather.io ☔ 很高兴又见面了！😊 今天我将制作一个很棒的🌦天气应"}, {"id": "7005113621415985183", "title": "自定义播放器 与 Node.js 和 HTML5 视频流传输", "desc": "自定义播放器 与 Node.js 和 HTML5 视频流传输， 通常，我们在页面上进行播放的视频是通过`video`标签"}, {"id": "7005467310802599973", "title": "中秋活动--给小玉兔画个超级月亮来作伴", "desc": "前言 我正在参加中秋创意投稿大赛，详情请看juejin.cn/post/700315… 最近正在学习html, 发现html真的太有趣了，昨天用css画了一只小玉兔，大家很喜欢， 但是掘金友友告诉我，"}, {"id": "6997271802867089416", "title": "静态网页与动态网页有什么区别？", "desc": "本文已参与掘金创作者训练营第三期「高产更文」赛道，详情查看：掘力计划｜创作者训练营第三期正在进行，「写」出个人影响力。 什么是网页？ 首先，我们需要了解什么是网页和网站，以及它们有何不同。为此，让我们"}, {"id": "7005890560149946375", "title": "html5和Vue中如何导出数据为表格", "desc": "html5和Vue中如何导出数据为表格 1.原始html写的table表格的导出： 像这种单独定制的表格可以直接使用以下方式导出，支持多个表格导出 2.vue搭配elementUI的表格导出： 1.先"}, {"id": "6993130330479656968", "title": "阿ken的HTML、CSS的入门指南（九）_浮动与定位", "desc": "感激相遇 你好 我是阿ken 布局看起来呆板、不美观，那么，如何对页面重新排版，这就需要为元素设置浮动。本节将对元素的浮动进行详细讲解。在 CSS 中，通过 float 属性来定义浮动，所谓元素的浮动"}, {"id": "6997535282757287950", "title": "【HTML干货分享 | 建议收藏】挑战最短时间带你走进HTML（十八）", "desc": "感激相遇 你好 我是阿ken transition-property 属性用于指定应用过渡效果的 CSS 属性的名称，其过渡效果通常在用户将指针移动到元素上时发生。当指定的 CSS 属性改变时，过渡效"}, {"id": "6993855890856083487", "title": "阿ken的HTML、CSS的入门指南（十一）_浮动与定位", "desc": "感激相遇 你好 我是阿ken HTML 标记语言提供丰富的标记，用于组织页面结构。为了使页面结构的组织更加轻松、合理，HTML 标记被定义成了不同的类型，一般分为块标记和行内标记，也称块元素和行内元素"}, {"id": "6908879198933221383", "title": "8个硬核技巧带你迅速提升CSS技术 | 掘金直播总结", "desc": "前段时间笔者收到可爱漂亮的小册姐姐的邀请，做了人生首次直播分享。分享主题是《玩转CSS的艺术之美》，跟笔者在9月底发布的掘金小册同名。 9月底发布的玩转CSS的艺术之美，首日预售就达到709本，预售仅三日就破1000本。这也让笔者感到惊讶，没想到CSS技术还是那么受倔友们的欢迎…"}, {"id": "7005763632399122468", "title": "来，点一下这个月饼看看会发生什么", "desc": "技术：html+css 简介：兔子月饼，点击变换黑夜并会出来一些奇妙的东西 胡言乱语：哇哇哇哇哇哇哇哇哇哇哇中秋哇哇哇哇哇哇给孩子个赞吧哇哇哇哇哇孩子一辈子没中过奖哇哇哇哇哇"}, {"id": "6992383017834512421", "title": "阿ken的HTML、CSS的入门指南（七）_CSS盒子模型", "desc": "感激相遇 你好 我是阿ken 默认情况下，背景图像会自动沿着水平和竖直两个方向平铺，如果不希望图像平铺，或者只沿着一个方向平铺， 可以通过 background-repeat 属性来控制。如果将背景图"}, {"id": "6844903577220349959", "title": "前端面试考点多？看这些文章就够了（2019年6月更新版）", "desc": "金三银四跳槽季，offer快到碗里来，前端面试考点众多，而网上各个知识点的博客文章又太多，看的眼花缭乱……所以便整理了一下常见知识点的精华文章，每个知识点的文章控制在3篇以内，尽量覆盖该知识点的下容易被面试到的所有内容，文章都是之前自己读过的，确定是精华干货。文章会一直更新，也…"}, {"id": "6844903683411410951", "title": "前端常用插件、工具类库汇总，不要重复造轮子啦！！！", "desc": "在开发中，我们经常会将一些常用的代码块、功能块进行封装，为的是更好的复用。那么，被抽离出来独立完成功能，通过API或配置项和其他部分交互，便形成了插件。 下面这些是我在工作中积累的一些常用的前端开源插件，这里只是罗列出来，详细的用法各个插件官网或者Gayhub都有介绍。注意：往…"}, {"id": "6992747291685699614", "title": "阿ken的HTML、CSS的入门指南（八）_CSS盒子模型", "desc": "感激相遇 你好 我是阿ken 在CSS3之前的版本中，一个容器只能填充一张背景图片，如果重复设置， 后设置的背景图片将覆盖之前的背景。CSS3中增强了背景图像的功能，允许一个容器里显示多个背景图像。使"}, {"id": "6994610939089649678", "title": "阿ken的HTML、CSS的入门指南（十三）_表单的应用", "desc": "感激相遇 你好 我是阿ken < input /> 元素是表单中最常见的元素，网页中常见的单行文本框、单选按钮、复选框等都是通过它定义的。在 HTML5 中，< input /> 标记拥有多种输入类型"}, {"id": "6993487356665790495", "title": "阿ken的HTML、CSS的入门指南（十）_浮动与定位", "desc": "感激相遇 你好 我是阿ken 浮动布局虽然灵活，但是却无法对元素的位置进行精确的控制。在 CSS 中，通过定位属性可以实现网页中元素的精确定位。下面，我们将对元素的定位属性及常用的几种定位方式进行详细"}, {"id": "6915204591730556935", "title": "preload、prefetch、preconnect 和 dns-prefetch 知多少", "desc": "preload 提升了资源加载的优先级，使得它提前开始加载（预加载），在需要用的时候能够更快的使用上。另外 onload 事件必须等页面所有资源都加载完成才触发，而当给某个资源加上 preload 后，该资源将不会阻塞 onload。 此时的 main.js 加载顺序出现在了 …"}, {"id": "6844903664297967630", "title": "使用webpack4打造自己的前端工作流", "desc": "webpack4发布已经有一段时间了，我在实践的过程中发现，很多项目配置在webpack3下工作正常，但是升级到webpack4直接就崩了，如果想要webpack4正常工作，很多插件也需要升级到新版。下面是我使用webpack4配置的一个学习案例，包含了日常开发的常用配置项，比…"}, {"id": "6844903745730396174", "title": "浏览器是如何解析html的？", "desc": "当我们在浏览器地址栏输入一个合法的url时，浏览器首先进行DNS域名解析，拿到服务器IP地址后，浏览器给服务器发送GET请求，等到服务器正常返回后浏览器开始下载并解析html。这里仅总结浏览器解析html的过程。 html页面主要由dom、css、javascript等部分构成…"}, {"id": "6844903539379011592", "title": "利用FormData对象实现AJAX文件上传功能及后端实现", "desc": "包括HTML基础设置、CSS界面优化、JS利用FormData对象和AJAX进行上传、后端接收文件并存储到指定路径以及删除文件操作。 因此，传输完整的文件数据需要multipart/form-data属性。 保存了用户指定的文件的名称。 设置input类型为file。 可多选，…"}, {"id": "6955460408337498126", "title": "使用HTML和CSS教程构建Glass网站", "desc": "了解带有HTML和CSS教程的Build Glass网站。使用HTML和CSS在您的网站上添加Glass效果。为初学者学习HTML的简便方法。"}, {"id": "6903138530370715656", "title": "看前端怎么写HTML邮件模版", "desc": "邮件模板是outlook等邮件系统支持html解析格式的条件下，利用前端技术通过编写HTML文件生成期望的邮件页面，从而辅助编写邮件的邮件编辑方式。 简单来说，就是像写网页一样去写邮件。目前我们在163等邮箱中收到知乎等网站推送的订阅期刊 、京东等购物网站的流程通知、51JOB…"}, {"id": "6989458900726579230", "title": "HTML 表单基础知识", "desc": "HTML 表单基础知识 1. 创建表单 每个表单都以 form 开始标签开始，以 form 结束标签结束。两个标签之间是组成表单的说明标签、控件和按钮。每个控件都有一个 name 属性，用于在提交表单"}, {"id": "6844904018867650568", "title": "HTML Email的编写", "desc": "邮件内容所在上下文或者说所在外部容器（以下简称环境）都是由邮箱服务商决定的，不同的邮件服务商对前端样式布局支持都存在在一些差别。这就要求邮件内容需要在任何一种情况下都要正常兼容显示。 你写的邮件前端代码可能被放在一个iframe中，那你的内容是被放在body里面的；可能放在一个…"}, {"id": "6992041395414368264", "title": "HTML5新增元素和css介绍", "desc": "HTML5新增元素和css介绍 主要内容 1、HTML5新增元素 2、CSS介绍 3、引入css的方式 4、CSS基础选择器 5、Div+CSS布局 学习目标 节数 知识点 要求 第一节 HTML5新"}, {"id": "6922378087254786061", "title": "你可能已经忘记了这些 HTML标签的作用", "desc": "随着对 JavaScript 框架和库的依赖越来越深，很多人对 HTML 的重视程度降低了。这就导致了我们无法充分利用 HTML 的很多功能，这些功能可以大大的增强网站功能。另外通过编写语义化 HTML 可以在网站内容中添加正确的上下文，从而显着改善用户体验。 本文将会介绍一些…"}, {"id": "6987390307436331045", "title": "HTML面试题", "desc": "HTML 与浏览器 Doctype 作用？标准模式与兼容模式各有什么区别? DOCTYPE 是用来声明文档类型和 DTD 规范的。 <!DOCTYPE html>声明位于 HTML 文档中的第一行，不"}, {"id": "6903533860907302925", "title": "使用H5快速写一个直播（基于videojs和hls协议直播视频）（每日计划）", "desc": "使用videojs是非常容易的。这是学习直播的第一篇博客，可以快速实现一个直播，不包含音视频的采集，只是负责播放，所以非常简单。 这样就可以完成一个简单的视频。 videojs 这个库也支持各种协议，今天学习的是 hls 协议的，需要找到这个插件，放入到 video 中。 相关…"}, {"id": "6844903823945760781", "title": "HTML a标签打开新标签页避免出现安全漏洞，请使用“noopener”", "desc": "这里我们有一个指向恶意网站的 href 属性，并以 _blank 属性为 target，使其在新标签页中打开。 用户从你的页面重定向到域，此时，浏览器会将你当前网站的所有 window 变量内容附加到恶意网站的 window.opener 变量。现在恶意网站可以访问你网站的 w…"}, {"id": "6844903856506142728", "title": "[新世界的大门]这还是我了解的那个HTML标签吗？", "desc": "由于 IE 这种老古董的存在和浏览器厂家标准不一的情况，前端开发者们大多更愿意写 JavaScript，而对 HTML 和 CSS 嗤之以鼻。但随着 win10 的普及和 Edge 转投 chromium 的怀抱，大家是不是可以对前端开发的未来更多了一些期待，其实现在 HTML…"}, {"id": "6844903938957770760", "title": "HTML5 容器入门解析：支付宝 Hybrid 方案原理与实战", "desc": "根据公开的 2018 年移动互联网行业分析报告，目前支付宝的月活跃用户已经超过 QQ ，成为国内第二大 App。 支付宝一开始仅仅只是一个单体应用的工具型 App，让用户可以在手机完成支付宝相关的业务查询和操作。2013 年后，支付宝逐步转型为平台型 App， 平台型 App …"}, {"id": "6986809718723346440", "title": "从 Vue 中 parseHTML 方法来看前端 html 词法分析", "desc": "先前我们在 从 Vue parseHTML 所用正则来学习常用正则语法 这篇文章中分析了 parseHTML 方法用到的正则表达式，在这个基础上我们可以继续分析 parseHTML 方法。"}, {"id": "6922378853960646663", "title": "分享几个 HTML5 不常使用但却很有用的小技巧", "desc": "HTML 并不是一个新技术，做前端的同学第一个要掌握的就是 HTML。本文将列举一些平时不经常用到但是却很有用的 HTML 标签或者属性。 1. details 标签 利用&#x3C;details>标签，我们可以很方便的控制内容的展开和收起。 2. contenteditab…"}, {"id": "6844903929717719048", "title": "基于 HTML5 的工业组态高炉炼铁 3D 大屏可视化", "desc": "在大数据盛行的现在，大屏数据可视化也已经成为了一个热门的话题。大屏可视化可以运用在众多领域中，比如工业互联网、医疗、交通、工业控制等等。将各项重要指标数据以图表、各种图形等形式表现在一个页面上，各种数据一目了然。随着浏览器不断发展完善，使用 Web 做大屏展示也已经不是新鲜的事…"}, {"id": "6883819190013296647", "title": "细数移动端布局你不知道的那些事", "desc": "1.导言：移动端布局的写法不能向PC端布局写法一样。 页面上呈现的宽度= 设备独立像素/布局视口 * 元素宽度。 vh指的都是垂直方向的。 因为fixed是根据可视区定位的。"}, {"id": "6978387001850462239", "title": "手把手教你系列之html基础", "desc": "手把手教你系列之html基础，此文章为系列文章。记录自己一个android攻城狮成长为web前端攻城狮的学习历程。"}, {"id": "6995059372678184990", "title": "H5视频播放器特性", "desc": "fill： 中文释义“填充”。默认值。替换内容拉伸填满整个content box, 不保证保持原有的比例。 contain： 中文释义“包含”。保持原有尺寸比例。保证替换内容尺寸一定可以在容器里面放得下。因此，此参数可能会在容器内留下空白。 cover： 中文释义“覆盖”。保持…"}, {"id": "6996858488982863886", "title": "第5章 通过HTML5表单与用户交互", "desc": "这是我参与8月更文挑战的第7天，活动详情查看：8月更文挑战 带着问题去看书学习啦~ HTML5＋CSS3＋JavaScript Web 前端开发案例教程（慕课版），微信读书中找到的学习Web前端书籍"}, {"id": "6844903844455907336", "title": "前端性能优化指南", "desc": "发现总结性的小干货可以为大家提升更好的开发技巧和编码思维，对代码量产化提供更扎实的质量和支持。这次我们来聊聊大家可能都比较关心的话题：性能优化。 一说到页面的性能优化，大家可能都会想起雅虎军规、2-5-8原则、3秒钟首屏指标等规则，这些规则在开发过程中不是强制要求的，但是有时候…"}, {"id": "6998341580868304909", "title": "Web Moblie实现video视频播放 ", "desc": "设置meta标签 设置body、html的font-size 通过js设置 通过scss、less等设置 $num 为实际的px值 设置之后使用rem作为单位来适配手机屏幕 video.js的使用 引"}, {"id": "7002559614680039438", "title": "HTML meta标签", "desc": "介绍HTML <meta> 标签的作用、属性以及 name、http-equiv、content属性的使用"}, {"id": "6952872968150220813", "title": "H5中的Drag(拖拽)", "desc": "Dom事件 应用于当前被拖拽元素的事件 ondrag 元素正在拖动时触发(整个过程持续触发) ondragstart 用户开始拖动元素时触发 ondragend 用户完成元素拖动后触发 ondragl"}, {"id": "6999961425598906376", "title": "HTML 表单", "desc": "使用之前学习过的标签可以做出静态界面，但要想实现与后端进行交互的动态界面需要借助表单，如文本框、按钮、下拉菜单等。"}, {"id": "6844903550938529800", "title": "别找了，这就是你想要的年会抽奖开源项目", "desc": "项目是在2016年年底给公司做的年会抽奖项目，自豪的采用jquery和原生js开发，利用非工作时间于一个月左右独立开发而成，想当年，那时我还没在项目中使用MVVM框架开发，而是稳妥的采用了我的jQuery老朋友，最后在公司年会上因为我们技术部抽的奖比较多而被群众纷纷质疑(虽然项…"}, {"id": "6988039257587712008", "title": "HTML5新增了哪些特性？", "desc": "HTML5是HTML最新的修订版本，2014年10月由万维网联盟（W3C）完成标准制定。设计目的是为了在移动设备上支持多媒体。HTML5是最新的html标准，拥有新的语义、图形以及"}, {"id": "6844904145766334472", "title": "CSS 中重要的层叠概念", "desc": "1. 层叠上下文 (Stacking Context) 层叠上下文 (堆叠上下文, Stacking Context)，是HTML中一个三维的概念。在CSS2.1规范中，每个元素的位置是三维的，当元素发生层叠，这时它可能覆盖了其他元素或者被其他元素覆盖；排在z轴越靠上的位置，距…"}, {"id": "6990149423913402399", "title": "HTML5(三)——Web 本地存储", "desc": "WebStorage的目的是克服由cookie所带来的一些限制，当数据需要被严格控制在客户端时，不需要持续的将数据发回服务器。"}, {"id": "6844903501953237006", "title": "浏览器渲染过程与性能优化", "desc": "大家都知道万维网的应用层使用了HTTP协议，并且用浏览器作为入口访问网络上的资源。用户在使用浏览器访问一个网站时需要先通过HTTP协议向服务器发送请求，之后服务器返回HTML文件与响应信息。这时，浏览器会根据HTML文件来进行解析与渲染（该阶段还包括向服务器请求非内联的CSS文…"}, {"id": "6995006061602160677", "title": "HTML5自定义标签元素，自定义标签必须注册吗？浏览器默认样式表", "desc": "这是我参与8月更文挑战的第11天，活动详情查看：8月更文挑战 一、Google的开发文档 中有关创建自定义标签的规则 自定义元素的名称必须包含短横线 (-)。因此，<x-tags>、<my-eleme"}, {"id": "6844903693020758029", "title": "rem, vw, 还是...? 各凭本事的移动端适配方案", "desc": "2018年最后的法定假期都已经结束了，我相信大部分正在进行或曾经进行过移动端页面开发的同学都或多或少的了解过使用rem进行移动端页面适配的方案以及使用vw的方案，(没了解过的同学可以参见大漠老师的这两篇文章 使用Flexible实现手淘H5页面的终端适配和再聊移动端页面的适配)…"}, {"id": "6844903614280892429", "title": "进一步了解flex布局—来实现这些常见布局吧", "desc": "flex布局具有便捷、灵活的特点，熟练的运用flex布局能解决大部分布局问题，这里对一些常用布局场景做一些总结。 flex:0 0 25%,相当于flex-basis:25%，使得每一个列表项的宽度占外层容器(本例中的ul元素)的25%，因此每行最多能够排开四个列表项。 各大U…"}, {"id": "6989863354772750343", "title": "HTML5(二)——获取用户位置Geolocation", "desc": "地图类、打车、外卖等类型的手机APP，一进入便咨询是否允许获取我们的位置，允许之后会根据我们所在位置推荐好物，逐渐地 H5 网页也开始获取用户位置。Geolocation是 H5 新增的对象，用于定位"}, {"id": "6946071657647702053", "title": "H5 之 History API", "desc": "History 对象包含用户（在浏览器窗口中）访问过的 URL。 History 对象是 window 对象的一部分，可通过 window.history 属性对其进行访问。 允许操纵浏览器会话历史记录，即在当前页面所加载的选项卡或框架中访问的页面。 返回一个整数，该整数表示会…"}, {"id": "6995475085351976990", "title": "重学前端—— html <知识查漏补缺系列>", "desc": "XHTML： html 书写规范、应用规范 HTML5：新增了部分标签 HTML5技术：增加了音视频功能、增加了DOM操作等等新功能（属于新的API，HTML5技术属于JavaScript技术） DO"}, {"id": "6895599073676492807", "title": "10个有用的HTML文件上传技巧", "desc": "上传文件的能力是许多Web和移动应用的关键需求，从将照片上传到社交媒体上到将简历发布到工作门户网站上，文件上传无处不在。 作为一名Web开发人员，我们一定知道HTML提供了原生文件上传的支持，并借助于JavaScript的一点帮助。在HTML5中，File API被添加到DOM…"}, {"id": "6868968417769029640", "title": "HTML跳转到页面指定位置的几种方法", "desc": "有时候，我们想阅读页面中某段精彩的内容，但由于页面太长，用户需要自己滚动页面，查找起来非常麻烦 😭，很容易让人失去继续往下阅读的兴趣。这样体验非常不好，所以我们可以想办法 💡 实现点击某段文字或者图片跳转到页面指定位置，方便用户的阅读。 1. 利用 id 为标记的锚点 这里…"}, {"id": "6844903507019956231", "title": "mnv*框架开发时代", "desc": "当下前端开发框架设计显然已经在mvvm方式上又发展了一步，virtual dom 提出不久，使用前端代码来调用native的思路就开始被实践。相信大家也知道是什么东西。到了今天，我们不得不承认，mnv* 框架开发时代已经到来。 mnv是什么，具体可以这么理解，model-…"}, {"id": "6931728040770830343", "title": "前端二向箔04-HTML嵌入型元素(媒体标签)", "desc": "上篇博客提到了链接, 主要讲述的是link, a, script等链接型元素. 与之相对的是嵌入在网页中的内容, 嵌入内容对应的嵌入型元素主要是一些多媒体标签. 它们主要是img, video, audio, iframe等. 本文一一复盘. 开始复盘前, 先理解一下嵌入型和链…"}, {"id": "6844903891671203848", "title": "浏览器保存密码自动填充问题", "desc": "经过我的反复测试，以Chrome为例，当浏览器遇到type=\"text\"与type=\"password\"的<input/>标签紧邻时，会触发浏览器自动填充行为。默认为黄色背景。firefox和360浏览器的处理方式是：只要检测到页面里有满足填充机制的，不管是不是display：…"}, {"id": "6844903986596675597", "title": "BFC的深入理解", "desc": "Formatting context(格式化上下文) 是 W3C CSS2.1 规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。 BFC 即 Block Formatting Contexts (块级格…"}, {"id": "6844904083795476493", "title": "从输入URL到页面加载 ——页面渲染篇", "desc": "本文主要介绍页面渲染部分。 DOM 将文档解析为一个由节点和对象（包含属性和方法的对象）组成的结构集合。简言之，它会将web页面和脚本或程序语言连接起来。 DOM的结构是由各种子节点组成的，那么以HTMLDocument为根节点，其余节点为子节点，那么组织成的树型数据结构的表示…"}, {"id": "6844904002790883342", "title": "通过fetch发送 post 请求下载文件", "desc": "最近遇到一个下载的需求，由于 url 参数太长(常用的下载方法 a 标签或者 location.href 的方法都是 get 请求，get 请求参数长度有限制)，无法下载，考虑了好几种方案，最终还是觉得通过 ajax 的 POST 方法进行下载，比较容易实现，下面记录实现过程以…"}, {"id": "6844903952731865101", "title": "在 HTML 中包含资源的新思路", "desc": "注意：这篇文章描述了一种我们仍需要测其试性能影响的实验技术。 它可能最终会成为一种有用的工具，也有可能成为不被推荐的做法。 无论哪种方式，它对我们来说很有吸引力！ 只要我一直工作在 Web 上，就需要一种简单的 HTML 驱动方式，将另一个文件的内容直接包含在页面中。 例如，我…"}, {"id": "6844903969383251976", "title": "前端开发不得不了解的HTML5标签", "desc": "html 代表 HTML 或 XHTML 文档的根。其他所有元素必须是这个元素的子节点。 head 代表关于文档元数据的一个集合，包括脚本或样式表的链接或内容。 title 定义文档的标题，将显示在浏览器的标题栏或标签页上。该元素只能包含文本，包含的标签不会被解释。 base …"}, {"id": "6978293118034509831", "title": "XML语言数据读写理解14", "desc": "现在我们写一个自由添加节点的程序。内容还是承接上面几章节。 首先我们先从最底层的NodeTS类入手，建造一个构造函数： 我们最后的计划是实现这样的函数： 首先读取文件，然后再新建一个NodeTS对象，"}, {"id": "6844903497062678535", "title": "前后端分离开发脚手架", "desc": "这是一个是针对于页面比较繁多的非单页面应用的官网开发脚手架。打包工具使用的是gulp，还用到了require引入资源的方式，样式编写时用的less，页面的模板和后台的交互显示是使用的art-template（下面有详细描述这个插件） 在src/layout文件夹中新建page1…"}, {"id": "6844903974378700814", "title": "走进HTML5-领略Geolocation的位置信息", "desc": "HTML5 提供了 geolocation API，用于提供位置相关服务。 地理位置 API 通过window.navigator.geolocation提供。在使用之前需要进行判断该对象是否存在，如果存在的话，那么位置信息可用 我们可以通过使用getCurrentPositi…"}, {"id": "6844903858318082056", "title": "什么是媒体查询?", "desc": "媒体查询学习媒体查询的核心是什么?实现页面在不同设备下正常预览[判断当前设备]媒体类型将不同的设备划分为不同的类型媒体特性width网页显示区域完全等于设置的宽度height网页显示区域完全等于设置的"}, {"id": "6907899357467672590", "title": "Web Workers使用说明", "desc": "JavaScript 语言采用的是单线程模型，在同一时刻只能处理一个任务。我们会通过 setTimeout()、setInterval()、ajax 和Promise等技术模拟“并行”，但都不是真正意义上的并行。 Web Workers 是 HTML5 标准的一部分，就是为了J…"}, {"id": "6924590068208238606", "title": "CSS布局 和 CSS动画笔记", "desc": "最初，引入 float 属性是为了能让 web 开发人员实现简单的布局，包括在一列文本中浮动的图像，文字环绕在它的左边或右边。你可能在报纸版面上看到过。 留一些空间或者最后一个不设置width。或者只设置max-width。 float平均布局 的时候 如果 里面的盒子的超出了…"}, {"id": "6844903519703564295", "title": "H5如何自定义属性", "desc": "往HTML标签上添加自定义属性，这样可以区分一些标签、存储数据、操纵数据"}, {"id": "6844903497033318414", "title": "更快地构建 DOM: 使用预解析, async, defer 以及 preload - 众成翻译", "desc": "在 2017年，保证我们的页面能够快速加载的手段包括压缩，资源优化到缓存，CDN，代码分割以及 tree shaking 等。 原文地址：https://hacks.mozilla.org/2017/09/building-the-dom-faster-speculative-p"}, {"id": "6907427375630254093", "title": "同源策略 & 跨域", "desc": "为保护用户信息安全，防止恶意网站窃取用户数据，浏览器限制本域中的脚本只能访问本域中的资源，这就是同源策略。 如果两个 URL 的 protocol、host、port 三者都相同的话，则这两个 URL 是同源，即属于同一个域。 在页面中通过 about:blank 或 java…"}, {"id": "6883278981064458254", "title": "零基础小白前端学习之HTML（五）", "desc": "大家好，我是你们的小马哥，每天更新一篇文章，坚持就是胜利，希望你们也再接再厉。 动动你的小手，欢迎你的关注和点赞。 body中的相关标签，主要展现在页面的内容区域。 描述文章的信息，本文章的名称用又黑又粗的字体来突出中心内容。那么h1定义最大的标题，h6定义最小的标题。 如果想…"}, {"id": "6844903650146385933", "title": "[译] Angular 的 @Host 装饰器和元素注入器", "desc": "我们知道，Angular 依赖注入机制包含 @Optional 和 @Self 等影响依赖解析过程的装饰器，尽管它们字面意思就直接解释了其作用，但是 @Host 却困扰了我好久。我在其源码注释中看到该装饰器的 描述： 由于网上大多数教程都提到 Angular 的模块注入器和组件…"}, {"id": "6844903618953347085", "title": "基于 HTML5 WebGL 的 3D 工控裙房系统", "desc": "工业物联网在中国的发展如火如荼，网络基础设施建设，以及工业升级的迫切需要都为工业物联网发展提供了很大的机遇。中国工业物联网企业目前呈现两种发展形式并存状况：一方面是大型通讯、IT企业的布局；一方面是传统工业软件和工业网络企业自发地延伸，由产品提供商发展为方案供应商。什么叫做裙房…"}, {"id": "7002425494868082702", "title": "你真的了解 <a> 标签吗？", "desc": "这是我参与8月更文挑战的第7天，活动详情查看：8月更文挑战 前言 创作本篇文章的起因如下：在某次开发中，一个表格的操作部分需要在新窗口打开查看数据详情的页面，需求很简单也很容易实现，一行代码 <a t"}, {"id": "6937102296442470413", "title": "奇思妙想 CSS 文字动画", "desc": "本文将会和这篇 -- CSS 奇思妙想边框动画类似，讲一些文字效果，利用不同的属性搭配，实现各式各样的文字动效。 在写各种 DEMO 的时候，有的时候一些特殊的字体能更好的体现动画的效果。这里讲一个快速引入不同格式字体的小技巧。 当我们相中了一个我们喜欢的字体，它也提供了非常快…"}, {"id": "6994995902825906207", "title": "阿ken的HTML、CSS的入门指南（十四）_表单的应用", "desc": "感激相遇 你好 我是阿ken 除了 type 属性之外，< input/> 标记还可以定义很多其他的属性， 以实现不同的功能。在访问 Google 主页时，页面中中的文字输入框会自动获得光标焦点，以便"}, {"id": "7003541926830047269", "title": "移动前端开发之viewport的深入理解", "desc": "视口当前可见的部分叫做可视视口（visual viewport）。可视视口可能会比布局视口（layout viewport ）更小，因为当用户缩小浏览器缩放比例时布局视口不变，而可视视口变小了。"}, {"id": "7003643367842136071", "title": "日常笔记-HTML5 中一些有用特性", "desc": "1. details 标签 <details>标签向用户提供所需的详细信息。如果你要按需向用户显示内容，请使用此标签。默认情况下，小部件是关闭的。打开时，它会展开并显示其中的内容。 <summary>"}, {"id": "6995318091039113253", "title": "阿ken的HTML、CSS的入门指南（十五）_表单的应用", "desc": "感激相遇 你好 我是阿ken 当定义 input 控件的 type 属性值为 text 时，可以创建一个单行文本输入框。 但是，如果需要输入大量的信息，单行文本输入框就不再适用，为此 HTML 语言提"}, {"id": "6971640926389141518", "title": "Link 标签属性含义与详细用法", "desc": "link元素用于链接外部css样式表等其他相关外部资源。 1 link   其中link中包括如下属性。 href：指明外部资源文件的路径，即告诉浏览器外部资源的位置 hreflang：说明外部资源使"}, {"id": "6991276111527149605", "title": "阿ken的HTML、CSS的入门指南（四）_CSS3选择器", "desc": "感激相遇 你好 我是阿ken 文章部分内容及图片出自网络，如有问题请与我本人联系(主页有公众号) 本博客暂适用于刚刚接触HTML以及好久不看想要复习的小伙伴 虽还未踏入社会尚处象牙塔内 却总总陷入迷茫"}, {"id": "7003165795849076743", "title": "HTML <audio>  安卓手机 默认浏览器获取时长为 0", "desc": "音频标签 安卓获取时长为0的情况 公司在发行音频相关的NFT业务，在实体机测试阶段发现音频是 播放正常 的，但是音频的总时长是获取不正常的，总是为0:00??? 安卓中无效代码 苹果有效，安卓总是为0"}, {"id": "6996068586783506463", "title": "阿ken的HTML、CSS的入门指南（十七）_多媒体技术", "desc": "感激相遇 你好 我是阿ken src 属性用于设置视频文件的路径，controls 属性用于为视频提供播放控件，这两个属性是 video 元素的基本属性。并且 < video> 和 < /video>"}, {"id": "6973949865130885157", "title": "关于 JS 与 CSS 是否阻塞 DOM 的渲染和解析", "desc": "最近系统梳理HTML5所有涉及到的标签时，梳理至<link>和<script>标签时，碰巧想到一个困扰很久的问题，即一般把<script>放在<body>尾部，<link>标签放在<head>内部，而"}, {"id": "6995721790550966302", "title": "阿ken的HTML、CSS的入门指南（十六）_多媒体技术", "desc": "感激相遇 你好 我是阿ken 在 HTML5 出现之前并没有将视频和音频嵌入到页面的标准方式，多媒体内容在大多数情况下都是通过第三方插件或集成在 Web 浏览器的应用程序置于页面中。通过这样的方式实"}, {"id": "6992015827692159007", "title": "阿ken的HTML、CSS的入门指南（六）_CSS盒子模型", "desc": "感激相遇 你好 我是阿ken 在网页设计中，为了调整内容在盒子中的显示位置，常需要给元素设置内边距，所谓内边距指的是元素内容与边框之间的距离，也常常称为内填充，在CSS中paddin也是复合属性其相关"}, {"id": "6987731486707286030", "title": "阿ken的HTML、CSS的入门指南（一）_HTML基础", "desc": "感激相遇 你好 我是阿ken <!doctype>标记 位于文档最前面，使用html5的DOCTYPE声明，会触发浏览器以标准兼容模式来显示页面，浏览器才能将该网页作为有效的html文档。htm"}, {"id": "6991769219910074399", "title": "阿ken的HTML、CSS的入门指南（五）_CSS盒子模型", "desc": "感激相遇 你好 我是阿ken 所谓盒子模型就是把`HTML`页面中的元素看作是一个矩形的盒子，也就是一个盛装内容的容器。每个矩形都由元素的内容、内边距、边框和外边框组成。内边距出现在内容区域的周围，当"}, {"id": "6998084998972588068", "title": "值得关注的HTML基础知识", "desc": "🥳序言 众所周知，html是前端刚开始学习时的第一门语言。然而，在我们日常的实际开发中，一直注重的是实践和应用。但是殊不知的是，"}, {"id": "6844903887162310669", "title": "vue中8种组件通信方式, 值得收藏!", "desc": "作者简介：koala，专注完整的 Node.js 技术栈分享，从 JavaScript 到 Node.js,再到后端数据库，祝您成为优秀的高级 Node.js 工程师。【程序员成长指北】作者，Github 博客开源项目 https://github.com/koala-codi…"}, {"id": "7005113182247190541", "title": "HTML5使用MediaRecorder录制视频", "desc": "HTML5使用MediaRecorder录制视频, MediaRecorder 是浏览器提供的一个强大且简单的 API。专门用于音频和视频的录制。"}, {"id": "7007341812213874725", "title": "vue+element表格导出为excel", "desc": "下载依赖包 引入依赖包 给需要导出的表格设置id id对应下面的exportData方法中的 document.querySelector('#export-table') 按钮绑定事件"}, {"id": "6998376281708593159", "title": "【青训营】HTML基础 - 语义化标签 - 浏览器渲染过程 - 笔记及拓展", "desc": "趁着字节跳动青训营的活动，就再学习一遍HTML。一小时的课程，巩固了之前的一些知识，也学到了很多新知识。我把这次课程的内容与我这一年来学习前端的经验相结合，重新整理了字节老师上课的内容，产出这篇博客~"}, {"id": "6844903824679763981", "title": "基于 HTML5 WebGL 智能城市的模拟运行", "desc": "智能城市是一个系统。也称为网络城市、数字化城市、信息城市。 智能城市建设是一个系统工程：首先实现的是城市管理智能化，由智能城市管理系统辅助管理城市，通过管理系统人们可以监视城市的运行，了解城市每天中发生的变化，以及及时的根据这些变化做出相应的管理；其次是包括智能交通、智能电力、…"}, {"id": "6844903929851953165", "title": "灵活运用PS切图技巧", "desc": "话说，以前的前端工程师在入行时都当过切图仔或切图女。曾经，切图作为前端一门基础且必备的技能，不知何时开始已经不再提起。很多面试官在招聘时都忽略了PS的存在，其实在国外一位优秀的前端工程师是包揽设计工作的，PS玩得可溜呢。 现在大部分的前端工程师都说，这个图让设计师去切吧，这个图…"}, {"id": "6844903600913645582", "title": "你需要知道的单页面路由实现原理", "desc": "最近开发的埋点项目，需要记录用户行为轨迹即用户页面访问顺序。需要在页面跳转的时候，记录用户访问的信息（比如 url ，请求头部等），非单页面应用可以给 window 对象加上一个 beforeunload 事件，在页面离开时触发采集开关，但是现在很多业务是单页面应用，用户切换地…"}, {"id": "6931263129661734925", "title": "5个不常提及的HTML技巧", "desc": "Web开发人员都在广泛的使用HTML。无论你使用什么框架或者选择哪个后端语言，框架在变，但是HTML始终如一。尽管被广泛使用，但还是有一些标签或者属性是大部分开发者不熟知的。虽然现在有很多的模版引擎供我们使用，但是我们还是需要尽可能的熟练掌握HTML内容，就像CSS一样。 在我…"}, {"id": "6988432737044529182", "title": "纯 html + css 实现打字效果", "desc": "分析 可以将动画看做三个不同的层次： 最底层的文字 中间挡住文字的背景 最上层的光标 文字是静止的，而中间的背景和最上层的光标是动态的。 初始时，背景挡住所有的文字，光标在最左边。 动画进行时，背景和"}, {"id": "6989428254989877261", "title": "「HTML+CSS」自定义加载动画【048】", "desc": "前言 效果展示 Demo代码 HTML CSS 原理详解 步骤1 使用span标签，设置为 宽度、高度均为24px 背景色：红色 步骤2 span标签圆角化 步骤3 为span添加动画 使用box-s"}, {"id": "6844903602750750733", "title": "实现前端点击按钮自动复制剪贴板功能", "desc": "为了提升用户体验，点击【复制】按钮就自动复制到剪贴板，那么就需要前端实现这种功能了。 左边是一个input的文本框，只读，右边是一个按钮。 这种东西就跳过吧，不是重点。 两行？看起来是不是很简单？哈哈~那你就错了，这里面是有坑的。 第一目前没有一个很完美的方法可以兼容各个浏览器…"}, {"id": "6916162359765663752", "title": "哪吒闹海，席卷图文学习前端Flex布局-七日打卡", "desc": "哪吒人生信条：如果你所学的东西 处于喜欢 才会有强大的动力支撑。 本篇文章进行学习css中的一个重点应用，布局样式为flex布局，相信你学习了解过display属性，position属性，float属性，但今天只学习新东西就是flex布局。 flex布局可以使容器更改其item…"}, {"id": "7000760125921181727", "title": "在线JSON转HTML,TABLE表格工具", "desc": "在线JSON转HTML,TABLE表格工具 在线JSON转HTML,TABLE表格工具 https://tooltt.com/json2htmltable/"}, {"id": "6844903497687646222", "title": "移动 Web 开发问题和优化小结", "desc": "到目前为止，互联网行业里，手机越来越智能化，移动端占有的比例越来越高，尤其实在电商，新闻，广告，游戏领域。用户要求越来越高，网站功能越来越好，效果越来越炫酷，这就要求我们产品质量越来越高，web前端开发而言是一个挑战，是一个难题，也是一个机遇。如何让我们所开发的手机页面能有更好…"}, {"id": "6978274813710172196", "title": "浅谈前端 | HTML & 基于flask框架实现和form表单实现前后端交互", "desc": "这是我参与更文挑战的第27天，活动详情查看： 更文挑战 前言 本文主要介绍什么是HTML以及HTML语言常用的标签，通过HTML语言就可以为我们搭建网站提供骨架啦,在网页上右键鼠标选择查看网页源代码可"}, {"id": "7000398165094432775", "title": "初识html，一文搞懂HTMl骨架标签都有哪些含义及浏览器内核", "desc": "html基础篇 初识html（大概两篇），下面会从浏览器以及web标准和相关标签来说明整个html结构和由来。 注：本系列文章适合新手小白入门学习。文章如有疏漏请指正。 浏览器的内核 在前端的学习中"}, {"id": "6993314339402825765", "title": "HTML5新标签的兼容性处理", "desc": "HTML5新标签的兼容性处理 1.第一种方法便是使用DOM操作来添加这些标签 2.第二种方式，直接借用前辈大牛封装好的js库 --- html5shiv.js"}, {"id": "6844903892170309640", "title": "如何绕开referrer防盗链", "desc": "最近处理了一个与referer有关的需求，发现里面还是有一点门道的。因此在本篇文章整理了referer相关知识点，主要涉及图片防盗链与如何绕开防盗链限制。 Referer是HTTP请求头的一个字段，包含了当前请求页面的来源页面的地址，通过该字段，我们可以检测访客是从哪里来的。 …"}, {"id": "6844904148744273933", "title": "HTML 5.2 版本带来的修改", "desc": "W3C HTML 5.2 规范中，有一节 介绍该版本引入的修改，我综合来自《What’s New in HTML 5.2?》这篇文章的描述，在此列举对我来说比较重要的部分。 对话框在平时开发中，使用较为频繁，HTML 5.2 规范提供了 <dialog> 元素来创建对话框。 <…"}, {"id": "6985047299466461192", "title": "前端面试基础 HTML 篇", "desc": "前端面试基础HTML篇，巩固一下前端的一些基础，互相交流一下，做一个综合的归纳，加深理解，后续会不断的更新"}, {"id": "6983295434571644959", "title": "表格标签", "desc": "表格 table表格标签，tr行标签， td列标签。要想在网页中看到表格必须进行table标签border属性的设置 table的caption是表格的标题，它常常作为table的第一个元素出现。在表"}, {"id": "6946005329683415048", "title": "下一代的模板引擎：lit-html", "desc": "前面的文章介绍了 Web Components 的基本用法，今天来看看基于这个原生技术，Google 二次封存的框架 lit-html。 其实早在 Google 提出 Web Components 的时候，就在此基础上发布了 Polymer 框架。只是这个框架一直雷声大雨点小，…"}, {"id": "6962527031384866846", "title": "Minima黑色响应式后台管理模板", "desc": "Minima黑色响应式后台管理模板基于Bootstrap3.3.4制作，黑色风格，兼容PC端和手机移动端，全套模板，包括登录、仪表盘、按钮、窗口部件、网格布局、图表等后台模板页面。"}, {"id": "6921636695423057933", "title": "关于双列瀑布流布局的优化思考", "desc": " 导语在前端领域，经常会遇到瀑布流布局的开发，最近整理了下相关的使用场景和解决方案，其中包含了简单算法DP，前端基础知识，业务场景的思考。什么是瀑布流布局瀑布流又称瀑布流式布局，是一种比较流行的页面布"}, {"id": "6990558798880440327", "title": "HTML5(四)——Web Workers", "desc": "Web Worker 就是为了 javascript 创造多线程而生的，主线程创建 worker 子线程，将一些任务分配给后台运行，等到子线程完成计算任务，再把结果返回给主线程，好处是计算密集型或高延"}, {"id": "6964262584866308132", "title": "Flex 布局教程", "desc": "一、Flex 布局教程：语法篇 网页布局(layout) 是 CSS 的重点应用 传统布局的解决方案基于 盒状模型，依赖 display+float+position 它对于那些特殊布局非常不方便，比"}, {"id": "6986624831454183461", "title": "Button 标签属性含义及其用法", "desc": "button 用于显示一个可点击的按钮，可用在表单或文档的其它地方。   button元素是内联双标签，不同浏览器下button样式不同，可以通过CSS修改。 标签属性 autofocus   指定页"}, {"id": "6998776943424471071", "title": "HTML 简介", "desc": "对 HTML 进行简单介绍，区分 Web 1.0 时代的网页制作和 Web 2.0 时代的前端开发，简要介绍 HTML。"}, {"id": "6986081274544979981", "title": "「HTML+CSS」--自定义加载动画【040】", "desc": "前言 效果展示 Demo代码 HTML CSS 原理详解 步骤1 使用span标签，设置为 宽度、高度均为96px 相对定位 步骤2 利用span::before、span::after伪类元素，作为"}, {"id": "6844904082629459975", "title": "学习总结之HTML5剑指前端（建议收藏，图文并茂）", "desc": "学习《HTML5与CSS3权威指南》这本书很不错，学完之后我颇有感触，觉得web的世界开明了许多。这本书是需要有一定基础的web前端开发工程师。 这本书主要学习HTML5和css3，看看这本书的书名就知道了，首先学习HTML5中新增的语法与标记方法，新增的元素和api。 除了H…"}, {"id": "6857776917551480845", "title": "前端H5 Video常见场景浅析", "desc": "2.1 支持原生H5 video标签的所有配置参数，并且更加丰富的配置。 视频本地预览的功能主要利用 URL.createObjectURL() 方法来实现。URL.createObjectURL() 静态方法会创建一个 DOMString，其中包含一个表示参数中给出的对象的 …"}, {"id": "6844903507548438542", "title": "用wxDraw.js制作酷炫的小程序canvas动画『wxDraw 小程序界的zrender』", "desc": "canvas 是HTML5的一个重要元素，它能够高效的绘制图形，但是过于底层，且粗糙的Api，导致开发者很难使用它来做较为复杂的图形， 而且它的即时绘制无记忆特性，使得它内部的图形并不支持动画更不支持一切交互事件。 这样的问题出现在所有支持canvas的客户端上同样出现在 微信…"}, {"id": "6986278125789904903", "title": "html5手机端顶部标题栏三分样式", "desc": "<a href=\"./home.<a class=\"title-center\"><img class=\"logo\" src=\"../img/logo....title-box img..."}, {"id": "6957137314300559373", "title": "关于堵塞的知识，你了解多少？", "desc": "最近刷到一篇博客，名为《css加载会造成堵塞吗》，本着学习的态度打开看了看，但是感觉好像说的并不是完全很正确，所以我就到处去搜寻各种资料，然后自己总结了一下 css的加载会造成堵塞吗 首先说答案，肯定"}, {"id": "6844903846645334030", "title": "H5 video 开发问题及相关知识点", "desc": "H5 video目前所有浏览器都支持的视频格式是MP4格式，所以mp4应当是点播web视频的首选格式。 而在直播视频上，H5 video只在移动端原生支持HLS流的直播视频(Mac safari video标签也支持， PC Chrome不支持)，其他直播流（如FLV）就需要F…"}, {"id": "6844903504176234510", "title": "[译] iPhone X 网页设计", "desc": "在最新发布 iPhone X 的全面屏上，Safari 可以精美地显示现有的网站。内容自动嵌入到显示屏的安全区域内，以免被圆角、原深感摄像头系统的空间遮挡住。 凹槽部分填充了页面的 background-color (比如指定为 <body> 或 <html> 元素的背景颜色)…"}, {"id": "6844904191966576654", "title": "消息通知-内容更新提示小红点如何实现？", "desc": "当内容更新时，需要在入口加上小红点提示，这种需求屡见不鲜，实现起来也不复杂。实现的场景有很多，web 端、app 端、小程序端等等，实现思路大同小异，本文从有无登录态两种情形，讲述解决问题的完整思路。 比较常规的做法是有用户登录态的情况，将用户的已读时间录入至后台的用户数据信息…"}, {"id": "6977225087913033759", "title": "构建WEB项目的 25 个HTML建议", "desc": "HTML是WEB应用程序的骨架，尽管非常容易上手，但仍有很多需要注意的规则，可能因为没有遵循这些规则导致WEB应用程序的实践受到影响，现在对于项目开发，很多规则是可以通过程序来自动完成"}, {"id": "6982477927988330526", "title": "h-music 开发笔记-2", "desc": "静态页面开发代码，将页面划分成了五个小模块：并列出了全部代码：index.html、index.scss。复制即可。"}, {"id": "6844904180616822797", "title": "前端持久化之浏览器存储技术（localStorage、sessionStorage 、session、cookies）", "desc": "对于不怎么改变的数据尽量使用 localStorage 存储，否则可以用 sessionStorage 存储。 HTML5本地存储只能存字符串，任何格式存储的时候都会被自动转为字符串，所以读取的时候，需要自己进行类型的转换。 要注意在前端操作的存储和后端数据库存储一样都是异步的…"}, {"id": "6844904017294786568", "title": "Notification 浏览器桌面通知", "desc": "Notification是HTML5新增的API，用于想用户配置和现实桌面通知。这些通知的外观和特定功能因平台而异。 Notification通知是脱离浏览器的，即使用户没有停留在当前的标签页，甚至最小化了浏览器，也会在主屏幕的右下角显示通知，然后过一段时间后消失。 Notif…"}, {"id": "6983834909848633374", "title": "表格属性及合并", "desc": "html中我们学习了表格，到网页中只有文字，并不像平时网页中见到的标题头带有背景和边框线的表格，今天我们就学习表格的样式如何设置 表格属性 表格边框：使用border属性，设置给每一个单元格。"}, {"id": "6918360699118813191", "title": "浅谈XML与HTML的区别【七日打卡】", "desc": "HTML(HyperTextMark-upLanguage)即超文本标记语言，是WWW的描述语言。 XML即ExtentsibleMarkup Language(可扩展标记语言)，是用来定义其它语言的一种元语言，其前身是SGML(标准通用标记语言)。它没有标签集(tagset)…"}, {"id": "6844903961070141447", "title": "基于 WebGL 3D 可视化档案馆管理系统", "desc": "档案管理系统是通过建立统一的标准以规范整个文件管理，包括规范各业务系统的文件管理的完整的档案资源信息共享服务平台，主要实现档案流水化采集功能。为企事业单位的档案现代化管理，提供完整的解决方案，档案管理系统既可以自成系统，为用户提供完整的档案管理和网络查询功能，也可以与本单位的O…"}, {"id": "6844904014438465550", "title": "简单地认识一下 HTML", "desc": "简单复盘一下 HTML。 什么是 HTML？HTML 是 Hyper Text Markup Language 的简写，译成中文是「超文本标记语言」。 顾名思义，超文本，就是不止于文本，视频、音频、图片等等都可以，说到底就是一种特殊的文档。HTML 构建了一个网页的基本骨架，T…"}, {"id": "6844903669842853896", "title": "学习React，从攻克JSX开始", "desc": "吐槽：虽然JSX出发点是好的，而且写起来也很简单，但是对于要在JS中写类HTML格式的内容，我的内心是排斥的，感觉非常不习惯。这不是我熟知的web开发啊！有种在开发app的感觉，一个个自定义的组件。 第二个参数[props]其实就是各种属性，我们在JS中怎么写属性的，在这里就怎…"}, {"id": "6844903818186981389", "title": "[译] 从 0 创建自定义元素", "desc": "在上一篇文章，我们在文档中创建了 HTML 模板，希望它们在需要时才呈现，这让我们开始接触 Web 组件。 接下来，我们将继续创建对话框组件的自定义元素版本，该自定义元素版本目前仅使用 HTMLTemplateElement。 请在 CodePen 上查看由 Caleb Wil…"}, {"id": "6844903949502251015", "title": "走进HTML5-学习requestAnimationFrame", "desc": "在 Web 应用中，实现动画效果的方法比较多，JavaScript 中可以通过定时器 setTimeout 来实现，Css3 可以使用 transition 和 animation 来实现，HTML5 中的 canvas 也可以实现。除此之外，HTML5 还提供了一个专门用于请…"}, {"id": "6844904177882103815", "title": "requestAnimationFrame的应用", "desc": "学习vue-element-admin这个项目的table组件的时候，点击分页会主动滚动到最上面，方便查看。觉得这个功能挺不错，就去研究了一下它的实现方式。 源码位置位于src/utils/scroll-to.js，对外暴露了一个scrollTo方法。 requestAnima…"}, {"id": "6844903735680827400", "title": "H5 实现保存图片的采坑记录", "desc": "来自我的 Github blog"}, {"id": "6976199136357924878", "title": "HTML5 常见的几种新特征", "desc": "表单 html5修改一些新的input输入特性，改善更好的输入控制和验证 html5新增了五个表单元素"}, {"id": "6904497467304181774", "title": "史上最全HTML分类标签，看完不了解来砍我", "desc": "html标签HTML 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码。"}, {"id": "6940826397552148488", "title": "canvas ", "desc": "最近和canvas 杠上了，写一个总结。 需求： 1、画圆：单纯 点击画固定大小的圆， 鼠标按下a 并且 滑动 鼠标松开b 画 半径 不固定的圆（半径 根据 a b 间距确定 ， a 为圆心）。"}, {"id": "6844903564993626126", "title": "【webapp的优化整理】要做移动前端优化的朋友进来看看吧", "desc": "小钗从事单页相关的开发一年有余，期间无比的推崇webapp的网站模式，也整理了很多移动开发的知识点，但是现在回过头来看，webapp究竟是好还是不好真是一言难尽哟！ webapp使用JavaScript修改页面；紧接着再从服务器传递更多数据然后再修改页面，如此循环。 从性能的"}, {"id": "6953904874484400164", "title": "第一步-HTML的学习", "desc": "第一课 什么是浏览器? 是安装在电脑上的一款软件 和QQ 微信一样 功能: 1. 将网页渲染出来给用户查看 2. 能够让用户通过浏览器和网页交互 浏览器内核 是浏览器所采用的的渲染引擎 五大浏览器 I"}, {"id": "6847902216817213453", "title": "《30分钟重学HTML》之基础-超链接与URI（四）", "desc": "腾讯网首页，蓝色背景导航栏每个元素即为超链接，提供了导航功能。 使用<a>元素创建基本链接，在 href (Hypertext Reference)属性中，包含你希望指向的 URL 或 URL 片段。 除了文字，你可以将一部分内容转换为链接，甚至是块级元素。 如你想要将一个图像…"}, {"id": "6844903702520676365", "title": "【译】用CSS属性选择器来拼接HTML的DNA", "desc": "一般我们最普遍的使用方法是将HTML属性放进一个方括号中，称之为属性选择器。例如： 任何具有href属性且没有更具体的选择器的html元素现在都会变成黄绿色。属性选择器的特性和类选择器一致 但是你可以使用属性选择器做更多的事情。就像你的DNA一样，它们具有嵌入式的逻辑，可帮助您…"}, {"id": "6935830380415189029", "title": "Web Security 之 Clickjacking", "desc": "在本节中，我们将解释什么是 clickjacking 点击劫持，并描述常见的点击劫持攻击示例，以及讨论如何防御这些攻击。 点击劫持是一种基于界面的攻击，通过诱导用户点击钓鱼网站中的被隐藏了的可操作的危险内容。 例如：某个用户被诱导访问了一个钓鱼网站（可能是点击了电子邮件中的链接…"}, {"id": "6844903501290536973", "title": "玩转 React（三）- JavaScript代码里写HTML一样可以很优雅", "desc": "这是《玩转 React》系列的第三篇，看到本篇的标题，了解过 React 的同学可能已经大致猜到我要讲什么了，本篇中要讲的内容对于刚接触 React 的同学来说，可能有些难以接受，但希望你能坚持学下去，这是 Facebook 的前端大神们为前端开发做出的革命性创新。 这是从 R…"}, {"id": "6844903501076627464", "title": "不会写 JavaScript 的人是否还有价值？", "desc": "最近我有幸参加在墨尔本召开的 2017 Web Directions Code 大会。我和 Mark Dalgleish 还有 Glen Maddern （他的演讲非常精彩）被分到了一个演讲小组里。我们做了一系列关于 CSS 的演讲，在小组讨论中，我们讨论了一个问题：“只会写 …"}, {"id": "6844903537638375438", "title": "Angular2+去除url中的#", "desc": "1. 为什么要去除？ '#'有点丑。 2. 怎样才能去除？ 如果只配置前端虽然会去掉'#'但是一刷新页面就404，路径解析上出错了。 Angular是单页应用，它实现了前端路由功能，后台可以不再控制路由的跳转，将原本属于后端的业务逻辑全部丢给前端。 用户刷新页面时(http:/…"}, {"id": "6844903881378365454", "title": "强制缓存与协商缓存", "desc": "Http 缓存机制作为 web 性能优化的重要手段，对于从事 Web 开发的同学们来说，应该是知识体系库中的一个基础环节，同时对于有志成为前端架构师的同学来说是必备的知识技能。但是对于很多前端同学来说，仅仅只是知道浏览器会对请求的静态文件进行缓存，但是为什么被缓存，缓存是怎样生…"}, {"id": "6858822065164648456", "title": "一名前端开发のHTML入门", "desc": "前端开发，入门简单，有一台可以运行多款浏览器的电脑，能联网查询资料即可。深入的部分，需要更多的理论知识、肯钻研的精神。"}, {"id": "6946124964655267876", "title": "Cookie、Session、SessionStorage、LocalStorage 介绍", "desc": "客户端向服务器端发送一个请求的时，服务端向客户端发送一个Cookie 然后浏览器将Cookie保存，Cookie有两种保存方式，一种是浏览器会将CCookie保存在内存中，还有一种是保存在客户端的硬盘中，之后每次HTTP请求浏览器都会将Cookie发送给服务器端。 注意：浏览器…"}, {"id": "7002424860567666695", "title": "HTML5：若只如初见", "desc": "HTML5 将 HTML 从用于构造一个文档的一个简单标记，到一个完整的应用程序开发平台。为什么他会有这样的能量？"}, {"id": "6975148293990907934", "title": "不为人知的 HTML 技巧", "desc": "什么是 HTML？ 超文本标记语言 (HTML) 是设计用于在 Web 浏览器中显示的文档的标准标记语言。它可以借助级联样式表 (CSS) 等技术和 JavaScript 等脚本语言来辅助。"}, {"id": "6901528736567394318", "title": "这些鲜为人知的前端冷知识，你都GET了吗？", "desc": "这个很多人应该还是知道的，在浏览器地址栏可以直接运行JavaScript代码，做法是以javascript:开头后跟要执行的语句。比如： 将以上代码贴到浏览器地址栏回车后alert正常执行，一个弹窗神现。 比如在地址栏输入以下代码然后回车运行，会出现指定的页面内容。 这个还是在…"}, {"id": "7002234923524292644", "title": "【HTML5游戏】从敲打空格键开始", "desc": "从头开始创建令人印象深刻且引人入胜的跨平台游戏，本教程将学习如何剖析制作成功游戏的元素，以及如何开发游戏设计，循环和用户输入、动画、地图、碰撞检测和AI、数学、游戏物理等方面的实践技能。"}, {"id": "6955287500311150605", "title": "懒加载 React 长页面 - 动态渲染组件", "desc": "长页面在前端开发中是非常常见的。例如下图中的电商首页，楼层数据来自运营人员在后台的配置，楼层数量是不固定的，同时每个楼层可能会依赖更多翻页数据。在这种情况下，如果一次性将页面全部渲染，可想而知，"}, {"id": "6844903933287071751", "title": "我的<input />不可能这么可爱（APP打开有惊喜）", "desc": "<input /> 标签是我们日常开发中非常常见的替换元素了，但是最近在刷 whattwg 跟 MDN 的时候发现 跟 <input /> 有很多相关的属性，选择器都没怎么用过，所以就开篇文章来整理一下一些比较有趣或者实用的知识点。 没想到，这些选择器居然跟 input ...…"}, {"id": "6844903935568789517", "title": "前端基础知识概述 -- 移动端开发的屏幕、图像、字体与布局的兼容适配", "desc": "本文是内部的一次分享沉淀，偏向基础但是涉及了一些有意思的细节，文笔有限，才疏学浅，文中若有不正之处，万望告知。 前端的一大工作内容就是去兼容页面在不同内核的浏览器，不同的设备，不同的分辨率下的行为，使页面的能正常工作在各种各样的宿主环境当中。 而本文的主题 -- 移动端开发的兼…"}, {"id": "6922602775947771911", "title": "HTML5中的拖放功能 | 打卡每天一份劝退技能", "desc": "哪吒人生信条：如果你所学的东西 处于喜欢 才会有强大的动力支撑。 不要害怕做梦，但是呢，也不要光做梦，要做一个实干家，而不是空谈家，求真力行。投魔王哪吒一票，谢谢记得为我投票哦！！！（魔王哪吒） 拖拽的体验，你享受过吗，在HTML5之前，可以使用事件mousedown，mous…"}, {"id": "6844903613966319624", "title": "送给写小程序的你。", "desc": "声明：本人也是菜鸟一只，写的不好的地方，大佬们指点指点。 微信小程序商城，持续更新。（已经跳槽了，但是还是小程序相关的项目/斜眼） 先说说写小程序的渊源吧，我之前认识的大佬写了一个比较简单的小程序，我改了改样式于是成功的有了我的第一个小程序。然后我在找工作的时候，简历上写了这么…"}, {"id": "7000933538321137672", "title": "Html中的meta标签", "desc": "是什么 <meta> 元素表示那些不能由其它HTML元相关元素 <base>, <link>, <script>, <style> 或 <title> 之一表示的任何元数据信息。(例如：keyword"}, {"id": "6990572224637992996", "title": "你不知道的HTML5语义化标签", "desc": "html 语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析；即使在没有样式 CSS 情况下也以一种文档格式显示，并且是容易阅读的，使阅读源代码的人对网站更容易将网站分块。"}, {"id": "6940644830179491876", "title": "定制你的GitHub主页", "desc": "昨天花了点时间，美化了下的我的GitHub主页和个人网站首页，本文就跟大家分享下我的实现过程，欢迎各位感兴趣的开发者阅读本文。 先跟大家展示下我最终实现的效果，在线体验地址：个人网站首页、GitHub主页。 登录后，创建一个和你用户名相同的仓库，如下所示。 最后点击 Creat…"}, {"id": "6900461766514802702", "title": "熬夜7天，我总结了JavaScript与ES的25个知识点", "desc": "前言说起JavaScript，大家都知道是一门脚本语言。那么ES是什么鬼呢？ES全称ECMAScript，是JavaScript语言的国际标准。最近，我总结了25条JavaScript的基础特性相关的"}, {"id": "7000765730081734664", "title": "HTML和CSS中的图像与背景图像", "desc": "这是【从头学前端】系列文章的第二十四篇-《HTML和CSS中的图像与背景图像》 HTML提供<img>元素用于在页面中表示一个图像，该元素为一个空元素。使用src属性来引入一张图片的路径，这个路径既可"}, {"id": "6992493586491113502", "title": "Dialog 标签属性含义及其用法", "desc": "dialog 是HTML5新增的语义化双标签，用于展示一个交互式的模态对话框。   绝大多数浏览器都不支持，仅有Chrome等浏览器支持。 属性 open   用于控制模态框的显隐，即含有open属性"}, {"id": "6999998435319349284", "title": "CSS选择器：伪元素是怎么回事儿？", "desc": "本文已参与掘金创作者训练营第三期「话题写作」赛道，详情查看：掘力计划｜创作者训练营第三期正在进行，「写」出个人影响力 巧妙地使用伪元素可能会带来事半功倍的效果，让我们一起来了解一下伪元素究竟为何物。"}, {"id": "6844903667175260174", "title": "彻底搞懂CSS层叠上下文、层叠等级、层叠顺序、z-index", "desc": "最近，在项目中遇到一个关于CSS中元素z-index属性的问题，具体问题不太好描述，总结起来就是当给元素和父元素色设置position属性和z-index相关属性后，页面上渲染的元素层级结果和我预想的不一样。根据自己之前的理解，也没找到一个合理的解释。我知道，肯定是我对相关属性…"}, {"id": "6996567296164495391", "title": "重学前端 | HTML基础快速入门", "desc": "HTML是什么？HTML发展历史？ HTML在前端开发中的角色？ HTML如何使用？如何写出更加具有语义话的HTML？等问题出发重新整理了一下HTML知识体系"}, {"id": "7003592220842393613", "title": "HTML5：增强型表单", "desc": "HTML5 新增了多个新属性、新的 Input 输入类型和新的表单元素，为表单提供了更好的输入控制和验证等更强大功能。"}, {"id": "6984600006334349342", "title": "MJML邮件模版实战", "desc": "MJML是一种标记语言，旨在减少编写响应电子邮件的痛苦。它的语义语法使它简单明了，它丰富的标准组件库加快了您的开发时间，并减轻了您的电子邮件代码库。MJML的开源引擎生成符合最佳实践的高质量响应HTM"}, {"id": "6844903570446237703", "title": "❤️❌  如何用vue制作一个探探滑动组件 ", "desc": "一. 功能分析 二. 具体实现 1. 堆叠效果 2. 图片滑动 3. 条件成功后的滑出，条件失败后的回弹 4. 滑出后下一张图片堆叠到顶部 重新堆叠是组件最后一个功能，同时也是最重要和复杂的功能。在我们的代码里，stack-item的排序依赖绑定:style的transform…"}, {"id": "6996684763931082766", "title": "HTML和CSS一", "desc": "一、HTML 超越文本限制的标记语言 Hyper Text Markup Language 二、CSS 层叠样式表 Cascading Style Sheets"}, {"id": "6975106489899810824", "title": "无需JavaScript可以实现的9个网页功能", "desc": "HTML是超文本标记语言，它能够轻松地为网页创建元素，可以使用标签、属性、添加脚本等等。同时 HTML 比想象的更有用，在有些场景下可以不需要 JavaScript。"}, {"id": "6844903500963397640", "title": "CSS 写作建议和性能优化小结", "desc": "还有几天就到国庆中秋了，快要放假了，先祝大家节日快乐！之前写过js的写作建议和技巧，那么今天就来聊聊css吧！说到css，每一个网页都离不开css，但是对于css，很多开发者的想法就是，css只要能用来布局，把效果图排出来就可以了，其它的细节或者优化，不需要怎么考虑。但是我觉得…"}, {"id": "6984412564796997668", "title": "html5鼠标拖动排序及resize实现方案分析及实践", "desc": "拖放（Drag和 drop）是 HTML5 标准的组成部分。相比之前用jquery-UI等库实现，更加方便。使用css 设置resize属性，通过observeResize监听元素的大小改变。这个也是"}, {"id": "6991757127979106317", "title": "HTML5(五)——Canvas API", "desc": "Canvas API（画布）提供了一个通过 javascript 和 html 的 canvas 元素来在网页上实时绘制图形的方式。可用于动画、游戏、图标、图片编辑等多"}, {"id": "6844903519342821390", "title": "看完离编写高性能的JavaScript又近了一步", "desc": "JavaScript对未声明变量的处理方式：在全局对象上创建该变量的引用(即全局对象上的属性，不是变量，因为它能通过delete删除)。如果在浏览器中，全局对象就是window对象。 如果未声明的变量缓存大量的数据，会导致这些数据只有在窗口关闭或重新刷新页面时才能被释放。这样会…"}, {"id": "6844903507565215752", "title": "js数组的常见操作（ push、pop、unshift、shift、splice、concat、 join）的用法", "desc": "语法: arr.splice(起点,长度) 【如 arr.splice(0,2) 会删除数组中的前两项。】 例2：数组添加 splice() --可以向指定位置插入任意数量的项，只需要提供3个参数：插入起始位置、0（要删除的项数）和要插入的项。 如果要插入多个项，可以再传入第四…"}, {"id": "6951428891609137188", "title": "（html + css + js）实现视频的倍速播放", "desc": "相信大家都有过看视频想要按照自己所想的去调倍速的冲动，那么今天它就来了。我会带大家去实现这个功能，话不多说，先给大家展示一下效果。"}, {"id": "6926354700564430855", "title": "登录表单的最佳实践 / Sign-in form best practices", "desc": "登录页常常是用户使用我们页面最早接触的几个页面之一。正因此，一个好的登录页面对于提升用户体验并吸引用户继续使用我们的产品是至关重要的。相信大家都有过因为注册或登录流程及体验上感到挫折所以不继续使用对应产品的经验。虽然不一定适用于所有情况，但希望本文中提到的一些最佳实践能够帮助大…"}, {"id": "6887002831661121549", "title": "(一)熟练HTML5+CSS3，每天复习一遍", "desc": "学习网页的概念和分类，了解静态网页和动态网页的不同；了解网页浏览器的工作原理。了解HTML,XHTML,HTML5的概念，制作简单的HTML页面的开发。 可以在internet上通过网页浏览信息，如新闻，图片等，还可发布信息，如招聘信息等，网页是在某个地方某一台计算机上的一个文…"}, {"id": "6844903633000087560", "title": "编写一个简单的JavaScript模板引擎", "desc": "若需要用于商业用途，请经本人同意。 尊重每一位认真写文章的前端大佬，文末给出了本人思路的参考文章。 能够访问到这篇文章的同学，初衷是想知道如何编写JavaScript的模板引擎。为了照顾一些没有使用过模板引擎的同学，先来稍微介绍一下什么叫模板引擎。 上面代码中，我使用了ES6的…"}, {"id": "6844903793864212494", "title": "div+contenteditable 实现富文本发布框的小结", "desc": "“你想做的一定有人做了，你一定不是第一个遇到这个问题的人”——这句话对80%（二八分布）的人是有效的，我也从中获益不少。 在Chrome中使用button标签来高亮被@的用户，在Firefox中使用img标签来高亮被@的用户（绝妙）这里不同标签的使用很讲究，考虑了浏览器兼容性。…"}, {"id": "6844903654281969678", "title": "一个骚气的文章目录自动生成器了解一下", "desc": "这个插件根据选定的目录内容中的 h1, h2, h3, h4, h5, h6 标签来自动生成目录插入到选定的目录容器中，并且提供一个漂亮的样式效果。 1. 预览 2. 实现思路 滚动的监听通过 getBoundingClientRect 获取元素大小以及相对视口的位置，判断我们…"}, {"id": "6918362751052021767", "title": "HTML5 LocalStorage 本地存储【七日打卡】", "desc": "早的Cookies自然是大家都知道，问题主要就是太小，大概也就4KB的样子，而且IE6只支持每个域名20个cookies，太少了。优势就是大家都支持，而且支持得还蛮好。很早以前那些禁用cookies的用户也都慢慢的不存在了，就好像以前禁用javascript的用户不存在了一样。…"}, {"id": "6844903872117358599", "title": "HTML lang 没你想的那么简单", "desc": "做 web 无障碍相关的研究时，遇到的第一件事就是要给 &#x3C;html> 设置正确的 lang 属性，这么简单的一件事，想也不用就写好了：&#x3C;html lang=\"zh-CN\">，或者直接简写成 &#x3C;html lang=\"zh\">，Bingo，可以去做其它…"}, {"id": "6844903729703944206", "title": " 企鹅辅导课程详情页毫秒开的秘密 - PWA 直出", "desc": "天下武功，唯 (wei) 快(fu) 不(bu) 破(po)。 随着近几年的前端技术的高速发展，越来越多的团队使用 React、Vue 等 MVVM 框架作为其主要的技术栈。以 React 应用为例，从性能角度，其最重要的指标可能就是首屏渲染所花费的时间了。那么今天，我们要给大…"}, {"id": "6844903694614396941", "title": "如何优雅地改善程序中for循环", "desc": "有点编程基础的童鞋，都可以很快想到上面的编写方法。那不知道大家是否会跟我一样对于写for循环时，功能是没毛病，但编写起来总会觉得很不优雅，例如还要定义对应的i变量（拿上述举例）以及还要自主控制i变量的变化，这样无疑会变得繁琐起来，也会让我们编写代码效率有所下降 到这里，ForE…"}, {"id": "6956381943399186463", "title": "H5检测手机摇一摇", "desc": "要实现h5检测手机摇一摇动作可以直接调用h5原生api。但是在我的实践中发现在ios中限制条件比较多，体验还是有些区别的。"}, {"id": "6944632605690036232", "title": "HTML基础-标签分类(闭合标签，空标签，块级元素，行内元素，行级块元素，可替换元素)", "desc": "HTML中的标签从闭合的角度可以分为闭合标签和空标签。而HTML中大部分标签都是闭合标签，其他少数为空标签。 &#x3C;link />等。 位置特性进行分类的，它将元素分为三类：块级元素，行内元素，行级块元素（也称块级行元素）。 块级元素如果不设置宽度和高度，则宽度默认为父级…"}, {"id": "6844903665791139853", "title": "纯前端 Canvas 实现 HTML 转图片，自动生成微信阅读卡片", "desc": "最近公司微信公众号想使用 Apple 式的圆角阴影卡片做文章推荐。这种效果用 Adobe XD 可以轻松做出来，但是没法要求所有编辑都去学习新软件，所以就打算用前端实现一个小工具。效果如下： 更新： 已增加 Electron，可打包成 dmg 或 exe 文件运行。详见 Git…"}, {"id": "6959738554930954276", "title": "聊聊HTML5中的Web Notification桌面通知", "desc": "大家好，我是前端队长Daotin，想要获取更多前端精彩内容，关注我，解锁前端成长新姿势。 以下正文： 有的时候我们会在桌面右下角看到这样的提示： 这种桌面提示是HTML5新增的 WebPushNoti"}, {"id": "6982130977174716452", "title": "有道互动内容引擎Ceramics的业务实践", "desc": "本文将从业务场景出发，介绍 Ceramics 的技术实现，并讲述其如何高效地为高质量的互动内容生产赋能，希望能给对 Web 互动技术感兴趣的前端开发人员提供一些参考。"}, {"id": "6982376813506854919", "title": "超级可爱的动态登录页", "desc": "一、作品介绍 闲暇之余做的一个登录页面，实现了动态透明输入框、背景图自适应浏览器窗口、模拟登录验证、验证错误提示等功能。 主要技术：HTML、CSS、jQuery。"}, {"id": "6844903682669019144", "title": "求职季，前端面试送给你|掘金技术征文", "desc": "最近好多小伙伴都跳槽去找工作，我只能在心里默默的支持他们能找到一份好的工作，这份前端面试大全送给我的小伙伴们，主要说的是前端一些常用的一些知识，说的不对的地方请小伙伴们即使指正出来，自己同时也回顾下这些知识。主要分以下几个方边来说： 1.Doctype作用？标准模式和兼容模式区…"}, {"id": "6844903665422041095", "title": "微信小程序实现商城案例（赋源码)", "desc": "1、如果对你有帮助别忘了给作者 star、fork、打赏 三连。"}, {"id": "6844904104712470535", "title": "Web页面制作基础", "desc": "第一节掌握Web基础知识。 第二节掌握HTML基础知识。 第三节掌握CSS基础知识。 Internet，中文为因特网，国际互联网。 它是由所有使用公用语言互相通信的计算机连接而组成的全球网络。 WWW是World Wide Web的缩写，中文名万维网。 WWW是Internet…"}, {"id": "6919843642077429774", "title": "parcel 初体验 前端工作流轻轨", "desc": "第一次听老师讲完parcel后，脑海中就一个反应 “妙啊，太秀了”，但是之后就觉得它其实也没啥用，其实。虽然老师说过 传统的写html 太麻烦了，而且js写到主界面的话，不简约，不美观。。。 额。。。其实想想，还是有道理哈（怕挨揍），我们一起来看看吧！ Parceljs是一款新…"}, {"id": "6844903806086430733", "title": "html5录音功能实战", "desc": "由于项目需要，我们要在web端实现录音功能。一开始，找到的方案有两个，一个是通过iframe，一个是html5的getUserMedia api。由于我们的录音功能不需要兼容IE浏览器，所以毫不犹豫的选择了html5提供的getUserMedia去实现。基本思路是参考了官方的a…"}, {"id": "6977246788604395534", "title": "前端面试题整理 - HTML & CSS 篇", "desc": "未雨绸缪，整理前端面试题之HTML&CSS核心考点合集。 包含语义化、Float、居中布局、BFC、自适应......"}, {"id": "6994791325107224583", "title": "HTML5的常用知识点 | 8月更文挑战", "desc": "这是我参与8月更文挑战的第10天，活动详情查看：8月更文挑战 enmmm，昨天写的HTTP协议的文章没有推荐上首页，感觉可能不算在挑战内，不敢继续写了，今天写个HTML5的吧…… 一、Doctype的"}, {"id": "6935831676740173832", "title": "最基础的交互式 SVG 教程｜技术点评", "desc": "首先先说明一点，SVG 交互其实很简单，最困难的点，就是素材的整理以及动画的曲线、时间等的安排。因此，本文如果快的话，扫一眼代码，基本上就能够理解了。 可缩放矢量图形（Scalable Vector Graphics，SVG），是一种用于描述二维的矢量图形，基于 XML 的标记…"}, {"id": "6844903714159853582", "title": "微信公众号h5支付 以及获取code（前端部分）", "desc": "前一段时间换了一家公司，刚来给了一个项目，h5移动端页面，涉及登陆注册、微信绑定、购买等。微信支付之前没做过，不过比较简单，在这里记录一下。 第一步，先拿到code，拿到code传给后台。 这段代码填上就可以用，当用户确认授权以后返回定义的url后，url后就有code参数，然…"}, {"id": "6997282755314728991", "title": "Fieldset 标签属性含义及其用法", "desc": "fieldset 用于对表单中的控件元素进行分组。   fieldset是块级双标签，绝大多数浏览器都支持。 属性 disabled   fieldset的所有子代控件均会继承，即不可编辑状态。   "}, {"id": "6844903728663756813", "title": "理解DOM到底是什么", "desc": "文档对象模型或者说我们熟悉的“DOM”，web网页的一个界面。它本质上是允许程序读取和操作页面的内容，结构和样式的页面API。 接下来一一分解。 浏览器如何从源HTML文档转到在视口中显示样式化和交互式页面称为“关键渲染路径”。 这些步骤大致可分为两个阶段。第一阶段涉及浏览器解…"}, {"id": "6844903497356279821", "title": "前端 101：给不了解前端的同学讲前端", "desc": "大家好，今天的分享主要分为以下三个部分。 由于目前计算机专业还没有为 Web 前端技术设立专门的课程，每位同学对前端的了解程度也不一样，今天的讲座会以最浅显的方式来为大家介绍 “前端”，帮助大家建立一个基本的概念。 我们来简单地看一看 “网页展现” 的整个过程。 比如这里有一个…"}, {"id": "6844904150954672142", "title": "CSS中的间距，前端开发中各种设置间距的优点缺点及实例", "desc": "如果两个或多个元素很接近，那么用户就会认为它们以某种方式属于彼此。当对多个设计元素进行分组时，用户可以根据它们之间的空间大小来决定它们之间的关系。没有间距，用户将很难浏览页面并知道哪些内容相关而哪些内容无关。 在本文中，我将介绍有关CSS中的间距，实现此间距的不同方法以及何时使…"}, {"id": "6844904066926002189", "title": "[秃破前端面试] —— HTML5", "desc": "年前年后跳槽季，准备从面试内容入手看看前端相关知识点，旨在探究一个系列知识点，能力范围之内的深入探究一下。重在实践，针对初级前端和准备面试的同学，争取附上实际的代码例子以及相关试题～系列名字就用【秃破前端面试】—— 因为圈内大家共识，技术与发量成正比。😄希望大家早日 秃 破瓶…"}, {"id": "6844903661403897870", "title": "[译] 2018 来谈谈 Web Component", "desc": "对很多人来说，组件已经成为他们开发工作中的核心概念。组件提供了一种健壮的模型，允许我们用一个个更小的更简单的封装好的部件来搭建出复杂的应用程序。组件的概念在 Web 上已经存在一段时间了，比如在 JavaScript 生态的早期，Dojo Toolkit 已经在它的 Dijit…"}, {"id": "7000328209937989668", "title": "HTML基础", "desc": "了解HTML已经很长时间了，之前也在不停地查漏补缺。但是，并没有形成体系，对HTML中的很多元素并不是很熟悉。又一次HTML的学习，但是还是有很多地方没有扫到。"}, {"id": "6844903520953450509", "title": "从a标签为什么不能包含div标签-了解HTML5元素分类与内容模型", "desc": "我们知道按新的 HTML 规范，已经不按 inline 和 block 来区分元素类型了。所以我们在a标签里面使用div标签时候会发现a标签并不能通过改变css盒子模型的方式将div元素包含。 需要注意的是，HTML5中的这种元素分类与inline、block没有任何关系，任何…"}, {"id": "6844904086463053837", "title": "解决移动端H5下载文件提示文件类型无法识别或非法文件的问题", "desc": "解决移动端H5下载文件提示文件类型无法识别或非法文件的问题前端代码后端代码起初后端请求文件流的接口响应头content-type的值为application/vnd.ms-excel，这是.xls文件"}, {"id": "6844903830128164878", "title": "基于 HTML5 的 WebGL 楼宇自控 3D 可视化监控", "desc": "智慧楼宇和人们的生活息息相关，楼宇智能化程度的提高，会极大程度的改善人们的生活品质，在当前工业互联网大背景下受到很大关注。目前智慧楼宇可视化监控的主要优点包括: 智慧化 -- 智慧楼宇是一个生态系统，像人一样拥有感知能力、自我判断能力以及控制能力。 绿色化 -- 绿色建筑在耗能…"}, {"id": "6844904004028203016", "title": "基于 HTML5 WebGL 构建智能城市 3D 场景", "desc": "随着城市规模的扩大，传统的方式很难彻底地展示城市的全貌，但随着 3D 技术的应用，出现了 3D 城市群的方式以动态，交互式地把城市全貌呈现出来。配合智能城市系统，通过 Web 可视化的方式，使得城市管理者可以更及时地了解交通情况，城市消防，电力管理等方面的运行情况，做出处理。 …"}, {"id": "6883307101737713678", "title": "浅析 HTML5 中的 download 属性", "desc": "download是HTML5中<a>标签新增的一个属性，此属性会强制触发下载操作，指示浏览器下载URL而不是导航到它，并提示用户将其保存为本地文件，例如：如果缺少download属性，点击\"downl"}, {"id": "6844903734653222920", "title": "一文读懂H5移动开发调试技巧", "desc": "随着移动设备的高速发展，H5 开发也成为了 F2E 不可或缺的能力。而移动开发的重中之重就是掌握调试技巧，定 Bug于无形。 因为移动端操作系统分为 iOS 和 Android 两派，所以本文的调试技巧也会按照不同的系统来区分。寻找最合适高效的方式，才能让你事半功倍。 iOS …"}, {"id": "6952029129390686239", "title": "《HTML常用标签》", "desc": "HTML常用标签 a 标签/img 标签/table 标签/form标签/input标签/其他输入标签/其他标签等 他们的属性，作用，事件，以及注意事项。"}, {"id": "6870486221060538375", "title": "前端开发必会的HTML/CSS硬知识", "desc": "<imgsrc=\"https://mmbiz.qpic.cn/mmbiz_jpg/LLwjWptdnuBicftlUhm6gFDBWbAcmvPO8icNS74bLZ9m0u26icwHSQSbia9"}, {"id": "6850418110479433742", "title": "通读「阿里文娱 - 覆盖前端业务的大前端技术」", "desc": "看到同事在群里分享的一个技术小册 -- 阿里文娱 - 覆盖前端业务的大前端技术，抽空读了下，有些收获（个人向），算是读书笔记吧，做个分享。 为了解决活动页中重复劳动力开发的问题，大公司们都会有自己的一套「搭建」系统，让开发者更专注于组件的可复用、可配置。 感觉和各大公司的工程管…"}, {"id": "6966898680003559460", "title": "HTML-路径问题", "desc": "一、引入本地资源（图片） 二、引入本地资源（音频、视频） 三、两个本地网页的跳转 四、网页跳转作业"}, {"id": "6844903940690018312", "title": "Data URI详细介绍", "desc": "URI（统一资源标识符） 是 uniform resource identifier的缩写，它定义了接受内容的协议以及附带的相关内容，如果附带的相关内容是一个地址，那么此时的 URI 也是一个 URL （uniform resource locator )。 Data URI …"}, {"id": "6844903581678567437", "title": "为vue项目添加骨架屏 - xiaOp的博客", "desc": "前段时间阅读了饿了么的 PWA 升级实践一文，受益匪浅。其中构建时使用 Vue 预渲染骨架屏一节，为开发者提供了减少白屏时间，提升用户感知体验的新思路。本文将借鉴这一思路，尝试为 Vue 项目添加骨架屏。 著作权归作者所有。 商业转载请联系作者获得授权,非商业转载请注明出处。"}, {"id": "6844904045480509447", "title": "前端页面被取消的重复请求", "desc": "前段时间重构一个页面，页面中存在通过第三方JavaScript代码插入的动态广告（正常的产品需求），上线后发现第三方的广告资源存在重复请求的问题。由于控制广告插入的JavaScript代码由第三方提供，我们只负责按照他们要求的方式引入即可，所以对第三方广告代码内容并不了解，在这…"}, {"id": "6844903715250389006", "title": "Webpack之模块化优化", "desc": "当然，相信了解过前端模块化发展历史的童鞋，都应该听过IIFE、AMD、CommonJS等等，它们都是能够实现模块化的规范，直到ES2015出来后，才正式把模块化纳入其标准中。在谈到今天主题前，我们先简单讲解一下上面几种模块化方式的实现以及区别，对于后面将要讲到的webpack模…"}, {"id": "6844904097309687822", "title": "移动web必会技能--屏幕适配（物理像素CSS像素）", "desc": "屏幕适配，一直是作为一个前端开发始终逃不掉的问题，这个话题可以追溯到最开始的PC端浏览器的不同分辨率，再到移动端不同的屏幕尺寸，一直伴随着前端工程师的日常的页面开发工作。所谓屏幕适配，可以理解为一个网页元素或者网页布局，在不同尺寸，分辨率等场景下，如何呈现最佳的效果。 页面框架…"}, {"id": "6844903937955364877", "title": "H5 移动端   响应式布局开发   Hybrid 混合开发", "desc": "...... ​ input： text/radio/checkbox/button/submit/reset/hidden/file... ... ...... ...."}, {"id": "6844903501303119885", "title": "我是怎样让网站用上HTML5 Manifest", "desc": "我觉得很多网站没有使用Manifest是因为上面提到的两个原因，有些人有尝试过，但使用起来比较麻烦，离线应用价值好像不太大。但是使用Manifest还是有很多好处的，特别是像博客等之类的偏向于展示的网站，或者是在线APP，这种网站的数据动态变化频率比较低，不需要频繁地向服务请求…"}, {"id": "6844903942288048136", "title": "基于 HTML5 WebGL 的 3D 风机 Web 组态工业互联网应用", "desc": "国家也敏锐意识到时代特性并及时把握时机，培育新的经济增长点，推动“中国制造”升级,实现工业大国到工业强国的质变，而诸多的业内人士也正在努力完成对自己的“升级”与“改造”，而大数据的数据可视化与工业的结合，实现了工控的可视化，大大地提高工控管理效率，风险把控能力，产业流程有效监督…"}, {"id": "6921650447702818829", "title": "HTML部分面试题及解析", "desc": "html部分DOCTYPE有什么作用？怎么写？列出常见的标签，并简单介绍这些标签用在什么场景？页面出现了乱码，是怎么回事？如何解决？title属性和alt属性分别有什么作用？data-属性的作用？We"}, {"id": "6844903726914732039", "title": "tbody 滚动条设置", "desc": "文章介绍了如何将滚动条设置在tbody标签上，并且表格整体和未设置滚动条一致；此外补充了一些table的冷门姿势。 要想给tbody一个超出的滚动条，其实只需要给tbody设置一个固定height，以及overflow:auto也就是超出添加滚动条。但是table固有的disp…"}, {"id": "6981729100763234318", "title": "HTML常用标签", "desc": "a标签 常用属性 1、href 作用： 跳转外部页面 跳转内部锚点及某个元素 跳转邮箱或电话 取值： 网址（如：https://baidu.com） 文件路径（如：/a/b/c/index.html）"}, {"id": "6844903620131946510", "title": "使用Canvas操作像素", "desc": "现代浏览器支持通过<video>元素播放视频。大多数浏览器也可以通过MediaDevices.getUserMedia() API访问摄像头。但即使这两件事结合起来，我们也无法直接访问和操纵这些像素。 幸运的是，浏览器有一个Canvas API，允许我们使用JavaScript…"}, {"id": "6935086953180332063", "title": "谈谈移动端开发的像素和视口", "desc": "设备的尺寸指的是对角线的长度，单位是英寸，1英寸=2.45厘米。接下来谈谈这次的重点，像素和视口。 在移动端开发当中，我们经常可以听到物理像素、屏幕分辨率、像素密度、css像素、逻辑像素、设备独立像素这些专有名词，我相信对于一次听说这些名词的小伙伴来说，肯定是有点懵逼的，心里想…"}, {"id": "6844903575831707655", "title": "代码分享：体现js灵活性的def.js", "desc": "def.js是之前在研究js继承的时候发现的一个很有趣的js，恰巧现在前端团队中每周进行一次分享，就翻出来整理成一篇小文章先看一段def.js实现继承的方式可以看到是以<实现的Ninja继承于Pers"}, {"id": "6844903496492253191", "title": "flexbox的space-between并不是我们想要的样子", "desc": "但是FlexBox布局虽然枪弹但并不能完全呈现以上布局，于是我们需要结合FlexBox作下小的改动即可实现。 其实很简单，我们只要在后面加入一些等宽但是占高为0等隐藏元素即可轻松实现。"}, {"id": "6920135454092345358", "title": "HTML5 新增 API", "desc": "由上面代码可以看出，document.querySelector() 可以获取到任意选择器的dom元素，当有两个相同的class标签时，则取到第一个class标签的dom元素。 由上面代码可知，当我们使用 document.querySelectorAll() 获取dom 元素…"}, {"id": "6905737887489212424", "title": "熬夜整理最全面的HTML字符实体，很下饭", "desc": "HTML中&#x3C;，>，&#x26;等有特殊含义（&#x3C;，>，用于链接签，&#x26;用于转义），不能直接使用。这些符号是不显示在我们最终看到的网页里的，那如果我们希望在网页中显示这些符号，该怎么办呢？ 这就要说到HTML转义字符串（Escape Sequence）了…"}, {"id": "6844904137264480269", "title": "前端人应该知道的网站和工具", "desc": "最近有很多初学者在后台留言说：“我是一个小白，怎么才可以快速入门前端呀？”。关于这个问题其实不太好回答，因为这个问题就好像说我是一个穷光蛋如何快速致富一样的道理。但是也不是没有办法回答你这个问题，毕竟掌握一门知识点还是有它的路径的，不能说路径一样，但起码可以参考。 接下来我就以…"}, {"id": "6844903688096448520", "title": "Angular开发实践（八）： 使用ng-content进行组件内容投射", "desc": "在Angular中，组件属于特殊的指令，它的特殊之处在于它有自己的模板（html）和样式（css）。因此使用组件可以使我们的代码具有强解耦、可复用、易扩展等特性。通常的组件定义如下： 假设现在有这样的需求，这个组件能够接受外部投射进来的内容，也就是说组件最终呈现的内容不仅仅是本…"}, {"id": "6981363436609339429", "title": "《HTML常用标签》", "desc": "学习HTML标签的笔记：HTML常用标签 a标签 img标签 table标签 form标签 input标签的用法以及举例"}, {"id": "6844903938030829581", "title": "基于 HTML5 Canvas 的 3D 渲染引擎构建生产管控系统", "desc": "这一期为大家带来一个非常好玩的 demo，我们制作一套自己的 3D 管道控制系统，运用了（ http://www.hightopo.com ）HT 的 Graph3dView 组件通过对 WebGL 底层技术的封装，与 HT 其他组件一样，基于 HT 统一的 DataModel…"}, {"id": "6844903505539366919", "title": "Vue代码模块定位插件vue-component-finder介绍", "desc": "vue-component-finder是一款用于Vue项目的代码模块预览与快速定位的chrome插件，对于文件目录繁多的vue项目，可以使用该插件快速查看组件对应的代码模块，以及快速打开IDE修改组件代码。 4.运行项目开发构建npm run dev，打开页面，鼠标移动到组件…"}, {"id": "6844903870571282445", "title": "前端规范之HTML 规范", "desc": "优秀的项目源码，即使是多人开发，看代码也如出一人之手。统一的编码规范，可使代码更易于阅读，易于理解，易于维护 自闭合标签（self-closing），无需闭合。例如：area、base、br、col、command、embed、hr、img、input、keygen、link、…"}, {"id": "6844903950244642824", "title": "mPaaS H5 容器知识清单 | FAQ · 第三期", "desc": "Hybrid 开发模式已不是什么新鲜的话题，不仅可以快速发布新业务，同时无需考虑 App 发版时间，为业务更新迭代提供了极强的灵活性。相比于 Web 开发，Hybrid 开发模式提供了丰富的设备 API，让业务形态可以更加多元和丰富。 mPaaS 离线包源自于支付宝原生方案，经…"}, {"id": "6844903683390439431", "title": "[译] ./dogs.html 和 /dogs.html 间有什么区别？", "desc": "它们都是 URL 路径。但是他们名字不同。 全限定 URL 的功能再明显不过 —— 它会指向一个确切的页面。所以，让我们再来看看前两个例子。 如果你在 cats.html 上放置了一个链接到 /dogs.html（一个“绝对”路径）的超链接，那么它将指向 404 页面 —— 这…"}, {"id": "6844903924260929550", "title": "基于 HTML5 Canvas 的拓扑组件开发", "desc": "也就是说如果你有过使用 Canvas 的开发经验你就可以来封装自己的组件。 下面我以一个进度环为例，来探究一下如何使用ht.js封装出一个拓扑组件。 ht.Default.setImage('circle-progress-bar', { width: 100, height:…"}, {"id": "6920515741305274376", "title": "浏览器渲染原理", "desc": "mvvm/mvc/virtual dom/ dom diff...... ..."}, {"id": "6844903541870428168", "title": "HTML5 中的 data-* 如何处理数据详解", "desc": "前端页面利用 data-* 来存储数据，我们经常见到 ，我们在微信公众号的文章源码中，电商网站的多媒体资源处理中，web游戏的开发中都见到过，所以弄清楚它的来龙去脉还是很有必要的。"}, {"id": "6850418116342923271", "title": "html、body元素的高度问题", "desc": "最近看别人的代码，总有html,body{height:100%}这行代码，不知道为什么，特此记录一下。 按理说.box的高度应该是浏览器的50%，但是事实并非如此，html body div 的高度都为0。 这里说一下<！DOCTYPE html>，启用标准模式，标准模式下的…"}, {"id": "6998415482072072223", "title": "layui-select 或其他选择器组件的滚动显示异常解决方案", "desc": "layui-select 或其他选择器组件的滚动显示异常优化。解决问题：点击下拉框出现时，选择项下拉框居然被覆盖在下方，观察到右侧出现滚动条或将容器顶起，显示不全。"}, {"id": "7007999630201847844", "title": "前端入门", "desc": "第一个网页，初学者的实际操作，HTML5的基础知识内容，对HTML5进行简单的了解，刚开始学习使用。"}, {"id": "7006320611198763016", "title": "[html常识]关于js和css在html中的位置", "desc": "html中js和css的位置——今天下班挺早，但是回来宿舍很困。于是去附近球场投篮，虽然累，但是投进52球，感觉不错"}, {"id": "7005204016443424805", "title": "# HTML&&CSS记录笔记第六天 盒子模型", "desc": "前提声明：所有内容均为之前学习过程中的笔记和个人总结，（无法避免雷同，敬请谅解，如有侵权，私信删除）。如有错误之处请各位大佬不吝赐教。"}, {"id": "6974640230401835039", "title": "viewport（读后感）", "desc": "引言 通过阅读了Peter-Paul Koch关于研究viewport的三篇系列文章以及stackoverflow上关于viewport的描述之后的meta标签总结"}, {"id": "6844903920377004039", "title": "Input标签开发小技巧", "desc": "<input>标签是我们前段日常开发使用的非常多的一个元素,但是我敢肯定，我们有不少同学都只用到了就那么几个type类型，如：text password button checkbox radio search number file等,还有属性，如：value id name…"}, {"id": "6907932047000469511", "title": "URL从输入到页面展示", "desc": "连接建立完毕后，开始传输数据，TCP链接通过拥塞控制算法（参考文章）。第一个响应包通常是14KB大小，客户端收到之后，下个包的大小会增加到之前包的2倍，直到达到设定的阈值或者遇到丢包。通过反复地探索网络传输能力来确定适合的传输速度，页面内容（只包含HTML内容）小于14KB对于…"}, {"id": "6844903504633397256", "title": "小程序和vue简单对比", "desc": "简单聊两句小程序是微信开发的一种不需要下载安装即可使用的应用，目前只能在微信中使用，开发使用微信的小程序开发语言，vue是尤雨溪大神开发的一套构建用户界面的渐进式框架，可以很好的开发单页面应用程序，开发语言js，或者不久将支持的ts数据绑定对比…"}, {"id": "6844903907420798984", "title": "关于fis框架中fis3-smarty语法总结（一）", "desc": "Smarty是一个使用PHP写出来的模板引擎，一说模板引擎，其实就是再html中插入可以直接渲染的数据。这个是为了让前端和后台分离的一种管理模式。 代码由服务端直接渲染，可以避免js后期插入的延迟，页面渲染速度也很快。而服务端只需要给数据，至于怎么用或者修改页面的时候，不用后台…"}, {"id": "6844903538284298248", "title": "带你玩转小程序开发实践｜含直播回顾视频", "desc": "而所谓的运行环境，对于任何语言的运行，它们都需要有一个环境——runtime。浏览器和 Node.js 都能运行 JavaScript，但它们都只是指定场景下的 runtime，所有各有不同。而小程序的运行环境，是微信定制化的 runtime。 浏览器控制台下运行时，当前页面是…"}, {"id": "6844903966187192333", "title": "HTML中的attribute属性和JavaScript中的property属性的区别", "desc": "property：是js获取的DOM对象上的属性值，比如a，你可以将它看作为一个基本的js对象。 这个节点包括很多property，比如value，className以及一些方法onclik等方法。 从上图中我们可以看出，一个js对象有很多property，该集合名字为prop…"}, {"id": "6910943158813589517", "title": "localStorage和sessionStorage的基本使用和区别", "desc": "1. WebStorage简介 在WebStorage出现之前，浏览器中存储本地数据基本使用技术的只能是cookie，并且cookie需要频繁的地服务器端进行传输交互。Web Storage是HTML5标准提出的新的浏览器本地存储方案，它的出现克服了由cookie带来的一些限制…"}, {"id": "6844903889670684679", "title": "ios设备使用iframe宽度超出屏幕", "desc": "在做公司官网h5项目时遇到iframe在苹果X手机上右侧超出屏幕的问题，感觉像是被截断一样，但是在其他手机上显示正常。 问题原因：页面a利用iframe嵌入了b，同时设置iframe的宽度为100% ，但是页面b的实际宽度要大于外层设置的100%。 正常情况下，页面b的显示宽度…"}, {"id": "6844903543539761165", "title": "2017 年 CodePen 优秀作品盘点", "desc": "2017 年最后一篇文章，与大家分享 2017 年 CodePen 上的一些优秀作品。感谢大家一直以来的支持，也提前祝大家新年快乐！ 2018 加油 <(￣︶￣)↗[GO!]"}, {"id": "6844903495938605069", "title": "一篇包含了react所有基本点的文章", "desc": "去年，我写了一本关于学习React.js的小书，原来是大约100页。 今年我要挑战自己，把它归纳为一篇文章。 本文不会涵盖什么是React，或者为什么要学习它。 相反，这是面向已经熟悉JavaScript并熟悉DOM API基础知识的人，对React.js的基础知识的介绍。 以…"}, {"id": "6844903604327809031", "title": "炫酷H5中序列图片视频化播放的高性能实现 « 张鑫旭", "desc": "这篇文章发布于2018年05月1日，星期二，19:12，归类于js实例。阅读3631次,今日118次byzhangxinxufromhttp://www.zhangxinxu.com/wordpres"}, {"id": "6844903614838751245", "title": "用 js 获取页面元素的位置图文总结", "desc": "在做一些组件和交互时，常常需要动态获取鼠标点击位置、元素宽高和元素位置信息，网上有很多种方法，但自己没有总结过，不知道各种方法的优缺点和兼容性，在此专门的总结一下。 这些关于视觉的内容都被定义在了 W3C 的 CSSOM View Module 模块中，里面有详细的接口定义和说…"}, {"id": "6917522699502190605", "title": "移动端触摸事件 事件防误触 以及 1 物理像素问题", "desc": "比如长按某个文本时，能够选中复制。这样对于很多业务是不符合逻辑的，因此我们先来阻止默认事件。 但是阻止默认行为之后，有两个很大的缺陷就是，所有的滚动条都会失效 和 会出现事件点透现象。 事件点透，两个重合的元素，明明事件要执行的是第一个元素的方法，但是却还执行了另一个元素的方法…"}, {"id": "6844903549114171405", "title": "京东单品页前端开发那些不得不说的事儿", "desc": "详情页也叫做单品页，域名以「item.jd.com/skuid.html」为格式的页面。是负责展示京东商品 SKU 的落地页。主要任务是展示和商品相关的信息，如：价格、促销、库存、推荐，从而引导用户进入购买流程。同时单品页有很多版本。一般分为两类。一类我们通常看到的「通用类目详…"}, {"id": "6844903599588261901", "title": "DPlayer - 开源的 HTML5 弹幕视频播放器，帮你轻松搭建弹幕视频播放", "desc": "DPlayer is a lovely HTML5 danmaku video player to help people build video and danmaku easily. DPlayer supports: Streaming formats HLS FLV M…"}, {"id": "6890193575301087246", "title": "这可能是最详细的localStorage 和 sessionStorage 讲解", "desc": "localstorage 在浏览器的 API 有两个：localStorage 和sessionStorage，存在于 window 对象中：localStorage 对应 window.localStorage，sessionStorage 对应 window.session…"}, {"id": "6844903506558599176", "title": "浏览器的渲染：过程与原理", "desc": "本文不是关于浏览器渲染的底层原理或前端优化具体细节的讲解，而是关于浏览器对页面的渲染——这一过程的描述及其背后原理的解释。这是因为前端优化是一个非常庞大且零散的知识集合，一篇文章如果要写优化的具体方法恐怕只能做一些有限的列举。 然而，如果了解清楚浏览器的渲染过程、渲染原理，其实…"}, {"id": "6844903570546901006", "title": "Web 前端开发日志（三）：HTML 节点的内存泄露问题", "desc": "对 DOM 节点的引用会使得节点一直在内存中存储而不会进行释放. 问题... 我们来用 Chrome 开发者工具中抓一下 Heap 观察一下，看看是不是能找到 Detached DOM. 我们在搜索框中输入 detached，看起来并没有 Detached 节点. 最早的代码问…"}, {"id": "6904528609977827336", "title": "HTML标签语义化你再不看就OUT了", "desc": "语义是指对一个词或者句子含义的正确解释。很多html标签也具有语义的意义，也就是说元素本身传达了关于标签所包含内容类型的一些信息。例如，当浏览器解析到&#x3C;h1>&#x3C;/h1>标签时，它将该标签解释为包含这一块内容的最重要的标题。h1标签的语义就是用它来标识特定网页…"}, {"id": "6952757438902861854", "title": "前端面试题总结一（HTML和CSS）", "desc": "答：我平时写的代码都是HTML语义化的代码。我理解的HTML语义化简单来说就是使用正确的标签做正确的事情，例如段落要写成p标签，标题要写h1~h6。使用恰当语义的 HTML 标签，让页面具有良好的语义和结构，从而方便人类和机器都能快速理解网页内容。 2.meta viewpor…"}, {"id": "6922075006943887368", "title": "HTML：初次见面，先做个自我介绍", "desc": "在开始学习之前，咱们得先来说一说 HTML 是谁，做什么的，还有它的前世今生。为什么要知道这些？这就好比你要和一个妹子谈恋爱，你总得先知道她叫什么，做什么工作的，家庭背景之类的信息吧！不然，这场恋爱谈得可是够不靠谱的。为什么是和妹子谈恋爱？没错，我可是个 24K 纯老爷们。 咱…"}, {"id": "6844903840127385613", "title": "【前端帮帮忙】第6期 移动端使用video标签需要注意的一些问题", "desc": "相信使用过<video>标签的都知道，<video>标签在pc端跟手机端显示的样式并不一样，而且还有个很蛋疼的就是微信中内置的浏览器，播放的时候会自动全屏问题。 接下来我们通过例子来分析下使用过程中可能碰到的一些问题，供大家参考。 这是代码，只加了controls=\"contr…"}, {"id": "6844903824558145543", "title": "nodejs检测因特网是否断开方案", "desc": "最近在用Electron开发一款应用，其中有涉及到检测因特网是否断开的需求。Electron基于Chromium和Node.js，让你可以使用HTML、CSS和JavaScript构建应用。所以Electron提供nodejs、浏览器两套运行环境。 笔者最先考虑到的方案HTML…"}, {"id": "6844903502217478157", "title": "浏览器性能优化-渲染性能", "desc": "在浏览器渲染过程与性能优化一文中（建议先去看一下这篇文章再来阅读本文），我们了解与认识了浏览器的关键渲染路径以及如何优化页面的加载速度。在本文中，我们主要关注的是如何提高浏览器的渲染性能（浏览器进行布局计算、绘制像素等操作）与效率。 很多网页都使用了看起来效果非常酷炫的动画与用…"}, {"id": "6985320501744762917", "title": "HTML的秘密(2)常用标签及属性盘点", "desc": "关于HTML文档头部里面的关键标签在上一篇已经详细介绍过了, 我在今天这篇文章里会盘点其他常用标签的含义和效果. 基础类与格式类 页面显示效果: 超链接<a> 图像类和图像映射 所谓图像映射, 就是将"}, {"id": "6985539792511434759", "title": "《图解HTML》第五节 HTML编码规范", "desc": "通过前面的四节，我们对HTML已经有了一个基本的认识和使用。可是，当我们写了很多的HTML时，我们会发现即使一样的展示效果，可是我们却写得全然不同。 例如： 通过上面的例子我们会发现，元素的样式，是可"}, {"id": "6844903837665345550", "title": "【译】10 个你不知道你需要的 HTML 元素", "desc": "大家都说简历没项目写，我就帮大家找了一个项目，还附赠【搭建教程】。 我听过 “HTML很容易” 这种情绪的次数比我想象的要多。 虽然我同意 HTML 可能比其他编程语言更容易学习，但你不应该认为它是理所当然的。 HTML 是一种功能强大的标记语言，可用于为我们的 web 应用程…"}, {"id": "6976210547817578509", "title": "XML语言数据读写理解3", "desc": "首先先把我们要读取的xml文件搞上来： ` ` 我们简单看一下用浏览器显示的这个数据的结构： 可以说这个XML的层次以及较为复杂了，已经比得上很多应用程序的数据结构复杂度了，那么我们就尝试一点一点将这"}, {"id": "6979017258718724133", "title": "你可能不知道的几个常用的 HTML 属性", "desc": "contenteditable contenteditable 表示元素内容是否可被用户编辑。它可以有以下值： true 或者空字符串，表示元素是可被编辑的； false 表示元素不可被编辑。 inh"}, {"id": "6990879881093447693", "title": "layui 在数据表格中显示rate星级 & 设置最低分", "desc": "layui 在数据表格中显示rate星级 & 设置最低分 layui 在数据表格中显示rate星级 & 设置最低分"}, {"id": "6844903590062997517", "title": "HTML5-离线缓存（Application Cache）", "desc": "本文介绍了离线缓存的原理、优势、使用方法更新方法等。"}, {"id": "6994055131524235277", "title": "【JavaWeb基础 · HTML表格标签】", "desc": "“这是我参与8月更文挑战的第8天，活动详情查看： 8月更文挑战” 想想我们平时自己画表格怎么来画，是不是先画一个框，然后画每一行，最后来画单元格。 那HTML的表格是怎么画的呢，同样也是这样画的，下面"}, {"id": "6990875177932455950", "title": "kindeditor使用|自定义工具栏|结合ThinkPHP使用", "desc": "kindeditor使用|自定义工具栏|结合ThinkPHP使用 kindeditor使用|自定义工具栏|结合ThinkPHP使用"}, {"id": "6844903613030989832", "title": "不同页面通信与跨域", "desc": "0. 前言 相信跨域有什么手段，大家都背得滚瓜烂熟了。现在我们来做一些不在同一个tab页面或者跨域的实践。 1. localstorage localstorage是浏览器同域标签共用的存储空间，所以可以用来实现多标签之间的通信。html5出现了一个事件： onstorage，…"}, {"id": "6844903616185106446", "title": "几个有用的Web API——网络状态API", "desc": "主要内容: 不调用app的bridge，JS判断用户设备是否在线、所用网络类型， 该API的特点就是功能虽简单，但对用户却意义重大； 用法简单，一用就会，一看就记住了。：） 望重拍"}, {"id": "6844903958457090056", "title": "基于 HTML5 WebGL 的垃圾分类系统", "desc": "垃圾分类，一般是指按一定规定或标准将垃圾分类储存、分类投放和分类搬运，从而转变成公共资源的一系列活动的总称。分类的目的是提高垃圾的资源价值和经济价值，力争物尽其用。垃圾在分类储存阶段属于公众的私有品，垃圾经公众分类投放后成为公众所在小区或社区的区域性准公共资源，垃圾分类搬运到垃…"}, {"id": "6891888450501361677", "title": "HTML5系列之新的API（新操作方法、文件获取、地理定位、音视频、摄像头等）", "desc": "获取单个元素,参数可以是我们任意的选择器。 我们可以通过data-自定义属性名来给元素添加自定义的属性名。一旦添加完成之后。通过JS可以获取以及设置自定义属性。 其次，通过FileReader读取文件。读取完文件之后，会将结果存储在result属性中，而不是直接返回 windo…"}, {"id": "6987399976229797925", "title": "HTML常用标签", "desc": "a标签 <a href=”跳转目标” target=”目标窗口的弹出方式”>文本或图像 单词anchor的缩写，意为：锚 属性 作用 href hyper reference 用于指定链接目标的url"}, {"id": "6933158851579494408", "title": "web components 标准介绍", "desc": "定义：Web Components 是一套技术，允许您创建可重用的定制元素（它们的功能封装在您的代码之外）并且在您的web应用中使用它们。 作用： web components 用于做跨技术栈的可重用组件；从根本上彻底解决css样式的全局污染问题。 Custom element…"}, {"id": "6935718044878503950", "title": "移动端适配的问题", "desc": "因为我们开始都会用&#x3C;meta name=\"viewport\" content=\"width=device-width\"/>这种方式来做最基本适配，这就会导致每个布局视口的大小都不一样，比如说iphone6是375 * 667、iphone6 plus是414 * 73…"}, {"id": "6909698127689220109", "title": "【HTML】H5新特性有哪些？看这篇文章就够了", "desc": "H5拥有6种新特性"}, {"id": "6844904127282036749", "title": "那些年，我们丢失的信息无障碍化意识", "desc": "以前从来没有关注过盲人是怎样生活的，因为我的身边没有盲人。如果有人跟我提起盲人，我会最先想到盲人推拿按摩。不知道是不是很多人跟我一样，不了解盲人能干什么，认为他们只能在家听听广播，晒晒太阳，没有娱乐，也没有工作。 其实，盲人可以在互联网上学习、购物、娱乐、沟通、甚至工作。来看一…"}, {"id": "6844904116758511624", "title": "HTML Base标签的使用技巧-为页面设置统一的资源地址", "desc": "一个HTML中只能有一个<base>，并且这个<base>的href属性必须有值。如果有多个的话，只会使用第一个<base>标签。 <base>标签需放在<head>里面，并且得是<head>的第一个子元素。 该属性设置的基路径可以在JS中使用 document.baseURI…"}, {"id": "6844903591765868551", "title": "你应该知道的前端--渲染原理", "desc": "我们很容易将浏览器引擎看作是一个黑盒子,就像电视数据一样,黑盒子会指出显示的数据。那么浏览器是怎么把资源/数据转换到我们所看到的网页的呢 HTML描述了网页的结构。为了理解HTML,浏览器引擎首先必须将其转换为DOM(文档对象模型)。浏览器引擎中拥有解析器,它用于将HTML中的…"}, {"id": "6844903866253705224", "title": "抛开框架，原生 JS 实现微信 MarkDowm 编辑器📝", "desc": "在项目文件夹下新建 index.html 文件，布局代码如下，因为真的实在是太简洁了，就不多做解释了。 看到这样写页面的感觉是不是非常怀念，自从会了框架之后，大家多久没写过这样的页面了😭。代码中引入了 css 文件夹中的 index.css 文件和 js 文件夹中的 inde…"}, {"id": "6844903669129838600", "title": "让你的网页开口说话 —— audioContext API", "desc": "主要内容： 介绍了浏览器的API —— audioContext，六个demo由简至繁展示方法的使用"}, {"id": "6844904198648102919", "title": "一个页面仔必备的知识清单", "desc": "「本文主要梳理一些前端画界面的一些必会 css 属性和技巧，读完之后并不能让你成为你的界面画的很快很美，但能让你知道画界面学会这些就够了。想要很快很美，实战/练习，逃不掉的~」 过渡用于简单的初始化效果，动画用于复杂的效果制作,学习这一章节最重要的是自己实现尝试，因为过度和动画…"}, {"id": "6844903544705810439", "title": "理解flexible.js所需的viewport知识", "desc": "这在这篇文章介绍了viewport的三种视口visual layout ideal、以及通过此三视口分析了淘宝的flexible.js方案的实现原理。"}, {"id": "6946857446304382983", "title": "惊呆了，没主动复制就触发复制事件(document.oncopy )？原来是这样", "desc": "用户只是简单的说了几句，大家都表示不可思议，都表示这不可能。最后屏幕共享的时候，果然如此，简直让人怀疑人生。一用鼠标选中了文本，页面就弹出不能复制，大概是这样的表现: 接下来加了个断点，还是会触发，一样的过程，看起来也没啥区别。于是，开始怀疑用户的插件，瞄了一眼，没有任何可疑的…"}, {"id": "6984444674563899422", "title": "HTML与CSS", "desc": "HTML和 CSS的一些总结。 主要为CSS内容，包括了盒模型，BFC，flex布局，定位问题，如何居中，响应式等"}, {"id": "6844904119069589517", "title": "从零开始：你知道的、不知道的DOCTYPE", "desc": "在开始学习前端之前，你总会需要创建一个 HTML。在 HTML 标签之前，还有一个你可能不会注意到的<!DOCTYPE>标记。虽然它不显眼，但我们需要知道它为什么存在。 HTML 文件中，<!DOCTYPE>是必须的，需要放到整个文档的顶部，格式为<!DOCTYPE html>…"}, {"id": "6943122819240689694", "title": "HTML5 Canvas画布", "desc": "canvas元素用于在网页上绘制图形。 HTML5元素用于图形的绘制，通过脚本(通常是JavaScript)来完成. 标签只是图形容器，您必须使用脚本来绘制图形。 你可以通过多种方法使用canvas绘制路径,盒、圆、字符以及添加图像。 表格中的数字表示支持元素的第一个浏览器版本…"}, {"id": "6949563728236904461", "title": "「XML」 随笔知识点", "desc": "今天在图书馆整理自己以前学过的知识点，发现自己做了这一篇学习记录。只不过很乱且很杂，现在重新整理一次，记录一下。毕竟是以前自己摸索学习过的一段日子呀～"}, {"id": "6917551174375702535", "title": "react-router hash mode 转为 history mode 踩坑记", "desc": "结果你猜怎么着，点击到某个路由，手动刷新后白屏了。 其查找的是根路径下的文件，所以能正确命中对应的资源。 经测试，http://localhost::8080/square/publish 路径下放的资源，它会在http://localhost::8080/square/ 这个…"}, {"id": "6844903569582211080", "title": "基于 HTML5 Canvas 的交互式地铁线路图", "desc": "前两天在 echarts 上寻找灵感的时候，看到了很多有关地图类似的例子，地图定位等等，但是好像就是没有地铁线路图，就自己花了一些时间捣鼓出来了这个交互式地铁线路图的 Demo，地铁线路上的点是在网上随便下载了一个，这篇文章记录自己的一些收获（毕竟我还是个菜鸟）以及代码的实现，…"}, {"id": "6844903649584349192", "title": "AMP技术详解", "desc": "Google 前沿的 AMP 「 Accelerated Mobile Pages 」技术，能使用户从搜索引擎当中进入我们页面的体验得到一个极大的提升。 AMP HTML 本质上是使用自定义 AMP 属性扩展的 HTML。最简单的 AMP HTML 文件如下所示： AMP 网页…"}, {"id": "6844904126153752583", "title": "浏览器缓存 html以及Refused to apply style from 'xxx.css' because its MIME type...", "desc": "今天踩的坑是浏览器缓存 html，以及 Refused to apply style from 'xxx.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and …"}, {"id": "6944919641152028709", "title": "学习 iframe", "desc": "iframe 可以在一个网站里面嵌入另一个网站的内容。 浏览器搜索引擎一般不能解析 iframe页面，不利于 SEO （搜索引擎优化）的搜索。 iframe 会阻碍页面的 onload 事件，给用户页面加载很慢的感觉。 及时触发页面的 onload 事件是很重要的，onload…"}, {"id": "6844903829452881934", "title": "基于 HTML5 WebGL 的计量站三维可视化监控系统 Web 组态工控应用", "desc": "如本案例所示，是一个基于 HTML5 WebGL 技术实现的计量站三维可视化监控系统，在本案例中，具体宏观的展示一个油田站点的整体场景，然后点击可以进入内景看到油田计量站内景的具体情况，同时可以看到各个设备的参数的当前状态。 确认功能需求后就可以开始实施实现，动手实现之前要先确…"}, {"id": "6844903842308423688", "title": "CSS之定位和堆叠属性", "desc": "相对元素是相对于在页面中原来的位置，如果给了元素一个相对定位那么元素在页面中原来的位置会占位。 一般情况下，相对定位和绝对定位在页面中是成对使用的，给子元素一个x绝对定位给父元素一个相对定位。 如果子元素有绝对定位那么不受父元素padding的影响。 如果子元素有浮动，父元素有…"}, {"id": "6898286692635082765", "title": "HTML常用标签", "desc": "&#x3C;ol>标签是一个有序列表容器（ordered list），会在内部的列表项前面产生数字编号。 start属性的值是一个整数，表示数字列表的起始编号。 type属性指定数字编号的样式。目前，浏览器支持以下样式。 &#x3C;ul>标签是一个无序列表容器（unorder…"}, {"id": "6844904103445790733", "title": "关于图片转换的一些事", "desc": "前几天做项目遇到了一个问题，如何把base64的格式的图片编码转换为图片的File对象。然后网上也找到了一下具体的实现方法，当中涉及到了一些编码转换的知识，因此特地来总结一下。 百度百科的解释是：网络上最常见的用于传输8Bit字节码的编码方式之一，Base64就是一种基于64个…"}, {"id": "6844903824767844365", "title": "什么是重绘repaint?什么是回流reflow?", "desc": "不要把节点的属性值放在一个循环里当成循环里的变量。 将频繁重绘或者回流的节点设置为图层，图层能够阻止该节点的渲染行为影响别的节点。比如对于 video 标签来说，浏览器会自动将该节点变为图层"}, {"id": "6844903509159051278", "title": "uiw 1.2.14 发布，基于 React 16 的组件库", "desc": "发布， 高品质的UI工具包，React 16+的组件库。 🐞 Paging组调整样式解决默认样式导致排版问题. - 901e511 📝 docs:更新文档样式. - f773502 🐞 fix: 初始化所有组件初始字体大小. - daeda01 🐞 Checkbox组件…"}, {"id": "6844904135700004872", "title": "前端新手小白HTML&CSS学习笔记一", "desc": "<!DOCTYPE html>:文档类型声明，表示该文件为 HTML5文件。<!DOCTYPE> 声明必须是 HTML 文档的第一行，位于 <html> 标签之前 <html></html>标签对：<html>标签位于HTML文档的最前面，用来标识HTML文档的开始；</htm…"}, {"id": "6844904025146540045", "title": "HTML5(二)——表单，音频，视频，属性", "desc": "表单html表单：html5新增表单：1.email校验邮箱2.url校验地址3.number限定只能是数字属性（max=“”，min=””，step=””）4.range滑块（max，min,ste"}, {"id": "6902326587585380365", "title": "前端编程之路一一HTML常用列表标签", "desc": "通常情况下使用的列表有三种，有序列表、无序列表和自定义列表。 不管是有序无序还是自定义列表，列表项内部都可以使用段落、换行符、图片、链接以及其他列表等等。 到底有序套无序还是无序套有序，甚至相互套来套去...就看你喜欢和需求了。 基本上常用就这三个常用的列表，还有目录列表之类，…"}, {"id": "6844903636112244750", "title": "[译] 单元素组件模式简介：使用 React 或其它组件库创建可靠组件的规则和实践", "desc": "使用 React 或其它基于组件的库创建可靠构建模块的规则和最佳实践。 在 2002 年 — 当我开始构建网页的时候 — 包括我在内的大多数开发者都使用 <table> 标签来构建网页布局。 直到 2005 年，我才开始遵循网页标准。 我了解了语义化和无障碍性，然后开始使用正确…"}, {"id": "6844903496240594957", "title": "Node.js+jade抓取博客所有文章生成静态html文件", "desc": "这个周末，恶补了一下jade模板引擎，就为生成静态html文件，这篇文章需要知道jade以及看过我的上篇文章，我先给出他们的参考链接: [js高手之路]Node.js模板引擎教程-jade速学与实战1-基本用法 [js高手之路]Node.js模板引擎教程-jade速学与实战2-…"}, {"id": "6844904166406504461", "title": "HTML 入门笔记1", "desc": "HTML 最早是由蒂姆-伯纳斯-李在一篇名为HTML Tags的文章提及发明的。HTML 的全名是\"HyperText Markup Language\"，即“超文本标记语言”，它的最大特点就是支持超链接，可以跳转到其他网页，从而构成了整个互联网。HTML 从上个世纪90年代出生…"}, {"id": "6844903993043320839", "title": "渲染树的形成", "desc": "DOM（Document Object Model（文档对象模型）） 是对 HTML 文档结构化的表述，后端服务器返回给浏览器渲染引擎的 HTML 文件字节流是无法直接被浏览器渲染引擎理解的，要转化为渲染器引擎可以理解的内部结构，这个结构就是 DOM。"}, {"id": "6844903641313198093", "title": "Web 页面 Meta 的 Referrer Policy", "desc": "一个图片，本站或者外站，都要想办法拿到 近期在一个项目中，需要引用大量外部网站的图片，竟意外的发现在生成环境中没有问题，但在本地的开发环境下，有部分图片无法显示。于是就开启了跨域图片显示的斗争中。"}, {"id": "6870517150377852936", "title": "初次接触html相关概述和基本结构", "desc": "新接触html,七拼八凑了一部分资料记录下基本内容.感觉跟用PS或者corel画个网页差不多,就是图层上堆元素,只不过一个用工具一个用代码.... HTML是 HyperText Mark-up Language 的首字母简写，意思是超文本标记语言，超文本指的是超链接，标记指的…"}, {"id": "6954374184835219492", "title": "HTML入门笔记1", "desc": "HTML概述 诞生于1990年左右，Tim Berners - Lee 发明。HTML常用标签及全局属性"}, {"id": "6899398065388683272", "title": "前端入门第三步：端静态网页应用开发及项目", "desc": "之前有事儿，再加上自己很懒，所以说第三步咕咕咕到JS后面了。。。 人们看一个物体时，一般会先注意到中间位置，尤其是中间位置的那四个顶点（那四个点就暂时叫做焦点吧）。 对比一下，是不是感觉第一个中两个矩形不一样大，第二个中两个矩形大小相识，这就是**因为占据 焦点 **位置不同，…"}, {"id": "6916450524678062087", "title": "HTML常用标签(a,img,table,form,lable和一些之前没注意到的点)", "desc": "其中 download 属性后面接的名字就是下载后默认设置好的文件下载名称，对于这个值没有限制，浏览器将自动检测正确的文件扩展名并添加到文件 (.img, .pdf, .txt, .html, 等等)。 标签的 rel 属性用于指定当前文档与被链接文档的关系。 只有在使用了 h…"}, {"id": "6844903824562323464", "title": "<head>标签里有什么?", "desc": "在 head 中可以出现任意多个 meta 标签。一般的 meta 标签由 name 和 content 两个属 性来定义。name 表示元信息的名，content 则用于表示元信息的值。 元数据就是描述数据的数据，而HTML有一个“官方的”方式来为一个文档添加元数据—— 元素…"}, {"id": "6844903592801861646", "title": "DOM部分扩展", "desc": "对DOM的两个主要扩展是Selectors API和HTML5。 Selectors API致力于让浏览器原生支持CSS查询。在没有原生支持之前，只能通过javascript代码来完成查询操作。之后，解析和树查询操作可以在浏览器内部通过编译后的代码来完成，极大地改善了性能。 q…"}, {"id": "6844903502850818056", "title": "玩转 React（四）- 创造一个新的 HTML 标签", "desc": "在第二篇文章 《新型前端开发方式》 中有说到 React 有很爽的一点就是给我们一种创造 HTML 标签的能力，那么今天这篇文章就详细讲解下 React 是如何提供这种能力的，作为前端开发者如何来运用这种能力。 在第三篇文章 《JavaScript代码里写HTML一样可以很优雅…"}, {"id": "7007969117508468767", "title": "模拟转盘抽奖的实现", "desc": "抽奖原理：点击转盘指针后随机得到一个数(每个数字对应一个奖项),并确定每个奖项在轮盘上的大概角度，然后调用 jqueryRotate.js插件来转动轮盘，并停在奖品的对应角度。当然也可以用抽奖的概率进"}, {"id": "7007971869655564324", "title": "HTML+CSS+JS实现React简单的计算器实例", "desc": "​ ​   ​ CSS样式： 部分HTML代码 : 上面的其他css样式和js等需要引入即可运行成功 、很简单"}, {"id": "7007203118798618661", "title": "原来3D感空间行星轨迹是这样画的", "desc": "我正在参加中秋创意投稿大赛，详情请看：中秋创意投稿大赛 背景 点击查看太阳、地球、月亮3D旋转 点击查看太阳、地球、月亮3D旋转源码 中秋佳节即将到来，远在他乡的孩子们马上可以回家和父母一起吃月饼，看"}, {"id": "7007775474919145502", "title": "HTML知识点总结", "desc": "总结一下HTML常问到的一些面试知识点，包括行内元素、块级元素；以及HTML5的语义化标签；Canvas绘图和SVG绘图；本地储存等"}, {"id": "7007590222800109598", "title": "HTML+CSS+JS实现卡通足球人物梅西ui特效", "desc": "HTML+CSS+JS实现卡通足球人物梅西ui特效 HTML+CSS+JS实现卡通足球人物梅西ui特效"}, {"id": "7007288677831278628", "title": "使用CSS实现中秋民风民俗-拜月", "desc": "拜月，在我国是一种十分古老的习俗，实际上是源自我国一些地方古人对“月神”的一种崇拜活动。中秋节是上古天象崇拜——敬月习俗的遗痕，祭月作为中秋节重要的祭礼之一，从古代延续至今，逐渐演化为民间的赏月、颂月"}, {"id": "7005407940609835015", "title": "❤️只用一个脚本做一个 刮刮乐 案例，一不小心刮出来一个女朋友！❤️【评论区抽奖送勋章】", "desc": "📢前言 前几天一个大哥：孤寒者 使用HTML做了一个刮刮乐，大家都挺喜欢看的！ 我也感觉挺好玩的，那就寻思用Unity肯定也能做呀！Unity 是一个容易上手的游戏引擎 做出来之后可以直接打包出来给别"}, {"id": "7007020234511450126", "title": "利用前端三件套完成超好看的中秋主题的宣传页！！！", "desc": "我正在参加中秋创意投稿大赛，详情请看：中秋创意投稿大赛 中秋主题--Html5宣传动画网页（swiper） 1）此demo利用了swiper框架，animat动画库，还有设置js代码来做到自适应移动端"}, {"id": "6981249521258856456", "title": "2天赚了4个W，手把手教你用Threejs搭建一个Web3D汽车展厅！", "desc": "事情是这样的，前段时间`外包工头`老杨又来找我了，说某汽车大品牌要开发一个网页展厅，希望可以在网页里360度展示它家新款汽车的3d模型，还要可以让用户DIY汽车部件的颜色。"}, {"id": "7005396679650181151", "title": "❤️使用 HTML、CSS 和 JS 创建响应式可过滤的游戏+工具展示页面 ❤️", "desc": "本篇文章会在评论区随机抽取两名小伙伴各送一枚掘金新版徽章 标题 抽奖注意事项 1. 不准刷评论（比如「踩踩」「支持」「欢迎回踩」等或类似评论），要以讨论文章内容为主。 2. 本着公平公正的原则会在9月"}, {"id": "7004742284033916941", "title": "HTML+CSS+JS实现 宇宙星球旋转动画特效", "desc": "​  ​HTML+CSS+JS实现 ❤️ 宇宙星球旋转动画特效❤️ ​ css样式： html : js文件在上面截图可以看到 需要引进来。 ​ ​"}, {"id": "7006681759559450632", "title": "常见的浏览器对象", "desc": "前端知识点复习过程，本文主要介绍一些常见的浏览器对象，并对其进行了一定的讲解。非常的详细。。。。。。"}, {"id": "7007691797421883406", "title": "HTML面试题收集", "desc": "ReadOnly和Disabled有何区别 相同点:都是使用户不能更改作用域中的内容 不同点: ReadOnly只对input(text/password),textarea有作用。Disabled对"}, {"id": "6986873449721364510", "title": "8则未必知道且超级实用的纯CSS布局排版技巧 | 网易四年实践", "desc": "开发每一张网页都离不开布局排版，基于良好布局排版打下基础，才能使后续的开发更顺利。今时不同往日，现代CSS属性能更好地快速实现各种布局排版，节约更多时间去摸鱼"}, {"id": "6998672428020793358", "title": "h5原生draggable拖拽事件详解", "desc": "这是我参与8月更文挑战的第4天，活动详情查看：8月更文挑战 拖拉事件 拖拉事件的种类 拖拉（drag）指的是，用户在某个对象上按下鼠标键不放，拖动它到另一个位置，然后释放鼠标键，将该对象放在那里。 拖"}, {"id": "6994587482851541005", "title": "【SSD系列】没了jquery, vue, react，你还会DOM节点的增删改查吗？", "desc": "什么是空白节点 ? querySelectorAll 有哪些坑? 怎么查询伪元素，四种删除节点方式你知道几种？我们一起了解DOM的增删改查。"}, {"id": "7005901644609093639", "title": "HTML+CSS+JS实现 slicebox酷炫3d图片轮播切换", "desc": "HTML+CSS+JS实现 ❤️slicebox酷炫3d图片轮播切换❤️​ CSS样式： HTML代码 : 上面的图片和JS以及CSS文件需要引入  ​"}, {"id": "7006521586836570126", "title": "如何判断元素是否在可视区域内呢？然后搞一些事情", "desc": "在学习判断元素是否在可视区域时，我们首先的了解一些元素的位置值和大小值。 元素的位置信息和大小 大部分属性都是对应的，所以下面都只写一个。 clientWidth：元素内容区宽度加上左右内边距宽度，即"}, {"id": "7003667297986412581", "title": "HTML+CSS+JS 实现 全屏图片手风琴效果", "desc": "​ css样式： html : 大家可以点赞、收藏、关注、评论我啦 、需要完整文件随时联系我或交流哟~！ ​"}, {"id": "7006240367662071844", "title": "HTML+CSS+JS团队人物图片蜂巢布局", "desc": "​ 效果演示： 博主首页免费获取    ​ ​ css样式： html : js文件在上面截图可以看到 需要引进来。 ​"}]